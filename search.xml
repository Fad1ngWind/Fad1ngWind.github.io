<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>STM32第一部分学习</title>
      <link href="/posts/7e330aba.html"/>
      <url>/posts/7e330aba.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>快速上手STM32外设</p></blockquote><h2 id="一、跑马灯"><a href="#一、跑马灯" class="headerlink" title="一、跑马灯"></a>一、跑马灯</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">delay_init();     </span><br><span class="line">LED_Init();  <span class="comment">// 需要初始化用到的模块（delay，LED）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">GPIO_ResetBits(GPIOC,GPIO_Pin_13);</span><br><span class="line">delay_ms(<span class="number">100</span>); </span><br><span class="line">GPIO_SetBits(GPIOC,GPIO_Pin_13);</span><br><span class="line">delay_ms(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>==GPIO_ResetBits置零（低电平），GPIO_SetBits置一（高电平）== 控制LED亮灭</p></li><li><p>go to definition到LED_Init内部一下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE); <span class="comment">// 使能总线时钟</span></span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13;        <span class="comment">// 初始化PC13引脚</span></span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;   <span class="comment">// 设置推挽输出</span></span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"><span class="comment">// 设置IO口速度GPIO_Speed_50MHz（一般默认50MHz）</span></span><br><span class="line">GPIO_Init(GPIOC, &amp;GPIO_InitStructure);  <span class="comment">// 把配置好的变量输入进去</span></span><br></pre></td></tr></table></figure><blockquote><p>以上是对GPIO_InitTypeDef结构体的初始化设置</p></blockquote></li><li><p>在led.c页面，在页面空白处右键，选择“toggle header”，进入led.h</p><p>  可写一个宏定义：==#define LED PCout（13）==<br>  PCout(13)=1; 这句就完全等于GPIO_SetBits(GPIOC,GPIO_Pin_13);<br>  PCout(13)=0; 这句就完全等于GPIO_ResetBits(GPIOC,GPIO_Pin_13);</p></li></ul><p>这样宏定义之后，控制PC13的电平就可以写得更简便</p><p>头文件中<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __LED_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __LED_H       </span></span><br><span class="line">… …</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><br>这一段是固定的，照着写即可。</p><hr><h2 id="二、按键"><a href="#二、按键" class="headerlink" title="二、按键"></a>二、按键</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">u8 a;</span><br><span class="line">delay_init();      </span><br><span class="line">LED_Init();</span><br><span class="line">KEY_Init(); <span class="comment">//按键初始化</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)     </span><br><span class="line">&#123;</span><br><span class="line">a=KEY_Scan(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(a==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">LED=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a==<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">LED=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>变量a被KEY_Scan函数的返回值赋了个值，如果是a=1就让灯亮，a=2灯灭，逻辑分析结束。</p></blockquote><ul><li><strong>key.c:</strong><br>![[屏幕截图 2025-03-30 170039.png|500]]<br>使能了PB4和PB5两个GPIO口，但GPIO模式配置成了GPIO_Mode_IPU==上拉输入模式==</li></ul><p>上拉输入的IO口在外部接这个IO口的电路（外部输入电路）为==低电平==时，IO口可以测到明确的==低电平==</p><p>上拉输入的IO口在外部接这个IO口的电路（外部输入电路）为==高电平==时，IO口可以测到明确的==高电平==</p><p>上拉输入的IO口在外部接这个IO口的电路（外部输入电路）为==高阻态==时，IO口可以测到明确的==高电平==</p><ul><li><strong>key.h:</strong><br>![[屏幕截图 2025-03-30 170719.png|500]]</li></ul><p>GPIO_ReadInputDataBit( )  这个函数就是检测IO口电平的核心函数，比如检测B4口的电平是高还是低：</p><p>if(GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_4) == 1)就可以简化为：<br>    if(KEY1 == 1)</p><p>==<strong>并且GPIO_ReadInputDataBit函数还能进一步简化：</strong>==<br>    就像第一节的PCout(13)一样：<br>int a;<br>a=PBin(4); 这个a如果为1那PB4就是高电平，0就是低电平。</p><h3 id="KEY-Scan-函数"><a href="#KEY-Scan-函数" class="headerlink" title="KEY_Scan 函数"></a><strong>KEY_Scan 函数</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">u8 <span class="title function_">KEY_Scan</span><span class="params">(u8 mode)</span></span><br><span class="line">&#123; </span><br><span class="line">    <span class="type">static</span> u8 key_up=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(mode) key_up=<span class="number">1</span>;  <span class="comment">// mode=0，不支持长按</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(key_up &amp;&amp; (KEY1==<span class="number">0</span> || KEY2==<span class="number">0</span>))  <span class="comment">//这句就在判断是否有任何按键被按下：没                                有按键被按下前，变量key_up一直都是1，所以符合条件</span></span><br><span class="line">    &#123;</span><br><span class="line">        delay_ms(<span class="number">10</span>);   <span class="comment">//消抖延时</span></span><br><span class="line">        <span class="keyword">if</span>(KEY1==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            key_up = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span> KEY1_PRESS;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(KEY2==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            key_up = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span> KEY2_PRESS; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(KEY1==<span class="number">1</span> &amp;&amp; KEY2==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        key_up = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="三、如何自己添加代码文件"><a href="#三、如何自己添加代码文件" class="headerlink" title="三、如何自己添加代码文件"></a>三、如何自己添加代码文件</h2><ul><li>创建相应模块文件夹，编写.h文件和.c文件代码（可复制粘贴）</li><li>配置编译器：点界面上方三色块，添加.c源文件；<pre><code>  点魔术棒 - C/C++ - Include Paths，添加.h头文件</code></pre></li><li>在main函数添加新的头文件（#include “key.h”）</li></ul><hr><h2 id="四、定时器中断"><a href="#四、定时器中断" class="headerlink" title="四、定时器中断"></a>四、定时器中断</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</span><br><span class="line">delay_init();      </span><br><span class="line">LED_Init();  </span><br><span class="line">TIM3_Init(<span class="number">20000</span><span class="number">-1</span>,<span class="number">720</span><span class="number">-1</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)     </span><br><span class="line">&#123;</span><br><span class="line">delay_ms(<span class="number">100</span>); </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>STM32的每个中断都有自己的抢占优先级和子优先级</strong><br>    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);  ==设置中断优先级分组为分组2==</p><ul><li><p><strong>定时器：</strong><br>  TIM2，TIM3，TIM4这三个是通用定时器，TIM1是高级定时器。<br>  可以认为定时器内部有个计数器，初始值是0，每过1ms，计数器+1，一直过了99ms，这时，定时器的计数器的值是99；紧接着到第100ms，计数器数到了100，但是计数器的值不是100，而是清零，然后继续从0开始数，<strong>==同时触发定时器中断==</strong>。</p></li><li><p><strong>tim.c:</strong><br>  ![[屏幕截图 2025-03-30 225527.png|575]]<br>  TIM3_IRQHandler函数 —— ==中断服务函数==（函数名是不能改的，可以在里面运行各种代码）<br>  TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;<br>  NVIC_InitTypeDef NVIC_InitStructure;<br>  上面这两句分别是==<strong>定时器配置结构体</strong>==和==<strong>中断配置结构体</strong>==</p></li></ul><p>TIM_GetITStatus函数，获取定时器相关中断的状态。<br>当一个中断状态是RESET时证明这个中断==还没==准备好触发；<br>当一个中断状态是SET时证明这个中断==已经==准备好触发；</p><h3 id="自动重装载值arr-amp-预分频系数psc"><a href="#自动重装载值arr-amp-预分频系数psc" class="headerlink" title="自动重装载值arr &amp; 预分频系数psc"></a>自动重装载值arr &amp; 预分频系数psc</h3><ul><li><strong>psc</strong><br>  作用：==对总线时钟的频率进行分频，分频之后的频率就是定时器计数频率==</li></ul><p>STM32F103C8T6最小系统板的STM32的系统总线时钟的频率是==72Mhz==，也就是72,000,000 Hz，<u>这个数值要记住！</u></p><p>定时器的psc参数对系统总线时钟频率分频，psc=720 – 1，那意思就是720分频，也就是分频后的频率是之前的1/720，如下：<script type="math/tex">\frac720 = 100000H</script>分频后的频率是100000Hz，也就是100KHz，也就是定时器3的计数器的计数频率是100KHz。<br>100KHz也就是一个周期0.00001秒，也就是定时器3的计数器每0.00001秒记一个数。</p><p>psc=720 – 1，-1是内部寄存器规定的：0是不分频，1是二分频，2是三分频，依次类推</p><ul><li><strong>arr</strong><br>  作用：规定==“数到多少就触发定时器更新中断”==<br>  例：规定让计数器从0数到100，1ms数一次。<u>这个“100”就是arr，arr=100。</u></li></ul><p>所以自动重装载值arr的作用就是这个的计数器要记到多少才能进一次中断<br>arr=20000，那就是计数器计两万次才进一次中断，也就是0.00001 * 20000=0.2秒进一次中断。</p><p>![[屏幕截图 2025-03-30 231312.png|575]]</p><blockquote><p>定时器的计数器随着时间计数，然后计数器达到arr值（TIMx_ARR）时，触发定时器更新中断，然后计数器清零继续重新计数。</p></blockquote><hr><h2 id="五、STM32标准库"><a href="#五、STM32标准库" class="headerlink" title="五、STM32标准库"></a>五、STM32标准库</h2><p><u>STM32F10x_FWLib</u> 文件夹即为STM32标准库的库函数<br>“stm32f10x_”这个前缀，代表这套库函数可用于STM32F1的所有系列</p><h3 id="“stm32f10x-gpio-c”"><a href="#“stm32f10x-gpio-c”" class="headerlink" title="“stm32f10x_gpio.c”"></a>“stm32f10x_gpio.c”</h3><p>“stm32f10x_gpio.c”就是操作gpio相关的库函数，比如之前用的：<br>![[屏幕截图 2025-03-31 230921.png|625]]<br>这些凡是操作GPIO的函数全是。<br>因为我们go to definition以上的任意一个函数，都会跳转到“stm32f10x_gpio.c”里去。</p><h3 id="“stm32f10x-rcc-c”"><a href="#“stm32f10x-rcc-c”" class="headerlink" title="“stm32f10x_rcc.c”"></a>“stm32f10x_rcc.c”</h3><p>![[屏幕截图 2025-03-31 231027.png]]</p><p>这句就是它的函数，RCC分配外设时钟。</p><h3 id="“stm32f10x-usart-c”"><a href="#“stm32f10x-usart-c”" class="headerlink" title="“stm32f10x_usart.c”"></a>“stm32f10x_usart.c”</h3><p>串口相关的库函数</p><h3 id="“misc-c”"><a href="#“misc-c”" class="headerlink" title="“misc.c”"></a>“misc.c”</h3><p>Misc是Miscellaneous（各种各样的）的缩写，杂项文件，里面主要装的是NVIC相关文件。也就是中断优先级分配相关，以后做项目几乎必用中断，所以提前加。</p><ul><li>以==用到单片机的什么外设就加什么库==的原则，这样可以节省单片机的内存。</li></ul><hr><h2 id="六、PWM控制舵机"><a href="#六、PWM控制舵机" class="headerlink" title="六、PWM控制舵机"></a>六、PWM控制舵机</h2><h3 id="PWM"><a href="#PWM" class="headerlink" title="PWM:"></a><strong>PWM:</strong></h3><p>新的参数：==TIMx_CCRx==<br>CCR寄存器的全称是CCR(Capture/Compare Register)的缩写，即：捕获/比较寄存器。</p><p>![[屏幕截图 2025-03-31 232005.png|575]]</p><blockquote><pre><code>                                                   **PWM的频率与arr和psc有关**</code></pre></blockquote><p>==CNT<CCR时，PWM是高电平； CNT>CCR时，PWM是低电平==<br>CCR寄存器有比较的功能,<strong>CCR寄存器确定了PWM的占空比</strong>。占空比英文是“duty”：</p><script type="math/tex; mode=display">duty = \frac</script><p>PWM的频率由arr和psc决定； PWM的占空比由CCR决定</p><ul><li><strong>舵机：</strong><br>一般的舵机（特指模拟舵机）有三根线，VCC，GND和SIG（signal信号）<br>分别是电源线，地线和信号线，信号线需要接具有定时器PWM输出通道的引脚（==复用==）</li></ul><ul><li><strong>代码：</strong><br>![[屏幕截图 2025-04-01 143327.png|500]]</li></ul><h3 id="TIM1-PWM-Init："><a href="#TIM1-PWM-Init：" class="headerlink" title="TIM1_PWM_Init："></a>TIM1_PWM_Init：</h3><p>先看TIM1_PWM_Init：<br>    两个形参是arr自动重装载值和psc预分频系数<br>    舵机的PWM周期必须为20ms（50Hz），所以先配置arr和psc这两个参数，让PWM的周期正好是20ms。<br>    设置自动重装载值arr=20000，预分频系数psc=72<br>    则定时器自动装载一次的周期为：1/(72000000/72) * 20000 = 0.02s = 20ms，符合要求。注意这里，arr设置得越大，PWM占空比的精度越高，因为：<script type="math/tex">duty = \frac</script><br>    ![[屏幕截图 2025-04-01 143943.png|550]]![[屏幕截图 2025-04-01 143951 2.png|550]]<br>    比定时器中断少了中断服务函数TIMx_IRQHandler，也没有了NVIC的相关配置。main函数内也少了中断优先级分组，因为生成PWM用不到定时器中断。</p><ul><li>多了新结构体TIM_OCInitTypeDef TIM_OCInitStructure<br>TIM_OCInitTypeDef 是==定时器输出通道配置结构体==，带OC字样的都是其相关的配置，OC（Output Channel），输出通道。</li></ul><p>看代码，首先：<br>![[屏幕截图 2025-04-01 144711.png|625]]<br>==三个结构体：GPIO配置、定时器配置、定时器输出通道配置。==<br>两个RCC外设时钟使能：使能TIM1和GPIOA的外设。TIM1和GPIOA都在APB2总线上</p><p>接着相应的IO使能：<br>![[屏幕截图 2025-04-01 144943.png|600]]</p><blockquote><p>A8~A11，TIM1的四个PWM通道。<br>GPIO_Mode_AF_PP==复用推挽输出模式</p></blockquote><p><u>推挽输出和复用推挽输出的不同在于：<br>推挽输出是GPIO自己通过函数控制电平高低，比如PCout(13)=1;<br>复用推挽输出是GPIO把电平高低的控制权给了外设，这里就是给了TIM1，GPIO不管了，电平高还是低让TIM1自己去控制。</u></p><ul><li><p>定时器的参数配置</p></li><li><p>输出通道参数配置<br>  TIM_OCMode，配置为PWM模式1：TIM_OCMode_PWM1<br>  PWM模式1：递增计数时，当TIMx_CNT（计数值）<TIMx_CCR（捕获/比较值）时，输出为==有效电平==，否则为==无效电平==。  PWM模式2：递增计数时，当TIMx_CNT（计数值）< TIMx_CCR（捕获/比较值）时，输出为==无效电平==，否则为==有效电平==。  ![[屏幕截图 2025-04-02 134915.png|525]]  输出极性高：<u>有效电平为高电平&lt;/u&gt;<br>  输出极性低：<u>有效电平为低电平</u><br>  ==实际输出的电平是由输出极性和电平是否有效共同决定的==</p><p>   TIM_OutputState是输出模式是否开启，开启才能输出PWM，填TIM_OutputState_Enable。</p><p>  TIM_Pulse，意思是TIM_CCRx的初始值，一般都统一设为0。</p></li></ul><p>然后四句就是输出通道1~4的配置参数上传函数。</p><p>![[屏幕截图 2025-04-02 135424.png|575]]</p><blockquote><p>以上是可以不管的，写上即可</p></blockquote><p>最后一句<u>TIM_Cmd(TIM1, ENABLE)</u>,开启定时器</p><h3 id="TIM-SetComparex"><a href="#TIM-SetComparex" class="headerlink" title="TIM_SetComparex"></a>TIM_SetComparex</h3><p>![[屏幕截图 2025-04-02 140019.png|575]]<br>TIM_SetCompare1(TIM1,500)的意思就是设置定时器1的通道1的CCR值为500。<br>TIM_SetCompare2(TIM1,500)的意思就是设置定时器1的通道2的CCR值为500。</p><p>占空比公式：<script type="math/tex">duty = \frac</script><br>所以TIM_SetCompare1(TIM1,500);这句话的作用就是把TIM1_CH1的占空比改为：500/20000=2.5%，对应舵机的0°位置；<br>同理，后面TIM_SetCompare1(TIM1,2500)就是把占空比改为：<br>2500/20000=12.5%，对应舵机的180°位置</p><p>2025.4.2，还是没能明白占空比与舵机角度之间的对应关系，明白了回来还愿</p><hr><h2 id="七、仿真-amp-实物debug"><a href="#七、仿真-amp-实物debug" class="headerlink" title="七、仿真&amp;实物debug"></a>七、仿真&amp;实物debug</h2><p>看教程即可。</p><hr><h2 id="八、OLED显示"><a href="#八、OLED显示" class="headerlink" title="八、OLED显示"></a>八、OLED显示</h2><p>先看代码：<br>![[屏幕截图 2025-04-02 162732.png|600]]</p><ul><li>OLED_Clear 作用：清屏</li><li><p>OLED_ShowString（x，y，内容，字体大小），xy代表坐标值<br>  x的范围（0,127）<br>  y的范围：</p><pre><code>  如果字体高度为8，行数的范围是0到7。  如果文字高度为16，那只能塞下四行，对应的行数就只有0,2,4,6这四个值。</code></pre><p>  内容：注意（u8 * ）<br>  字体大小：8 / 16</p></li><li><p>OLED_Init函数<br>![[屏幕截图 2025-04-02 163421.png|625]]</p></li></ul><p>PA6，PA7接口可以随意更换：GPIO初始化换成任意其他的两个IO后，在oled.h更改宏定义</p><h3 id="sprintf函数"><a href="#sprintf函数" class="headerlink" title="sprintf函数"></a>sprintf函数</h3><p>利用sprintf可以轻松处理一个的字符串，==<strong>让一些变量值插入字符串</strong>==。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sprintf</span>(text,<span class="string">&quot;you have %d yuan!&quot;</span>, your_money);</span><br></pre></td></tr></table></figure></p><blockquote><p>此函数的作用就是将your_money变量的值插入字符串，并且将加工好的字符串赋值给text变量，text[20]是一个字符串。</p></blockquote><p>之后就可以使用OLED屏幕显示信息了</p><hr><h2 id="九、红外寻迹传感器"><a href="#九、红外寻迹传感器" class="headerlink" title="九、红外寻迹传感器"></a>九、红外寻迹传感器</h2><ul><li><strong>红外传感器原理：</strong><br>  红外发射管不断发射红外线，红外接收管不断接收是否有红外线反射回来。<br>  当红外线没有被反射回来，红外接收管关断，此时模块的输出端为==<strong>低电平</strong>==。<br>  当红外线被反射回来，红外接收管导通，此时对应的输出端就是==<strong>高电平</strong>==。</li><li>即：<br>  如果某个传感器检测到==白色==，那就输出==高电平“1”==；<br>  如果某个传感器检测到==黑色==，那就输出==低电平“0”==；</li></ul><p>看代码：<br>![[屏幕截图 2025-04-02 231445.png|525]]<br>extern：==外部调用==，定义一个==全局变量==<br>不在任何一个函数里，添加一句：extern int track_error;</p><ul><li><p><strong>track_Init:</strong><br>![[屏幕截图 2025-04-02 231924.png|650]]</p><blockquote><p>初始化了五个GPIO，==浮空输入==，用于检测循迹传感器的OUT1-OUT5。</p></blockquote><p>  浮空输入完全取决于外部输入信号，外部输入是1那就是1，外部输入是0就是0，外部输入是高阻态那就电平不确定。</p></li><li><p><strong>track.h:</strong><br>![[屏幕截图 2025-04-02 232117.png|600]]</p><blockquote><pre><code>    GPIO_ReadInputDataBit的作用就是读取一个IO口电平的高低，高电平即1，低电平即0</code></pre></blockquote><p>==##define OUT1 GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_4)==<br>==##define OUT1 PAin(4)==<br>以上两句是功能完全一样的，两种不同写法。</p></li></ul><hr><h2 id="十、超声波测距-amp-定时器计时"><a href="#十、超声波测距-amp-定时器计时" class="headerlink" title="十、超声波测距  &amp; 定时器计时"></a>十、超声波测距  &amp; 定时器计时</h2><p>*1. 会使用超声波测距   2. 会使用定时器进行计时   3. 提升C语言算法功底</p><h3 id="HC-SR04"><a href="#HC-SR04" class="headerlink" title="HC-SR04"></a>HC-SR04</h3><p>VCC：==电源线，3-5.5V宽电压输入==<br>GND：地线，连接单片机的接地（GND）<br>TRIG：==触发==控制信号输入<br>ECHO：==回响==信号输出</p><ul><li><strong>工作原理：</strong><br>(1)TRIG口 触发测距，给TRIG口最少 10us 的高电平。<br>(2)模块内部自动发送 8 个 40khz 的方波，自动检测是否有声波返回；（这一步我们了解即可，这是超声波传感器内部在干的事，无需我们操作）<br>(3)若有信号返回，经过模块内部运算后，通过 ECHO口 输出一个高电平，==高电平持续的时间就是超声波从发射到返回的时间。==</li></ul><p><strong>测量距离=(高电平时间* 声速)/2</strong></p><p>所以只需要：</p><ol><li><p>给TRIG口一个10us以上的高电平，去触发测量任务。<br>  把随便一个IO口搞成推挽输出，接到TRIG上去，然后电平置高，delay_us(11)，延时十微秒以上即可</p></li><li><p>传感器的测量任务进行完之后，ECHO会发出一段时间的高电平，这段高电平的持续时间经过换算就能得到待测距离。<br> 需要测量高电平持续时间</p><pre><code> 1. 测量高电平：     使用==GPIO_ReadInputDataBit==函数不断检测ECHO口电平，一旦电平变化就开始计时。 2. 测量高电平的持续时间     在高电平到来瞬间打开定时器开始计数，等到高电平结束关闭定时器。     CNT清零的同时会进定时器更新中断，我们可以在定时器中断里记录，每进一次定时器中断，记录清零次数+1。     再就是把ARR的值设置得尽量大一点，降低定时器更新中断的触发频率，比如arr=10和arr=65535，如果arr=10，程序会不停进入定时器更新中断以至于大量资源被占用，main函数while(1)的东西可能都执行不了了。</code></pre></li></ol><p>看代码：</p><ul><li>main:<br>![[屏幕截图 2025-04-03 232633.png|600]]<blockquote><p>选用定时器4。<br>psc=0=1-1，也就是计数频率是72MHz，不分频，为了让计数器的计数精度足够高<br>arr=65535，arr能取到的最大值就是65535。</p></blockquote></li></ul><ul><li><p>HC_SR04_Init:<br>![[屏幕截图 2025-04-03 232459.png|650]]</p><blockquote><p>Trig口推挽，echo口浮空<br>置低trig口，保持低电平，因为trig置高是开始测距的信号</p></blockquote></li><li><p>Senor_Using<br>![[屏幕截图 2025-04-08 223418.png|625]]</p></li></ul><p>第一句 extern int overcount 来自TIM4的中断服务函数，代表TIM4_CNT清零的次数。</p><p>while1 中：<br>    前三句用于操作trig口触发超声波开始测距<br>    ==while(GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_12) == RESET);==<br>    <strong>只要PA12是低电平，循环就一直进行<br>    也就是PA12（ECHO）一旦变成高电平，马上跳出这个循环</strong><br>    然后给相关变量清零：<br>        overcount=0;<br>        ==TIM4-&gt;CNT=0==（给TIM4的计数器清零）<br>        再TIM_Cmd(TIM4,ENABLE);开启定时器，定时器计数器就会开始递增，CNT到最大值清零并触发中断，中断内通过overcount记录清零次数。</p><p>再看后半段程序：<br>    变量i记录第几次测距，测五次取平均值（==均值滤波==）<br>    ==while(GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_12) == SET);==<br>    <strong>一旦检测到echo口变低，说明返回的超声波已经接收到了，就跳出循环</strong><br>    TIM_Cmd(TIM4,DISABLE);//关闭定时器，计数器也会停止计数。<br>    使用TIM_GetCounter函数得到定时器4计数器目前的值，这句代码等同于：tim=TIM4-&gt;CNT;</p><p>length计算公式：<br>    tim+overcount <em> 65536就是定时器这段时间总共计了多少个数<br>    高电平时间=总计数值 </em> 计数周期= (tim+overcount <em> 65536) </em> ( 1/72000000)</p><hr><h2 id="十一、直流有刷电机控制"><a href="#十一、直流有刷电机控制" class="headerlink" title="十一、直流有刷电机控制"></a>十一、直流有刷电机控制</h2><h3 id="L298N"><a href="#L298N" class="headerlink" title="L298N"></a>L298N</h3><p>L298N芯片内部集成有两个<strong>H桥电机驱动电路</strong><br>![[屏幕截图 2025-04-10 081014.png|500]]<br>中间这个圆圈代表<strong>直流电机</strong>。<br>已知<strong>S8050</strong>型号的三极管是<strong>NPN型三极管</strong>，<strong>S8550</strong>型号的三极管是<strong>PNP型三极管</strong>。<br>==(对于NPN型三极管，IN端给高电平开关导通；给低电平开关关断。PNP型三极管完全相反)==</p><ul><li><strong>分析：</strong><br>当IN1=1，IN2=0时：<br>Q1,Q4导通，Q2,Q3关断，电流流向如下图，定义此时电机正转：<br>![[屏幕截图 2025-04-10 081425.png|500]]</li></ul><p>当IN1=0，IN2=1时：电机电流与上图方向相反，所以电机反转。<br>![[屏幕截图 2025-04-10 081530.png|500]]</p><ul><li><p><strong>控制转速：</strong><br>  把IN1和IN2换成两路PWM控制<br>  比如当IN1占空比是0，IN2占空比是100%时，电机全速转<br>  但是当IN1占空比是0，IN2占空比是50%时，电机以全速的1/2转</p></li><li><p><strong>L298N引脚</strong><br>![[屏幕截图 2025-04-10 081913.png|500]]</p></li></ul><blockquote><pre><code>   ‘’通道A使能”、“通道B使能”、“板载5V使能”三个跳线帽都不能拔掉   电机A/B通道无法使能的话，对应通道的电机就不会转;   板载5V跳线帽拔掉，5V输出就没有了   用12V锂电池供电</code></pre></blockquote><ul><li><strong>L298N电路</strong><br>![[屏幕截图 2025-04-10 082354.png|500]]</li></ul><p>右边蓝色的八个二极管作用：<br>    四个钳位电路，将连接电机输出所有通道的电压值钳位在0-Vss（0-12V之间）<br>    因为电机是一种特别容易产生干扰的电气设备，==电动机反过来就是发电机==，如果不通电，手摇电机，就会产生不小的<strong><em>反电动势</em></strong>；如果发生电机急停等，电路电压就会产生很大的尖峰等干扰，电压一下会波动高于12V，如果不做钳位，可能就会对L2998N芯片等产生损害。</p><hr><ul><li><strong>代码分析：</strong><br>![[屏幕截图 2025-04-10 082656.png|500]]<blockquote><pre><code>   使输出PWM赫兹为24kHz（芯片推荐的PWM频率）</code></pre></blockquote></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">注意不同的电机有不同的额定电压</span><br><span class="line">额定电压是12V的电机，用12V电池供电，那PWM占空比就可以开到100%，让电机两端电压在12V。</span><br><span class="line">但是如果电机额定电压是8V，大于8V会烧坏电机。所以如果还是使用12V电池供电，PWM控制占空比最大只能开到66.6%。</span><br></pre></td></tr></table></figure><hr><h2 id="十二、电机编码器测速"><a href="#十二、电机编码器测速" class="headerlink" title="十二、电机编码器测速"></a>十二、电机编码器测速</h2><h3 id="编码器"><a href="#编码器" class="headerlink" title="编码器"></a>编码器</h3><p>首先我们要知道，==电机是电机，编码器是编码器==，这两个东西是各自独立的<br>13线霍尔款编码器原理如下图：<br>![[屏幕截图 2025-04-10 083844.png|500]]</p><ol><li>上图这个刻度盘安装在电机转轴上，随着电机一起旋转；</li><li>刻度盘上有一条条等间距的缝隙；</li><li>右边是个小红外灯（发光元件），一直向左边的光敏元件发射激光，但是刻度盘会把光挡住，激光只能穿过刻度盘的一条条缝隙射给光敏元件，如下图： ![[屏幕截图 2025-04-10 084120.png|500]]<br> 刻度盘一直转，光敏元件就能得到==一个循环被照和不被照==的==类似PWM的信号==，得到一个如下图A相那样的波：<br> ![[屏幕截图 2025-04-10 084245.png|500]]<br> 如果说刻度盘上共有25个缝隙。那么我们可以统计一段时间内<u>A波形所有高电平的数量</u>来得出刻度盘一共转了多少个==缝隙==，也就是多少个==刻度==。<strong>==并且能算出刻度盘转到了什么位置==</strong>。<br> 比如我们测得，10秒内，高电平共来了67个，那么也就是这个电机十秒转了67/25=2.68转，也就是十秒内的平均转速是0.268r/s</li></ol><p>这样我们就实现编码器测速了。</p><ul><li>==但是这样有个问题==，不知道盘转的方向，正转反转都是这样一个波！而且如果电机就来回正反转打哆嗦，这样始终就是同一个缝隙来回被光穿过，这样好像也能得到A波，这咋办呢？</li></ul><p>解决方法就是把刻度盘的==内圈==再刻上一圈与原缝隙错开90°的缝隙，然后再拿一个光敏元件和发光元件！如下图：![[屏幕截图 2025-04-10 084644.png|500]]这样就会得到如下两条锯齿波：<br>![[屏幕截图 2025-04-10 084733.png|500]]</p><p>A和B两组波形相位差是90º，可以按照下图判断出旋转方向：<br>![[屏幕截图 2025-04-10 084827.png|500]]<br>并且再进一步：通过观察上面AB相的波我们发现，圆盘向某个方向一直旋转，AB两相就是这四个状态周而复始。<br>![[屏幕截图 2025-04-10 085148.png|500]]</p><ul><li>由于该编码器为13线，也就是线数为13ppr，也就是刻度盘上每相都有13个==缝隙==；<br>  电机每转一圈，A或B相的脉冲数都是13；也就是电机转一圈A相和B相就分别有13个脉冲。<br>  而这个电机的减速器减速比为1：30：<pre><code>  也就是电机转30圈，输出转轴转一圈；编码器轴是连接在里面的电机轴上的，不是接在输出转轴上的。</code></pre>  综合==编码器线数==和==减速器减速比==，得出最外面的电机输出转轴转1圈，里面的霍尔编码器A或B相会有<u>13 * 90 = 390 个脉冲</u>。</li></ul><hr><ul><li><strong>看代码：</strong><br>![[屏幕截图 2025-04-10 085540.png|525]]<blockquote><pre><code>   使用了三个定时器</code></pre></blockquote></li></ul><p>先看TIM4_ENCODE_Init：<br>    编码器正交解码用的定时器4。<br>    多了一个IC结构体。（input channel， 输出通道）![[屏幕截图 2025-04-10 085754.png|500]]![[屏幕截图 2025-04-10 085759.png|750]]<br>    以上代码只需要复制黏贴就好了，除了第一句函数的第一个参数<br>    第一句是一个非常重要的库函数：<u><strong>编码器模式设置函数</strong></u>。<br>        TIM_EncoderMode_TI1代表仅TI1计数；<br>        TIM_EncoderMode_TI2代表仅TI2计数；<br>        TIM_EncoderMode_TI12代表TI1 TI2都计数。<br>        TI1就是输入通道1，就是PB6，就是编码器A相；<br>        TI2就是输入通道2，就是PB7，就是编码器B相。<br>        这个参数的意思具体看下面这两个图：![[屏幕截图 2025-04-10 090236.png|550]]<br>    我们使用的模式就是TI12都计数，也就是：![[屏幕截图 2025-04-10 090418.png|275]]观察上面三个图可知，只有正确的连续四个AB状态才会成功进行下一次计数，<br>    一旦有一个毛刺，发现顺序不对了就退回到上次顺序正确时候的计数值。<br>    ——————————————————————————————————————————<br>    再来看定时器的配置：![[屏幕截图 2025-04-10 090609.png|575]]<br>    为了保证最高的采样精度，psc不分频，72MHz。<br>    arr的值是综合了编码器线数、减速器减速比和通道采样方式的一个值：<br>    13ppr的编码器，1:30的减速器下，电机外转轴转一圈A或B相会有390个脉冲，但并不是A或B相来一个脉冲计数器计一次数，我们设置了TI12都计数，那就是每个AB相的正交脉冲组合都算作一次计数：<em>四个组合都算作计一次数，也就是全部的arr需要390 </em> 4=1560。*<br>    最后得出==电机输出转轴转一圈会有1560个状态==，定时器的计数器计1560个数。</p><ul><li><p>定时器4的中断服务函数：<br>  ![[屏幕截图 2025-04-10 090908.png|550]]<br>  每当更新中断（计数器溢出）来临，要先判断定时器是向上溢出还是向下溢出：<br>  “TIM4-&gt;CR1&gt;&gt;4&amp;0x01”这一堆就是调用了定时器4相关寄存器的相应位，<br>  结果=0就是向上溢出，结果=1就是向下溢出。<br>  向上溢出就是计数器计数到了1557、1558、1559，然后清零，0。<br>  向下溢出就是4,3,2,1,0，然后CNT=arr，1559,1558,1557。</p></li><li><p>定时器3的中断服务函数：<br>  ![[屏幕截图 2025-04-10 091205.png|700]]<br>  speed就是速度，单位是转每秒<br>  ==TIM4-&gt;CNT==的值就是定时器4计数器当前时刻的值，范围是0-1559。<br>  Last_num变量存着上次采样时TIM4-&gt;CNT的值，last_count存着上次采样的圈数，这次的和上次的一减，就是△X，△X/△t就是速度，△t是通过定时器3的psc和arr决定的，我们配置的是0.1秒，△t=0.1s。</p></li></ul><p>用到的三个定时器都是用作了不同的功能：<br>定时器1用于生成PWM控制电机。<br>定时器3用于多线程任务，计算电机转速。<br>定时器4用于编码器正交解码。</p><hr><h2 id="十三、电机PID闭环控制"><a href="#十三、电机PID闭环控制" class="headerlink" title="十三、电机PID闭环控制"></a>十三、电机PID闭环控制</h2><ul><li>先看代码：<br>  ![[屏幕截图 2025-04-23 172219 1.png|550]]<br>  定时器1：生成PWM<br>  定时器2：生成0.1s的定时器中断PID计算<br>  定时器3：生成0.1s的定时器中断电机编码器测速<br>  定时器4：正交解码</li></ul><h3 id="PID算法的原理和用法"><a href="#PID算法的原理和用法" class="headerlink" title="==PID算法的原理和用法=="></a><em>==PID算法的原理和用法==</em></h3><p>==PID（Proportional-Integral-Derivative）（比例-积分-微分）==算法是一种常用的反馈控制算法，广泛应用于自动控制系统中。它通过测量系统的误差（目标值与实际值之间的差异）来调整控制器的输出，以使系统的响应满足特定的要求。</p><h4 id="比例项P"><a href="#比例项P" class="headerlink" title="==比例项P=="></a><em>==比例项P==</em></h4><p>PID（位置式）：</p><script type="math/tex; mode=display">u = P*e + I*\int e + D*\mathop e\limits^ \bullet</script><p><em>P、I、D三个参数是确定不变的：也就是在自动控制中，这三个参数最初设定是多少就永远是多少；</em><br><em>上式中，u就是output，输出值；</em><br><em>e就是error，误差值，作为输入。</em></p><p><strong>比例控制P越大，接近目标值的速度越快，但是提升控制速度的代价是==超调==和==震荡==会随着P的增大而增大；P过大会使系统失稳。</strong><br>![[屏幕截图 2025-04-23 174358.png|425]]</p><h4 id="微分项D"><a href="#微分项D" class="headerlink" title="==微分项D=="></a><em>==微分项D==</em></h4><p>这时候就要引入D了，微分：</p><script type="math/tex; mode=display">u = P*e + D*\mathop e\limits^ \bullet</script><p>e上加一个点代表是e的微分。微分==离散化==之后就是e-e_last，e是这一次的误差，e_last是上一次的误差，于是公式就变成了：</p><script type="math/tex; mode=display">u = P*e + D*(e - {e_{last}}) = P*e + D*\Delta</script><p>D项相当于一个阻尼项，可以让控制更加平缓，不会有过猛过冲的情况，同理，D项最重要的作用就是消除超调量![[屏幕截图 2025-04-23 174422.png|625]]</p><h4 id="积分项I"><a href="#积分项I" class="headerlink" title="==积分项I=="></a><em>==积分项I==</em></h4><script type="math/tex; mode=display">u = P*e + I*\int e + D*\mathop e\limits^ \bullet</script><p>积分项I就是专门来消除静态误差的，加入积分项，PID就全了。<br>跟前面一样，把公式离散化：</p><script type="math/tex; mode=display">u = P*e + I*\sum e + D*\Delta e</script><p><strong>但是积分项I过大也会引起超调增大以及失稳，而且I过大会导致系统滞后，也就是调节效果慢半拍，降低系统快速性。</strong></p><h4 id="位置式PID和增量式PID"><a href="#位置式PID和增量式PID" class="headerlink" title="位置式PID和增量式PID"></a>位置式PID和增量式PID</h4><p>连续的PID公式：<script type="math/tex">u = P*e + I*\int e + D*\mathop e\limits^ \bullet</script>将其离散化，得到离散位置式PID公式：<script type="math/tex">u(k) = P*e(k) + I*\sum\limits_{i = 1}^k {e(i)} + D*[e(k) - e(k - 1)</script>K代表第k次PID调节，u(k)就是本次的输出值。</p><p><strong>增量式PID：</strong><br>增量的意思就是本次输出量和上次输出量的差值，比如第k次PID：<script type="math/tex">u(k) = P*e(k) + I*\sum\limits_{i = 1}^k {e(i)} + D*[e(k) - e(k - 1)</script>那上次就是k-1次PID：<script type="math/tex">u(k - 1) = P*e(k - 1) + I*\sum\limits_{i = 1}^{k - 1} {e(i)} + D*[e(k - 1) - e(k - 2)</script>两式一减就是增量式：<script type="math/tex">\Delta u(k) = u(k) - u(k - 1)$$$$\Delta u(k) = P*[e(k) - e(k - 1)] + I*e(k) + D*[e(k) - 2*e(k - 1) + e(k - 2)</script>△u(k)是输出值的增量，==也就是上一次的输出值加上△u(k)就是这一次的输出值。==</p><p><strong>两种PID的应用场合：</strong><br>（1）==位置式PID控制器==适用于需要快速响应和精确控制的场景。比如，在电机控制中，需要控制电机的转速或位置，使其能够快速响应并准确控制，这时可以使用位置式PID控制器。又如，在温度控制中，需要控制温度的精度和稳定性，这时也可以使用位置式PID控制器，同时位置式PID中，I项是会产生滞后，增加准确性的作用，为了系统的快速性，有可能I项直接不用，只用PD控制。</p><p>（2）==增量式PID控制器==适用于需要较强稳定性和对测量噪声较高的场景。比如，在机器人控制中，需要控制机器人的运动轨迹，这时可以使用增量式PID控制器，因为机器人在运动过程中，往往受到各种干扰，如摩擦力、惯性力等，增量式PID控制器对这些干扰有较强的稳定性；又如，在液位控制中，需要控制液位的高度和稳定性，这时也可以使用增量式PID控制器，因为在液位测量中，测量信号通常存在一定的噪声和波动，增量式PID控制器可以较好地抵抗这些干扰。</p><ul><li>**位置式PID代码：<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;pid.h&quot;</span></span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> err_last=<span class="number">0</span>;                <span class="comment">//上次的误差</span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> err=<span class="number">0</span>;                        <span class="comment">//本次的误差</span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> Integral_err=<span class="number">0</span>;    <span class="comment">//累计的误差</span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> P=<span class="number">0</span>;<span class="comment">//         //P</span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> I=<span class="number">0</span>;<span class="comment">//           //I</span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> D=<span class="number">0</span>;<span class="comment">//         //D</span></span><br><span class="line"><span class="type">float</span> a_m=<span class="number">0.0</span>;                            <span class="comment">//输出值</span></span><br><span class="line"><span class="type">float</span> <span class="title function_">pid_control</span><span class="params">(<span class="type">float</span> speed)</span></span><br><span class="line"> &#123;     </span><br><span class="line">    err=(aim_v - now_v);           <span class="comment">//获得本次误差</span></span><br><span class="line">    Integral_err += err;             <span class="comment">//获得累加误差</span></span><br><span class="line">    a_m = P * err + I * Integral_err + D * (err - err_last); <span class="comment">//位置式PID公式</span></span><br><span class="line">    a_m = a_m&lt;<span class="number">10000</span>?a_m:<span class="number">10000</span>;   <span class="comment">//对输出值进行限幅</span></span><br><span class="line">    a_m = a_m&gt;<span class="number">-10000</span>?a_m:<span class="number">-10000</span>;</span><br><span class="line">    <span class="keyword">return</span> a_m;                       <span class="comment">//输出a_m</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>a_m = a_m<10000?a_m:10000;              ==输出限幅==很重要a_m = a_m>-10000?a_m:-10000;</p></blockquote><ul><li><p>**增量式PID代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;pid.h&quot;</span></span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> err_last_last=<span class="number">0</span>;      <span class="comment">//上上次的误差</span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> err_last=<span class="number">0</span>;          <span class="comment">//上次的误差</span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> err=<span class="number">0</span>;                  <span class="comment">//本次的误差</span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> P=<span class="number">0</span>;             <span class="comment">//参数P</span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> I=<span class="number">0</span>;              <span class="comment">//参数I</span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> D=<span class="number">0</span>;            <span class="comment">//参数D</span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> off_cal = <span class="number">0</span>;</span><br><span class="line"><span class="type">float</span> a_m=<span class="number">0.0</span>;                      <span class="comment">//输出值</span></span><br><span class="line"><span class="type">float</span> <span class="title function_">pid_control</span><span class="params">(<span class="type">float</span> speed)</span></span><br><span class="line"> &#123;     </span><br><span class="line">    err_last_last=err_last;       <span class="comment">//更新上上次的误差</span></span><br><span class="line">    err_last=err;                   <span class="comment">//更新上次的误差</span></span><br><span class="line">    err=(aim_v - now_v);             <span class="comment">//更新本次误差</span></span><br><span class="line">    off_cal = P * (err - err_last) + I * err + D * (err + err_last_last - <span class="number">2</span> * err_last); <span class="comment">//增量式PID的公式</span></span><br><span class="line">    a_m+= off_cal;                    <span class="comment">//得到输出值</span></span><br><span class="line">    a_m = a_m&lt;<span class="number">10000</span>?a_m:<span class="number">10000</span>;     <span class="comment">//对输出值进行限幅</span></span><br><span class="line">    a_m = a_m&gt;<span class="number">-10000</span>?a_m:<span class="number">-10000</span>;</span><br><span class="line">    <span class="keyword">return</span> a_m;                        <span class="comment">//输出a_m</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>电机速度闭环控制及调参方法</strong></p></li></ul><ol><li>把P、I、D三个参数都调成0</li><li><br>先调P，P从0开始缓慢增大，比如先让P=0.1，观察速度变化，一旦电机一上电，速度超过了目标值，比如2.5r/s，说明有超调了，这时候快速性已经没问题了。</li><li><br>然后慢慢增大D，增加阻尼，减小超调，稍微增大D，观察速度变化，让电机上电后快速稳定在2r/s，即参数调试完成。</li><li><br>速度闭环控制中，积分项I的作用不大，因为发现并没有静态误差，就没有调积分项。</li></ol><hr><h2 id="十四、Ozone变量可视化"><a href="#十四、Ozone变量可视化" class="headerlink" title="十四、Ozone变量可视化"></a>十四、Ozone变量可视化</h2><p>看教程即可。</p><hr><h2 id="十五、I2C底层通信"><a href="#十五、I2C底层通信" class="headerlink" title="十五、I2C底层通信"></a>十五、I2C底层通信</h2><p>[[SPI、UART、RS232、RS485、IIC 通信总线协议]]</p><ul><li><p>i2c.c：<br>![[屏幕截图 2025-04-24 175723.png|575]]<br>引脚的初始化，两个推挽输出。SCL是时钟信号，STM32是主机，负责发出时钟信号，所以IO模式使用推挽输出。</p></li><li><p>i2c.h：<br>![[屏幕截图 2025-04-24 180116.png|600]]</p><blockquote><pre><code>   直接控制了STM32的寄存器，没有任何库函数</code></pre></blockquote></li></ul><h3 id="位操作"><a href="#位操作" class="headerlink" title="位操作"></a>位操作</h3><ul><li>STM32F1xx的中文参考手册:<br>![[屏幕截图 2025-04-24 180512.png|650]]<br>32位寄存器，管GPIO低八位的模式，比如是GPIOA，那就管着GPIOA.0 – GPIOA.7这八个脚。</li></ul><p>&amp; | &lt;&lt; &gt;&gt; ~ ^ 这六个属于==位运算符==，<br>分别代表“与运算”，“或运算”，“左移”，“右移”，“按位取反”，“按位异或”。</p><p>GPIOA-&gt;CRL&amp;=0XFF0FFFFF：<br>0XFF0FFFFF  <u>十六进制转二进制为：</u>  “1111 1111 0000 1111 1111 1111 1111 1111”<br>GPIOA-&gt;CRL&amp;=0XFF0FFFFF也就是GPIOA-&gt;CRL=GPIOA-&gt;CRL&amp;0XFF0FFFFF<br>对比上图，也就是==把GPIOA_CRL寄存器的23~20位全部置0==，也就是让5号口的所有配置全部置0</p><p>GPIOA-&gt;CRL|=(u32)8&lt;&lt;20; ，这个“(u32)8”，8是十进制，被强制转换成了无符号32位，那就是：<br>(u32)8等价于“0000 0000 0000 0000 0000 0000 0000 1000”。<br>“&lt;&lt;20”就是把(u32)8左移20位：<br>“0000 0000 0000 0000 0000 0000 0000 1000”左移20位变成了：<br>“0000 0000 1000 0000 0000 0000 0000 0000”<br>左移之后再或运算“|”，这其实就是把23~20位，也就是A5口的这四个位配置为：![[屏幕截图 2025-04-24 181803.png|319]]1000，对照表可知：<br>![[屏幕截图 2025-04-24 182008.png|675]]<br>==1000对应着上/下拉输入。==<br>具体是上拉还是下拉，用PAout(5)这个函数决定</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">上拉输入的IO口在外部接IO口的电路（外部输入电路）为低电平时，IO口可以测到明确的低电平；</span><br><span class="line">上拉输入的IO口在外部接IO口的电路（外部输入电路）为高电平时，IO口可以测到明确的高电平；</span><br><span class="line">上拉输入的IO口在外部接IO口的电路（外部输入电路）为高阻态时，IO口可以测到明确的高电平；</span><br><span class="line"></span><br><span class="line">下拉输入的IO口在外部接IO口的电路（外部输入电路）为低电平时，IO口可以测到明确的低电平；</span><br><span class="line">下拉输入的IO口在外部接IO口的电路（外部输入电路）为高电平时，IO口可以测到明确的高电平；</span><br><span class="line">下拉输入的IO口在外部接IO口的电路（外部输入电路）为高阻态时，IO口可以测到明确的低电平；</span><br></pre></td></tr></table></figure><h3 id="IIC通信函数："><a href="#IIC通信函数：" class="headerlink" title="IIC通信函数："></a><strong>IIC通信函数：</strong></h3><ol><li>开始位</li><li>结束位</li><li>主机回应从机ack</li><li>主机回应从机nack</li><li>主机等待从机回应</li><li>主机发送一个字节</li><li>主机接收一个字节</li></ol><p><strong>一、开始位</strong><br>![[屏幕截图 2025-04-24 182557.png|500]]<br>开始位：SCL保持高电平，SDA由高电平变为低电平后，延时(&gt;4.7us)，SCL变为低电平。为啥说了要大于4.7us，但是要延时2us呢？<br>因为代码运行也需要一定时间，加上代码运行时间即可大于4.7us。</p><p><strong>二、停止位</strong><br>![[屏幕截图 2025-04-24 182806.png|575]]<br>停止信号：SCL保持高电平。SDA由低电平变为高电平。</p><p>IIC信号在数据传输过程中，当SCL=1高电平时，数据线SDA必须保持稳定状态，不允许有电平跳变，只有在时钟线上的信号为低电平期间，数据线上的高电平或低电平状态才允许变化。</p><p>SCL=1时 数据线SDA的任何电平变换会看做是总线的起始信号或者停止信号。</p><p><strong>三、应答信号和不应答信号</strong><br>![[屏幕截图 2025-04-24 183156.png|600]]<br>应答信号：主机SCL拉高，读取从机SDA的电平，为低电平表示产生应答。应答信号为低电平时，规定为有效应答位（ACK，简称应答位），表示接收器已经成功地接收了该字节；</p><p>应答信号为高电平时，规定为非应答位（NACK），一般表示接收器接收该字节没有成功。</p><p><strong>四、等待从机应答</strong><br>![[屏幕截图 2025-04-24 183406 1.png|375]]</p><p><strong>五、主机发送一个字节</strong><br>![[屏幕截图 2025-04-24 183516.png|450]]</p><p><strong>六、主机读取一个字节</strong><br>![[屏幕截图 2025-04-24 183712.png|500]]</p><hr><h2 id="十六、逻辑分析仪"><a href="#十六、逻辑分析仪" class="headerlink" title="十六、逻辑分析仪"></a>十六、逻辑分析仪</h2><p>看教程即可。</p><hr><h2 id="十七、MPU6050（陀螺仪-加速度计）"><a href="#十七、MPU6050（陀螺仪-加速度计）" class="headerlink" title="十七、MPU6050（陀螺仪/加速度计）"></a>十七、MPU6050（陀螺仪/加速度计）</h2><p>==注意！使用MPU6050时需要水平放置！不要把芯片竖着放，会导致芯片内部的陀螺仪初始化不成功！==</p><p>MPU6050的本质是一个IIC通信的传感器模块，也就是一个传感器：<br><strong>MPU6050=陀螺仪+加速度计+数字运动处理器DMP（digital motion processor）</strong><br>陀螺仪可以测量以空间坐标系x、y、z轴为转轴的三轴角速度；加速度计可以测量x、y、z三轴方向的加速度；3轴+3轴=6轴，所以是六轴运动处理传感器。</p><p>![[屏幕截图 2025-04-26 142914.png|575]]<br>只需要接VCC、GND、SCL、SDA四个脚即可<br>传感器的作用：==获取当前的三轴角速度和三轴加速度。==</p><ul><li>看代码：<br>![[屏幕截图 2025-04-26 143245.png|550]]<br>IIC通信接口的初始化，随便两个口就行<br>MPU6050初始化，DMP初始化，不需要看，只需要会用<br>只需要在合适的地方添加Read_DMP函数即可，为读出：三轴姿态角，三轴角速度，三轴加速度</li></ul><p>三轴姿态角就是Pitch、Roll、Yaw，俯仰角，横摆角，航向角<br>三轴角速度就是gyro[0]、gyro[1]、gyro[2]<br>三轴加速度就是accel[0]、accel [1]、accel [2]</p><p>每次调用Read_DMP函数，角速度和加速度的相关变量就自动赋值了，我们引用下面这个头文件之后直接用就行<br>![[屏幕截图 2025-04-26 144016.png|600]]</p><hr><h2 id="十八、完成平衡小车"><a href="#十八、完成平衡小车" class="headerlink" title="十八、完成平衡小车"></a>十八、完成平衡小车</h2><p><em>放手去做！</em></p><hr>]]></content>
      
      
      
        <tags>
            
            <tag> STM32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【理论】Linux学习笔记</title>
      <link href="/posts/7b3c0b9d.html"/>
      <url>/posts/7b3c0b9d.html</url>
      
        <content type="html"><![CDATA[<h1 id="Linux基础命令"><a href="#Linux基础命令" class="headerlink" title="Linux基础命令"></a>Linux基础命令</h1><h2 id="Linux的目录结构"><a href="#Linux的目录结构" class="headerlink" title="Linux的目录结构"></a>Linux的目录结构</h2><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027214128.png" alt="image-20221027214128453"></p><ul><li><code>/</code>，根目录是最顶级的目录了</li><li>Linux只有一个顶级目录：<code>/</code></li><li>路径描述的层次关系同样适用<code>/</code>来表示</li><li>/home/itheima/a.txt，表示根目录下的home文件夹内有itheima文件夹，内有a.txt</li></ul><h2 id="ls命令"><a href="#ls命令" class="headerlink" title="ls命令"></a>ls命令</h2><p>功能：列出文件夹信息</p><p>语法：<code>ls [-l -h -a] [参数]</code></p><ul><li>参数：被查看的文件夹，不提供参数，表示查看当前工作目录</li><li>-l，以列表形式查看</li><li>-h，配合-l，以更加人性化的方式显示文件大小</li><li>-a，显示隐藏文件</li></ul><h3 id="隐藏文件、文件夹"><a href="#隐藏文件、文件夹" class="headerlink" title="隐藏文件、文件夹"></a>隐藏文件、文件夹</h3><p>在Linux中以<code>.</code>开头的，均是隐藏的。</p><p>默认不显示出来，需要<code>-a</code>选项才可查看到。</p><h2 id="pwd命令"><a href="#pwd命令" class="headerlink" title="pwd命令"></a>pwd命令</h2><p>功能：展示当前工作目录</p><p>语法：<code>pwd</code></p><h2 id="cd命令"><a href="#cd命令" class="headerlink" title="cd命令"></a>cd命令</h2><p>功能：切换工作目录</p><p>语法：<code>cd [目标目录]</code></p><p>参数：目标目录，要切换去的地方，不提供默认切换到<code>当前登录用户HOME目录</code></p><h2 id="HOME目录"><a href="#HOME目录" class="headerlink" title="HOME目录"></a>HOME目录</h2><p>每一个用户在Linux系统中都有自己的专属工作目录，称之为HOME目录。</p><ul><li><p>普通用户的HOME目录，默认在：<code>/home/用户名</code></p></li><li><p>root用户的HOME目录，在：<code>/root</code></p></li></ul><p>FinalShell登陆终端后，默认的工作目录就是用户的HOME目录</p><h2 id="相对路径、绝对路径"><a href="#相对路径、绝对路径" class="headerlink" title="相对路径、绝对路径"></a>相对路径、绝对路径</h2><ul><li><p>相对路径，==非==<code>/</code>开头的称之为相对路径</p><p>相对路径表示以<code>当前目录</code>作为起点，去描述路径，如<code>test/a.txt</code>，表示当前工作目录内的test文件夹内的a.txt文件</p></li><li><p>绝对路径，==以==<code>/</code>开头的称之为绝对路径</p><p>绝对路径从<code>根</code>开始描述路径</p></li></ul><h2 id="特殊路径符"><a href="#特殊路径符" class="headerlink" title="特殊路径符"></a>特殊路径符</h2><ul><li><code>.</code>，表示当前，比如./a.txt，表示当前文件夹内的<code>a.txt</code>文件</li><li><code>..</code>，表示上级目录，比如<code>../</code>表示上级目录，<code>../../</code>表示上级的上级目录</li><li><code>~</code>，表示用户的HOME目录，比如<code>cd ~</code>，即可切回用户HOME目录</li></ul><h2 id="mkdir命令"><a href="#mkdir命令" class="headerlink" title="mkdir命令"></a>mkdir命令</h2><p>功能：创建文件夹</p><p>语法：<code>mkdir [-p] 参数</code></p><ul><li>参数：被创建文件夹的路径</li><li>选项：-p，可选，表示创建前置路径</li></ul><h2 id="touch命令"><a href="#touch命令" class="headerlink" title="touch命令"></a>touch命令</h2><p>功能：创建文件</p><p>语法：<code>touch 参数</code></p><ul><li>参数：被创建的文件路径</li></ul><h2 id="cat命令"><a href="#cat命令" class="headerlink" title="cat命令"></a>cat命令</h2><p>功能：查看文件内容</p><p>语法：<code>cat 参数</code></p><ul><li>参数：被查看的文件路径</li></ul><h2 id="more命令"><a href="#more命令" class="headerlink" title="more命令"></a>more命令</h2><p>功能：查看文件，可以支持翻页查看</p><p>语法：<code>more 参数</code></p><ul><li>参数：被查看的文件路径</li><li>在查看过程中：<ul><li><code>空格</code>键翻页</li><li><code>q</code>退出查看</li></ul></li></ul><h2 id="cp命令"><a href="#cp命令" class="headerlink" title="cp命令"></a>cp命令</h2><p>功能：复制文件、文件夹</p><p>语法：<code>cp [-r] 参数1 参数2</code></p><ul><li>参数1，被复制的</li><li>参数2，要复制去的地方</li><li>选项：-r，可选，复制文件夹使用</li></ul><p>示例：</p><ul><li>cp a.txt b.txt，复制当前目录下a.txt为b.txt</li><li>cp a.txt test/，复制当前目录a.txt到test文件夹内</li><li>cp -r test test2，复制文件夹test到当前文件夹内为test2存在</li></ul><h2 id="mv命令"><a href="#mv命令" class="headerlink" title="mv命令"></a>mv命令</h2><p>功能：移动文件、文件夹</p><p>语法：<code>mv 参数1 参数2</code></p><ul><li>参数1：被移动的</li><li>参数2：要移动去的地方，参数2如果不存在，则会进行改名</li></ul><h2 id="rm命令"><a href="#rm命令" class="headerlink" title="rm命令"></a>rm命令</h2><p>功能：删除文件、文件夹</p><p>语法：<code>rm [-r -f] 参数...参数</code></p><ul><li>参数：支持多个，每一个表示被删除的，空格进行分隔</li><li>选项：-r，删除文件夹使用</li><li>选项：-f，强制删除，不会给出确认提示，一般root用户会用到</li></ul><blockquote><p>rm命令很危险，一定要注意，特别是切换到root用户的时候。</p></blockquote><h2 id="which命令"><a href="#which命令" class="headerlink" title="which命令"></a>which命令</h2><p>功能：查看命令的程序本体文件路径</p><p>语法：<code>which 参数</code></p><ul><li>参数：被查看的命令</li></ul><h2 id="find命令"><a href="#find命令" class="headerlink" title="find命令"></a>find命令</h2><p>功能：搜索文件</p><p>语法1按文件名搜索：<code>find 路径 -name 参数</code></p><ul><li>路径，搜索的起始路径</li><li>参数，搜索的关键字，支持通配符<em>， 比如：`</em>`test表示搜索任意以test结尾的文件</li></ul><h2 id="grep命令"><a href="#grep命令" class="headerlink" title="grep命令"></a>grep命令</h2><p>功能：过滤关键字</p><p>语法：<code>grep [-n] 关键字 文件路径</code></p><ul><li>选项-n，可选，表示在结果中显示匹配的行的行号。</li><li>参数，关键字，必填，表示过滤的关键字，带有空格或其它特殊符号，建议使用””将关键字包围起来</li><li>参数，文件路径，必填，表示要过滤内容的文件路径，可作为内容输入端口</li></ul><blockquote><p>参数文件路径，可以作为管道符的输入</p></blockquote><h2 id="wc命令"><a href="#wc命令" class="headerlink" title="wc命令"></a>wc命令</h2><p>功能：统计</p><p>语法：<code>wc [-c -m -l -w] 文件路径</code></p><ul><li>选项，-c，统计bytes数量</li><li>选项，-m，统计字符数量</li><li>选项，-l，统计行数</li><li>选项，-w，统计单词数量</li><li>参数，文件路径，被统计的文件，可作为内容输入端口</li></ul><blockquote><p>参数文件路径，可作为管道符的输入</p></blockquote><h2 id="管道符"><a href="#管道符" class="headerlink" title="管道符|"></a>管道符|</h2><p>写法：<code>|</code></p><p>功能：将符号左边的结果，作为符号右边的输入</p><p>示例：</p><p><code>cat a.txt | grep itheima</code>，将cat a.txt的结果，作为grep命令的输入，用来过滤<code>itheima</code>关键字</p><p>可以支持嵌套：</p><p><code>cat a.txt | grep itheima | grep itcast</code></p><h2 id="echo命令"><a href="#echo命令" class="headerlink" title="echo命令"></a>echo命令</h2><p>功能：输出内容</p><p>语法：<code>echo 参数</code></p><ul><li>参数：被输出的内容</li></ul><h2 id="反引号"><a href="#反引号" class="headerlink" title="`反引号"></a>`反引号</h2><p>功能：被两个反引号包围的内容，会作为命令执行</p><p>示例：</p><ul><li>echo `pwd`，会输出当前工作目录</li></ul><h2 id="tail命令"><a href="#tail命令" class="headerlink" title="tail命令"></a>tail命令</h2><p>功能：查看文件尾部内容</p><p>语法：<code>tail [-f] 参数</code></p><ul><li>参数：被查看的文件</li><li>选项：-f，持续跟踪文件修改</li></ul><h2 id="head命令"><a href="#head命令" class="headerlink" title="head命令"></a>head命令</h2><p>功能：查看文件头部内容</p><p>语法：<code>head [-n] 参数</code></p><ul><li>参数：被查看的文件</li><li>选项：-n，查看的行数</li></ul><h2 id="重定向符"><a href="#重定向符" class="headerlink" title="重定向符"></a>重定向符</h2><p>功能：将符号左边的结果，输出到右边指定的文件中去</p><ul><li><code>&gt;</code>，表示覆盖输出</li><li><code>&gt;&gt;</code>，表示追加输出</li></ul><h2 id="vi编辑器"><a href="#vi编辑器" class="headerlink" title="vi编辑器"></a>vi编辑器</h2><h3 id="命令模式快捷键"><a href="#命令模式快捷键" class="headerlink" title="命令模式快捷键"></a>命令模式快捷键</h3><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027215841.png" alt="image-20221027215841573"></p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027215846.png" alt="image-20221027215846581"></p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027215849.png" alt="image-20221027215849668"></p><h3 id="底线命令快捷键"><a href="#底线命令快捷键" class="headerlink" title="底线命令快捷键"></a>底线命令快捷键</h3><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027215858.png" alt="image-20221027215858967"></p><h2 id="命令的选项"><a href="#命令的选项" class="headerlink" title="命令的选项"></a>命令的选项</h2><p>我们学习的一系列Linux命令，它们所拥有的选项都是非常多的。</p><p>比如，简单的ls命令就有：-a -A -b -c -C -d -D -f -F -g -G -h -H -i -I -k -l -L -m -n -N -o -p -q -Q -r-R -s -S -t -T -u -U -v -w -x -X -1等选项，可以发现选项是极其多的。</p><p>课程中， 并不会将全部的选项都进行讲解，否则，一个ls命令就可能讲解2小时之久。</p><p>课程中，会对常见的选项进行讲解， 足够满足绝大多数的学习、工作场景。</p><h3 id="查看命令的帮助"><a href="#查看命令的帮助" class="headerlink" title="查看命令的帮助"></a>查看命令的帮助</h3><p>可以通过：<code>命令 --help</code>查看命令的帮助手册</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027220005.png" alt="image-20221027220005610"></p><h3 id="查看命令的详细手册"><a href="#查看命令的详细手册" class="headerlink" title="查看命令的详细手册"></a>查看命令的详细手册</h3><p>可以通过：<code>man 命令</code>查看某命令的详细手册</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027220010.png" alt="image-20221027220009949"></p><h1 id="Linux常用操作"><a href="#Linux常用操作" class="headerlink" title="Linux常用操作"></a>Linux常用操作</h1><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><ul><li>CentOS系统使用：<ul><li>yum [install remove search] [-y] 软件名称<ul><li>install 安装</li><li>remove 卸载</li><li>search 搜索</li><li>-y，自动确认</li></ul></li></ul></li><li>Ubuntu系统使用<ul><li>apt [install remove search] [-y] 软件名称<ul><li>install 安装</li><li>remove 卸载</li><li>search 搜索</li><li>-y，自动确认</li></ul></li></ul></li></ul><blockquote><p>yum 和 apt 均需要root权限</p></blockquote><h2 id="systemctl"><a href="#systemctl" class="headerlink" title="systemctl"></a>systemctl</h2><p>功能：控制系统服务的启动关闭等</p><p>语法：<code>systemctl start | stop | restart | disable | enable | status 服务名</code></p><ul><li>start，启动</li><li>stop，停止</li><li>status，查看状态</li><li>disable，关闭开机自启</li><li>enable，开启开机自启</li><li>restart，重启</li></ul><h2 id="软链接"><a href="#软链接" class="headerlink" title="软链接"></a>软链接</h2><p>功能：创建文件、文件夹软链接（快捷方式）</p><p>语法：<code>ln -s 参数1 参数2</code></p><ul><li>参数1：被链接的</li><li>参数2：要链接去的地方（快捷方式的名称和存放位置）</li></ul><h2 id="日期"><a href="#日期" class="headerlink" title="日期"></a>日期</h2><p>语法：<code>date [-d] [+格式化字符串]</code></p><ul><li><p>-d 按照给定的字符串显示日期，一般用于日期计算</p></li><li><p>格式化字符串：通过特定的字符串标记，来控制显示的日期格式</p><ul><li>%Y   年%y   年份后两位数字 (00..99)</li><li>%m   月份 (01..12)</li><li>%d   日 (01..31)</li><li>%H   小时 (00..23)</li><li>%M   分钟 (00..59)</li><li>%S   秒 (00..60)</li><li>%s   自 1970-01-01 00:00:00 UTC 到现在的秒数</li></ul></li></ul><p>示例：</p><ul><li><p>按照2022-01-01的格式显示日期</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027220514.png" alt="image-20221027220514640"></p></li><li><p>按照2022-01-01 10:00:00的格式显示日期</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027220525.png" alt="image-20221027220525625"></p></li><li><p>-d选项日期计算</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027220429.png" alt="image-20221027220429831"></p><ul><li><p>支持的时间标记为：</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027220449.png" alt="image-20221027220449312"></p></li></ul></li></ul><h2 id="时区"><a href="#时区" class="headerlink" title="时区"></a>时区</h2><p>修改时区为中国时区</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027220554.png" alt="image-20221027220554654"></p><h2 id="ntp"><a href="#ntp" class="headerlink" title="ntp"></a>ntp</h2><p>功能：同步时间</p><p>安装：<code>yum install -y ntp</code></p><p>启动管理：<code>systemctl start | stop | restart | status | disable | enable ntpd</code></p><p>手动校准时间：<code>ntpdate -u ntp.aliyun.com</code></p><h2 id="ip地址"><a href="#ip地址" class="headerlink" title="ip地址"></a>ip地址</h2><p>格式：a.b.c.d</p><ul><li>abcd为0~255的数字</li></ul><p>特殊IP：</p><ul><li>127.0.0.1，表示本机</li><li>0.0.0.0<ul><li>可以表示本机</li><li>也可以表示任意IP（看使用场景）</li></ul></li></ul><p>查看ip：<code>ifconfig</code></p><h2 id="主机名"><a href="#主机名" class="headerlink" title="主机名"></a>主机名</h2><p>功能：Linux系统的名称</p><p>查看：<code>hostname</code></p><p>设置：<code>hostnamectl set-hostname 主机名</code></p><h2 id="配置VMware固定IP"><a href="#配置VMware固定IP" class="headerlink" title="配置VMware固定IP"></a>配置VMware固定IP</h2><ol><li><p>修改VMware网络，参阅PPT，图太多</p></li><li><p>设置Linux内部固定IP</p><p>修改文件：<code>/etc/sysconfig/network-scripts/ifcfg-ens33</code></p><p>示例文件内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">TYPE=&quot;Ethernet&quot;</span><br><span class="line">PROXY_METHOD=&quot;none&quot;</span><br><span class="line">BROWSER_ONLY=&quot;no&quot;</span><br><span class="line">BOOTPROTO=&quot;static&quot;# 改为static，固定IP</span><br><span class="line">DEFROUTE=&quot;yes&quot;</span><br><span class="line">IPV4_FAILURE_FATAL=&quot;no&quot;</span><br><span class="line">IPV6INIT=&quot;yes&quot;</span><br><span class="line">IPV6_AUTOCONF=&quot;yes&quot;</span><br><span class="line">IPV6_DEFROUTE=&quot;yes&quot;</span><br><span class="line">IPV6_FAILURE_FATAL=&quot;no&quot;</span><br><span class="line">IPV6_ADDR_GEN_MODE=&quot;stable-privacy&quot;</span><br><span class="line">NAME=&quot;ens33&quot;</span><br><span class="line">UUID=&quot;1b0011cb-0d2e-4eaa-8a11-af7d50ebc876&quot;</span><br><span class="line">DEVICE=&quot;ens33&quot;</span><br><span class="line">ONBOOT=&quot;yes&quot;</span><br><span class="line">IPADDR=&quot;192.168.88.131&quot;# IP地址，自己设置，要匹配网络范围</span><br><span class="line">NETMASK=&quot;255.255.255.0&quot;# 子网掩码，固定写法255.255.255.0</span><br><span class="line">GATEWAY=&quot;192.168.88.2&quot;# 网关，要和VMware中配置的一致</span><br><span class="line">DNS1=&quot;192.168.88.2&quot;# DNS1服务器，和网关一致即可</span><br></pre></td></tr></table></figure></li></ol><h2 id="ps命令"><a href="#ps命令" class="headerlink" title="ps命令"></a>ps命令</h2><p>功能：查看进程信息</p><p>语法：<code>ps -ef</code>，查看全部进程信息，可以搭配grep做过滤：<code>ps -ef | grep xxx</code></p><h2 id="kill命令"><a href="#kill命令" class="headerlink" title="kill命令"></a>kill命令</h2><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221303.png" alt="image-20221027221303037"></p><h2 id="nmap命令"><a href="#nmap命令" class="headerlink" title="nmap命令"></a>nmap命令</h2><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221241.png" alt="image-20221027221241123"></p><h2 id="netstat命令"><a href="#netstat命令" class="headerlink" title="netstat命令"></a>netstat命令</h2><p>功能：查看端口占用</p><p>用法：<code>netstat -anp | grep xxx</code></p><h2 id="ping命令"><a href="#ping命令" class="headerlink" title="ping命令"></a>ping命令</h2><p>测试网络是否联通</p><p>语法：<code>ping [-c num] 参数</code></p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221129.png" alt="image-20221027221129782"></p><h2 id="wget命令"><a href="#wget命令" class="headerlink" title="wget命令"></a>wget命令</h2><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221149.png" alt="image-20221027221148964"></p><h2 id="curl命令"><a href="#curl命令" class="headerlink" title="curl命令"></a>curl命令</h2><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221201.png" alt="image-20221027221201079"></p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221210.png" alt="image-20221027221210518"></p><h2 id="top命令"><a href="#top命令" class="headerlink" title="top命令"></a>top命令</h2><p>功能：查看主机运行状态</p><p>语法：<code>top</code>，查看基础信息</p><p>可用选项：</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221340.png" alt="image-20221027221340729"></p><p>交互式模式中，可用快捷键：</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221354.png" alt="image-20221027221354137"></p><h2 id="df命令"><a href="#df命令" class="headerlink" title="df命令"></a>df命令</h2><p>查看磁盘占用</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221413.png" alt="image-20221027221413787"></p><h2 id="iostat命令"><a href="#iostat命令" class="headerlink" title="iostat命令"></a>iostat命令</h2><p>查看CPU、磁盘的相关信息</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221440.png" alt="image-20221027221439990"></p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221514.png" alt="image-20221027221514237"></p><h2 id="sar命令"><a href="#sar命令" class="headerlink" title="sar命令"></a>sar命令</h2><p>查看网络统计</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221545.png" alt="image-20221027221545822"></p><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><ul><li>临时设置：export 变量名=变量值</li><li>永久设置：<ul><li>针对用户，设置用户HOME目录内：<code>.bashrc</code>文件</li><li>针对全局，设置<code>/etc/profile</code></li></ul></li></ul><h3 id="PATH变量"><a href="#PATH变量" class="headerlink" title="PATH变量"></a>PATH变量</h3><p>记录了执行程序的搜索路径</p><p>可以将自定义路径加入PATH内，实现自定义命令在任意地方均可执行的效果</p><h2 id="符号"><a href="#符号" class="headerlink" title="$符号"></a>$符号</h2><p>可以取出指定的环境变量的值</p><p>语法：<code>$变量名</code></p><p>示例：</p><p><code>echo $PATH</code>，输出PATH环境变量的值</p><p><code>echo $&#123;PATH&#125;ABC</code>，输出PATH环境变量的值以及ABC</p><p>如果变量名和其它内容混淆在一起，可以使用${}</p><h2 id="压缩解压"><a href="#压缩解压" class="headerlink" title="压缩解压"></a>压缩解压</h2><h3 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h3><p><code>tar -zcvf 压缩包 被压缩1...被压缩2...被压缩N</code></p><ul><li>-z表示使用gzip，可以不写</li></ul><p><code>zip [-r] 参数1 参数2 参数N</code></p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221906.png" alt="image-20221027221906247"></p><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><p><code>tar -zxvf 被解压的文件 -C 要解压去的地方</code></p><ul><li>-z表示使用gzip，可以省略</li><li>-C，可以省略，指定要解压去的地方，不写解压到当前目录</li></ul><p><code>unzip [-d] 参数</code></p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221939.png" alt="image-20221027221939899"></p><h2 id="su命令"><a href="#su命令" class="headerlink" title="su命令"></a>su命令</h2><p>切换用户</p><p>语法：<code>su [-] [用户]</code></p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027222021.png" alt="image-20221027222021619"></p><h2 id="sudo命令"><a href="#sudo命令" class="headerlink" title="sudo命令"></a>sudo命令</h2><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027222035.png" alt="image-20221027222035337"></p><p>比如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">itheima ALL=(ALL)       NOPASSWD: ALL</span><br></pre></td></tr></table></figure><p>在visudo内配置如上内容，可以让itheima用户，无需密码直接使用<code>sudo</code></p><h2 id="chmod命令"><a href="#chmod命令" class="headerlink" title="chmod命令"></a>chmod命令</h2><p>修改文件、文件夹权限</p><p>语法：<code>chmod [-R] 权限 参数</code></p><ul><li><p>权限，要设置的权限，比如755，表示：<code>rwxr-xr-x</code></p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027222157.png" alt="image-20221027222157276"></p></li><li><p>参数，被修改的文件、文件夹</p></li><li><p>选项-R，设置文件夹和其内部全部内容一样生效</p></li></ul><h2 id="chown命令"><a href="#chown命令" class="headerlink" title="chown命令"></a>chown命令</h2><p>修改文件、文件夹所属用户、组</p><p>语法：<code>chown [-R] [用户][:][用户组] 文件或文件夹</code></p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027222326.png" alt="image-20221027222326192"></p><h2 id="用户组管理"><a href="#用户组管理" class="headerlink" title="用户组管理"></a>用户组管理</h2><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027222354.png" alt="image-20221027222354498"></p><h2 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h2><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027222407.png" alt="image-20221027222407618"></p><h2 id="genenv命令"><a href="#genenv命令" class="headerlink" title="genenv命令"></a>genenv命令</h2><ul><li><p><code>getenv group</code>，查看系统全部的用户组</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027222446.png" alt="image-20221027222446514"></p></li><li><p><code>getenv passwd</code>，查看系统全部的用户</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027222512.png" alt="image-20221027222512274"></p></li></ul><h2 id="env命令"><a href="#env命令" class="headerlink" title="env命令"></a>env命令</h2><p>查看系统全部的环境变量</p><p>语法：<code>env</code></p>]]></content>
      
      
      <categories>
          
          <category> 理论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【理论】51单片机学习笔记（AI8051U，32bit）</title>
      <link href="/posts/d0b57adf.html"/>
      <url>/posts/d0b57adf.html</url>
      
        <content type="html"><![CDATA[<h2 id="在最开始的"><a href="#在最开始的" class="headerlink" title="在最开始的"></a>在最开始的</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MAIN_Fosc24000UL</span></span><br></pre></td></tr></table></figure><blockquote><p>定义主频为24.000MHz</p></blockquote><p>在main函数中，开头可添加如下代码<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">EAXFR = <span class="number">1</span>; <span class="comment">// 使能扩展的特殊寄存器</span></span><br><span class="line">WTST = <span class="number">0x00</span>; <span class="comment">// 设置代码等待时间为0，CPU 执行程序的速度最快 </span></span><br><span class="line">CKCON = <span class="number">0x00</span>; <span class="comment">// 设置外部总线速度最快</span></span><br></pre></td></tr></table></figure><br>以使得程序运行速度最快</p><hr><h2 id="点亮一个LED"><a href="#点亮一个LED" class="headerlink" title="点亮一个LED"></a>点亮一个LED</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sbit LED1 = P0 ^ <span class="number">0</span>;</span><br><span class="line">sbit LED2 = P0 ^ <span class="number">1</span>;</span><br></pre></td></tr></table></figure><blockquote><p> LED1的对应引脚是P00<br> LED2的对应引脚是P01</p></blockquote><p>以上代码一般添加在最开头（main函数之前）<br><strong>用来定义引脚</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">P0M1 = <span class="number">0x00</span>; P0M0 = <span class="number">0x00</span>；</span><br></pre></td></tr></table></figure><blockquote><p>将P0端口的所有引脚都设置为<strong>推挽输出</strong>模式</p></blockquote><p>因为要使用P0引脚，以上代码暂且理解为初始化<br>（目前这么理解 2025.3.29，知道具体为什么来还愿）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LED1 = <span class="number">0</span>; </span><br><span class="line">LED2 = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><blockquote><p>LED1输出低电平，LED2输出高电平</p></blockquote><p>通过输出高低电平控制LED亮灭</p><hr><h2 id="编程实现LED闪烁-amp-LED流水灯-amp-数码管显示"><a href="#编程实现LED闪烁-amp-LED流水灯-amp-数码管显示" class="headerlink" title="编程实现LED闪烁&amp;LED流水灯&amp;数码管显示"></a>编程实现LED闪烁&amp;LED流水灯&amp;数码管显示</h2><h3 id="LED闪烁"><a href="#LED闪烁" class="headerlink" title="LED闪烁"></a>LED闪烁</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">LED1 = ON;</span><br><span class="line">delay_ms(<span class="number">500</span>);</span><br><span class="line">LED1 = OFF;</span><br><span class="line">delay_ms(<span class="number">500</span>);</span><br></pre></td></tr></table></figure><blockquote><p>很简单，在LED亮灭间穿插延时就好了</p></blockquote><h3 id="LED流水灯-amp-数码管显示"><a href="#LED流水灯-amp-数码管显示" class="headerlink" title="LED流水灯&amp;数码管显示"></a>LED流水灯&amp;数码管显示</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">u8 code LED_Index[] = &#123;<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x80</span>&#125;;</span><br><span class="line"></span><br><span class="line">u8 code SEG_Index[] = &#123;<span class="number">0x3F</span>,<span class="number">0x06</span>,<span class="number">0x5B</span>,<span class="number">0x4F</span>,<span class="number">0x66</span>,<span class="number">0x6d</span>,<span class="number">0x7d</span>,<span class="number">0x07</span>,<span class="number">0x7f</span>,<span class="number">0x6f</span>&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>LED数组的作用，通过十六进制转二进制可以得到LED阵列的状态。如0x08就代表00001000，可得出LED状态</p><p>SEG数组的作用，通过不同的十六进制可让数码管显示不同的字符，如0x3F代表1，0x06代表2</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">blink_3</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">static</span> u8 j;</span><br><span class="line">P2 = LED_Index[j];</span><br><span class="line">j++;</span><br><span class="line"><span class="keyword">if</span>(j &gt; <span class="number">8</span>) j = <span class="number">0</span>;</span><br><span class="line">delay_ms(<span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">blink_4</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">static</span> u8 k;</span><br><span class="line">P0 = SEG_Index[k];</span><br><span class="line">k++;</span><br><span class="line"><span class="keyword">if</span>(k &gt; <span class="number">9</span>) k = <span class="number">0</span>;</span><br><span class="line">delay_ms(<span class="number">500</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>顺着数组做for循环，通过前面定义好的数组就可以实现LED流水灯或数码管计数了</p></blockquote><hr><h2 id="I-O输入与输出控制按键"><a href="#I-O输入与输出控制按键" class="headerlink" title="I/O输入与输出控制按键"></a>I/O输入与输出控制按键</h2><h3 id="按键检测代码"><a href="#按键检测代码" class="headerlink" title="==按键检测代码=="></a>==按键检测代码==</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    delay_ms(<span class="number">20</span>); <span class="comment">// 延时20毫秒</span></span><br><span class="line">    <span class="keyword">if</span>(KEY1 == <span class="number">0</span>) <span class="comment">// 检测按键KEY1是否被按下</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i &gt; <span class="number">3</span>) i = <span class="number">0</span>; </span><br><span class="line">        P2 = LED[i]; <span class="comment">// 将P2端口的输出设置为LED数组的第i个元素</span></span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">while</span>(KEY1 == <span class="number">0</span>); <span class="comment">// 等待按键释放（按键防抖或按键长按处理）</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意需要添加消抖延迟函数 &amp; 等待按键释放的while函数</strong></p></blockquote><h3 id="延时代码"><a href="#延时代码" class="headerlink" title="==延时代码=="></a>==延时代码==</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">delay_ms</span><span class="params">(u16 ms)</span></span><br><span class="line">&#123;</span><br><span class="line">    u16 i;</span><br><span class="line">    <span class="keyword">do</span>&#123;</span><br><span class="line">        i = MAIN_Fosc / <span class="number">6000</span>;</span><br><span class="line">        <span class="keyword">while</span>(--i);</span><br><span class="line">    &#125;<span class="keyword">while</span>(--ms);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>例：需要延时200ms → delay_ms(200)</p></blockquote><hr><h2 id="定时器中断"><a href="#定时器中断" class="headerlink" title="定时器中断"></a>定时器中断</h2><p>需要去ISP软件中选择“定时器计算器”工具，生成所需要的定时器初始化函数与定时器执行函数。</p><h3 id="例：主频为24-000MHz进行500毫秒中断的定时器函数"><a href="#例：主频为24-000MHz进行500毫秒中断的定时器函数" class="headerlink" title="例：主频为24.000MHz进行500毫秒中断的定时器函数"></a>例：主频为24.000MHz进行500毫秒中断的定时器函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Timer0_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">TM0PS = <span class="number">0x0F</span>;</span><br><span class="line">AUXR &amp;= <span class="number">0x7F</span>;</span><br><span class="line">TMOD &amp;= <span class="number">0xF0</span>;</span><br><span class="line">TL0 = <span class="number">0xDC</span>;</span><br><span class="line">TH0 = <span class="number">0x0B</span>;</span><br><span class="line">TF0 = <span class="number">0</span>;</span><br><span class="line">TR0 = <span class="number">1</span>;</span><br><span class="line">ET0 = <span class="number">1</span>;</span><br><span class="line">EA=<span class="number">1</span>；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>==注意！==</p><ul><li>一定要有EA=1定时器中断才能正常开启。</li><li>需要在main函数中进行初始化：<pre><code>  **Timer0_Init();**</code></pre></li></ul><h3 id="定时器执行函数"><a href="#定时器执行函数" class="headerlink" title="定时器执行函数"></a>定时器执行函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Timer0_Isr</span><span class="params">(<span class="type">void</span>)</span> interrupt 1</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//在这里编写需要执行的代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="定时器的周期调用"><a href="#定时器的周期调用" class="headerlink" title="定时器的周期调用"></a>定时器的周期调用</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">u16 Count_ms[<span class="number">3</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">u8 state1=<span class="number">1</span>, state2=<span class="number">1</span>, state3=<span class="number">1</span>, state4=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0_Isr</span><span class="params">(<span class="type">void</span>)</span> interrupt 1</span><br><span class="line">&#123;</span><br><span class="line">u8 i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">Count_ms[i]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(Count_ms[<span class="number">0</span>]&gt;=<span class="number">300</span>)</span><br><span class="line">&#123;</span><br><span class="line">Count_ms[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">state1 = !state1;</span><br><span class="line">P20 = state1;</span><br><span class="line">P23 = !state1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(Count_ms[<span class="number">1</span>]&gt;=<span class="number">600</span>)</span><br><span class="line">&#123;</span><br><span class="line">Count_ms[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">state2 = !state2;</span><br><span class="line">P21 = state2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(Count_ms[<span class="number">2</span>]&gt;=<span class="number">900</span>)</span><br><span class="line">&#123;</span><br><span class="line">Count_ms[<span class="number">2</span>] = <span class="number">0</span>;</span><br><span class="line">state3 = !state3;</span><br><span class="line">P22 = state3;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(state1==<span class="number">0</span> &amp;&amp; state2==<span class="number">0</span> &amp;&amp; state3==<span class="number">0</span>) P24=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> P24=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>定时器中断的进阶用法：<br>通过定义三个不同阈值的计数器，定时器每中断一次，计数器加一。<br>实现在300ms，600ms，900ms时分别中断执行不同任务</li></ul><hr><h2 id="数码管与定时器"><a href="#数码管与定时器" class="headerlink" title="数码管与定时器"></a>数码管与定时器</h2><p><em>任务：按下KEY1，数码管开始计时(如00:00:00)， 按下KEY2，数码管显示年月日(如2024:12:11)， 按下KEY3，数码管计时暂停，再按一下KEY3又恢复计时 按下KEY4，数码管计时清零。</em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        delay_ms(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">if</span>(P31 ==<span class="number">0</span>)&#123;  </span><br><span class="line">            state=<span class="number">1</span>;  </span><br><span class="line">            <span class="keyword">while</span>(P30==<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(P30 == <span class="number">0</span>)&#123;  </span><br><span class="line">            state=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(P31==<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(P32 == <span class="number">0</span>)&#123;  </span><br><span class="line">            <span class="keyword">if</span>(state==<span class="number">1</span>)&#123;</span><br><span class="line">                state=<span class="number">2</span>;  </span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(state==<span class="number">2</span>)&#123;</span><br><span class="line">                state=<span class="number">1</span>; </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(P32==<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(P33 == <span class="number">0</span>)&#123; </span><br><span class="line">            miao=fen=shi=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(P33==<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">switch</span>(state)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:seg_date();<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:seg_count();<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:seg_count_pause();<span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>在while1中持续检测按键情况，哪个按键被按下则执行相对应的任务</p></blockquote><h3 id="数码管显示日期"><a href="#数码管显示日期" class="headerlink" title="数码管显示日期"></a>数码管显示日期</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">seg</span><span class="params">(u8 loc, u16 num)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">switch</span>(loc)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:P24=<span class="number">1</span>;P23=<span class="number">1</span>;P22=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:P24=<span class="number">1</span>;P23=<span class="number">1</span>;P22=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:P24=<span class="number">1</span>;P23=<span class="number">0</span>;P22=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:P24=<span class="number">1</span>;P23=<span class="number">0</span>;P22=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:P24=<span class="number">0</span>;P23=<span class="number">1</span>;P22=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:P24=<span class="number">0</span>;P23=<span class="number">1</span>;P22=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:P24=<span class="number">0</span>;P23=<span class="number">0</span>;P22=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:P24=<span class="number">0</span>;P23=<span class="number">0</span>;P22=<span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    P0=SEG_NUM[num];</span><br><span class="line">    delay_ms(<span class="number">1</span>); <span class="comment">//延时的目的是为了让数码管有足够的时间显示当前的数字，避免显示闪烁</span></span><br><span class="line">    P0 = <span class="number">0x00</span>;  <span class="comment">//在显示下一个数字之前，先将当前的显示清除，避免串扰</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 该函数用于在不同的数码管位置显示不同的数字，每个case对应一个数码管的位置</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">seg_date</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    seg(<span class="number">1</span>,<span class="number">2</span>);seg(<span class="number">2</span>,<span class="number">0</span>);seg(<span class="number">3</span>,<span class="number">2</span>);seg(<span class="number">4</span>,<span class="number">5</span>);</span><br><span class="line">    seg(<span class="number">5</span>,<span class="number">0</span>);seg(<span class="number">6</span>,<span class="number">1</span>);seg(<span class="number">7</span>,<span class="number">0</span>);seg(<span class="number">8</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>如何用数码管显示20250101</p></blockquote><h3 id="数码管显示计数器"><a href="#数码管显示计数器" class="headerlink" title="数码管显示计数器"></a>数码管显示计数器</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Timer0_Isr</span><span class="params">(<span class="type">void</span>)</span> interrupt 1</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(state==<span class="number">1</span>)&#123; </span><br><span class="line">        miao ++;</span><br><span class="line">        <span class="keyword">if</span>( miao&gt;<span class="number">59</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            miao = <span class="number">0</span>;</span><br><span class="line">            fen++;</span><br><span class="line">            <span class="keyword">if</span>( fen&gt;<span class="number">59</span> )</span><br><span class="line">            &#123;</span><br><span class="line">                fen = <span class="number">0</span>;</span><br><span class="line">                shi ++;</span><br><span class="line">                <span class="keyword">if</span>( shi&gt;<span class="number">23</span> )</span><br><span class="line">                    shi = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>利用定时器中断进行时分秒计数</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">seg_count_pause</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    seg(<span class="number">1</span>,shi/<span class="number">10</span>);seg(<span class="number">2</span>,shi%<span class="number">10</span>);seg(<span class="number">3</span>,SEG_NUM[<span class="number">16</span>]);seg(<span class="number">4</span>,fen/<span class="number">10</span>);</span><br><span class="line">    seg(<span class="number">5</span>,fen%<span class="number">10</span>);seg(<span class="number">6</span>,SEG_NUM[<span class="number">16</span>]);seg(<span class="number">7</span>,miao/<span class="number">10</span>);seg(<span class="number">8</span>,miao%<span class="number">10</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>将计数器显示在数码管上</p></blockquote><hr><h2 id="PWM"><a href="#PWM" class="headerlink" title="PWM"></a>PWM</h2><p><em>任务：PWM驱动电机，按键K1按下，电机转速提高(一共三档)，按键K2按下，电机转速减慢，按键K3按下，电机停止</em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">delay_ms(<span class="number">20</span>);</span><br><span class="line"><span class="keyword">if</span>(P31==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Speed++;</span><br><span class="line"><span class="keyword">if</span>(Speed &gt; <span class="number">3</span>) Speed = <span class="number">3</span>; </span><br><span class="line"><span class="keyword">while</span>(P31==<span class="number">0</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span>(P30==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Speed--;</span><br><span class="line"><span class="keyword">if</span>(Speed &lt; <span class="number">0</span>) Speed= <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(P30==<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(P33==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Speed = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(P33==<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span>(Speed)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>: Compare = <span class="number">0</span>; <span class="keyword">break</span>;    </span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>: Compare = <span class="number">50</span>; <span class="keyword">break</span>;   </span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>: Compare = <span class="number">75</span>; <span class="keyword">break</span>;   </span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>: Compare = <span class="number">100</span>; <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">seg(<span class="number">1</span>,Speed);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>一个普通的按键检测代码，按下对应按键执行对应速度并在数码管显示</p></blockquote><h3 id="通过定时器中断来控制电机的占空比（PWM功能）"><a href="#通过定时器中断来控制电机的占空比（PWM功能）" class="headerlink" title="通过定时器中断来控制电机的占空比（PWM功能）"></a>通过定时器中断来控制电机的占空比（PWM功能）</h3><p>先上定时器中断执行代码：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Timer0_Isr</span><span class="params">(<span class="type">void</span>)</span> interrupt 1</span><br><span class="line">&#123;</span><br><span class="line">TL0 = <span class="number">0x38</span>;</span><br><span class="line">TH0 = <span class="number">0xFF</span>;</span><br><span class="line">counter++;</span><br><span class="line">counter%=<span class="number">100</span>;</span><br><span class="line"><span class="keyword">if</span>(counter&lt;Compare)</span><br><span class="line">&#123;</span><br><span class="line">motor = <span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">motor = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><u>逐步分析：</u></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">TL0 = <span class="number">0x38</span>;</span><br><span class="line">TH0 = <span class="number">0xFF</span>;</span><br></pre></td></tr></table></figure><ul><li><code>TL0</code> 和 <code>TH0</code> 是定时器0的低8位和高8位寄存器。<br>这两行代码的作用是重新装载定时器0的初始值<ul><li><code>0x38</code> 和 <code>0xFF</code> 是定时器的初始值，具体数值取决于单片机的时钟频率和定时器的模式。这些值决定了定时器溢出的时间间隔</li><li>每当定时器溢出时，就会触发中断，执行这个中断服务例程。</li></ul></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">counter++;</span><br><span class="line">counter %= <span class="number">100</span>;</span><br></pre></td></tr></table></figure><blockquote><p>用于记录定时器中断的次数，当等于100时清零</p></blockquote><h3 id="PWM逻辑"><a href="#PWM逻辑" class="headerlink" title="==PWM逻辑=="></a>==PWM逻辑==</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (counter &lt; Compare)</span><br><span class="line">    motor = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    motor = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>Compare表示PWM的<u>占空比阈值</u></p><ul><li><p>这段代码的作用是根据计数器的值和占空比阈值来控制电机的状态：</p><ul><li><p>如果 <code>counter</code> 小于 <code>Compare</code>，则将 <code>motor</code> 设置为1（表示电机开启或输出高电平）。</p></li><li><p>如果 <code>counter</code> 大于或等于 <code>Compare</code>，则将 <code>motor</code> 设置为0（表示电机关闭或输出低电平）。</p></li></ul></li></ul><p>通过调整 <code>Compare</code> 的值，可以改变PWM的占空比，从而控制电机的速度或功率</p><h3 id="PWM原理"><a href="#PWM原理" class="headerlink" title="==PWM原理=="></a>==PWM原理==</h3><ul><li><p><strong>占空比</strong>：占空比是指在一个周期内，高电平时间与总周期时间的比例。例如，如果占空比为50%，则在一个周期内，高电平和低电平各占一半时间。</p></li><li><p>在这段代码中，<code>counter</code> 的范围是0到99，总共100个计数值。<code>Compare</code> 的值决定了高电平的持续时间。例如：</p><ul><li><p>如果 <code>Compare</code> = 50，则高电平持续50个计数值，占空比为50%。</p></li><li><p>如果 <code>Compare</code> = 20，则高电平持续20个计数值，占空比为20%。</p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 理论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> STM51 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>（杂）旅游攻略合集</title>
      <link href="/posts/f29f6b73.html"/>
      <url>/posts/f29f6b73.html</url>
      
        <content type="html"><![CDATA[<p>此帖为记录近年自己旅游有意识的进行规划的旅游路线，给时光以生命。也为会来浏览我个人博客的人们一些旅游路线参考。</p><h2 id="天津"><a href="#天津" class="headerlink" title="天津"></a>天津</h2><p>时间：2023.6.29 - 7.1</p><p><code>day 1</code> 中午到达，晚上去德云社看了相声，200r/人，相当不错</p><p><code>day 2</code> 乘坐环城巴士游览，路线：天津之眼——大悲禅院——金刚桥——三岔河口——古文化街——官银号——鼓楼商业街——南市食品街——北安桥——津门津塔——天津规划展览馆——意大利风情街——大沽桥——解放桥——世纪钟广场——津湾广场——天津站——袁世凯故居——冯国璋故居——玻璃桥——李叔同故居——海河亲水平台——狮子林桥——望海楼教堂——引滦入津纪念碑——天津之眼</p><p>然后晚上去打球，感受天津强度😝</p><p><code>day 3</code> 中午去滨江道步行街，其实感觉每个地方的步行街都大同小异。去天津狗不理包子总店吃了午饭，相当一般。</p><p>天津景点之一瓷房子，没什么好看的。晚上坐了天津之眼摩天轮，不愧是第一大水上摩天轮，确实不错。</p><h2 id="广州-澳门-香港"><a href="#广州-澳门-香港" class="headerlink" title="广州 - 澳门 - 香港"></a>广州 - 澳门 - 香港</h2><p>时间：2023.7.8 - 7.13</p><p><code>day 1</code> 下午到达，晚上：广州塔 - 海心桥 - 在广州塔下的公园听小年轻唱粤语歌</p><p><code>day 2</code> 参观越秀王墓，没什么好看的除了下去墓葬实地内部参观有意思 - 晚上逛了逛商场</p><p><code>day 3</code> 前往澳门，从珠海的横琴口岸乘坐酒店的发财车入住金沙度假村。晚上澳门的叔叔请我们吃了葡萄牙菜。晚上坐轻轨游览： 澳门银河酒店 - 永利皇宫 - 新濠天地 - 摩铂斯 - 伦敦人     其实来澳门参观这些富丽堂皇的酒店建筑就很有意思</p><p><code>day 4</code> 去酒店的游泳池玩了一圈 - 接着去参观巴黎人酒店的埃菲尔铁塔 - 威尼斯人 - 新濠影汇 - 乘坐永利皇宫喷泉缆车 - 坐酒店的港澳快线途经港珠澳大桥前往香港</p><p><code>day 5</code> 香港迪士尼一日游。买了优速通一天刷完🥰🥰 我想如果我是小时候来肯定会很开心，长大了来玩也很开心</p><p><code>day 6</code> 在香港市区玩了一天，早上出门就遇到了传说中的富贵雪糕车，但好像没有很好吃。去维多利亚港看了江景 - 铜锣湾 - 中环 - 坐天星小轮回到江对岸 - 坐香港巴士到故宫文化博物馆附近的江滨道坐着看维多利亚港夜景</p><h2 id="南京一日游"><a href="#南京一日游" class="headerlink" title="南京一日游"></a>南京一日游</h2><p>时间：2023.12.2</p><p>租了一辆电动车游览：梧桐大道 - 明孝陵 - 中山陵 - 美龄宫 - 晚上坐地铁去逛了秦淮河和南京夫子庙，人山人海。</p><p>没预约到南京大屠杀死难者纪念馆很可惜</p><h2 id="泉州"><a href="#泉州" class="headerlink" title="泉州"></a>泉州</h2><p>时间：2024.1.22 - 2024.1.23</p><p><code>day 1</code> 清源山老君岩 - 天后宫 - 浔埔古镇（都是贝壳建筑的小镇，来这才知道这里是簪花真正的起源地） - 郑成功雕像 - 钟楼 - 开元寺（一条路上都是好吃的😍）</p><p><code>day 2</code> 清净寺 - 关岳庙 - 洛阳桥 - 苏延玉故居 - 泉州海运文化博物馆 - 崇武古城 - 南山广化寺</p><h2 id="绍兴一日游"><a href="#绍兴一日游" class="headerlink" title="绍兴一日游"></a>绍兴一日游</h2><p>时间：2024.4.4</p><p>鲁迅故里 - 百草园 - 三味书屋 - 沈氏园（人山人海） - 兰亭 这个可以，人很少环境优美。就是离市区比较远       </p><h2 id="上海（鸣谢hkl，lsh）"><a href="#上海（鸣谢hkl，lsh）" class="headerlink" title="上海（鸣谢hkl，lsh）"></a>上海（鸣谢hkl，lsh）</h2><p>时间：2024.6.7 - 6.8</p><p><code>day 1</code> 入住徐家汇 - 去静安寺，顺便看了亚洲最大的Apple店，好像也没多大 - 南京路步行街（下午茶吃了莱莱小笼，神中神，除了贵没有任何缺点）- 和平饭店 - 外滩 - 坐船到陆家嘴  - 到上海中心楼顶看了稳定器灯光秀（。）- 花园饭店吃晚饭 - 最后又到外滩边散步，来上海就是要city walk对吧🤭</p><p><code>day 2</code> 武康大楼 - 宋庆龄故居 - 上海中心翠园吃午饭 - 四行仓库 - 中共一大旧址&amp;会址纪念馆</p><h2 id="武汉"><a href="#武汉" class="headerlink" title="武汉"></a>武汉</h2><p>时间：2024.8.1 - 8.4</p><p><code>day 1</code> 古德寺（寺庙偏欧洲中世纪风格很好看，很多鸽子很可爱） - 解放公园 （没什么好逛的）- 黎黄陂路（商业步行街） - 咸安坊 - 江汉路步行街（人山人海）</p><p><code>day 2</code> 湖北省博物馆（大家都约到了门票，赞），主要是看编钟和越王勾践剑  - 武商梦时代吃午饭 - 宝通寺 -  首义公园&amp;博物馆（比较有革命意义） - 黄鹤楼（晚上门票加钱的灯光秀是👎） - 户部巷（很多美食）</p><p><code>day 3</code> 归元寺（就像每个地方都有的普通寺庙） - 古琴台（伯牙绝弦的地方，挺有意义的） - 爬龟山 - 晴川阁 - 长江观景第一台</p><p><code>day 4</code> 东湖风景区（可惜没坐到滑道） - 武汉大学 - 凌波门东湖观景点 - 光谷广场</p><h2 id="霞浦"><a href="#霞浦" class="headerlink" title="霞浦"></a>霞浦</h2><p>时间：2024.8.10 - 8.12</p><p><code>day 1</code> 三都澳旅游景区。这个没啥意思 - 入住东壁村民宿</p><p><code>day 2</code> 三点起来看巴黎奥运会男篮决赛 - 五点去北竹看日出，结果当天雾很大没看成 - 睡回笼觉 - 下午坐快艇前往四礵列岛。不愧是人间塞尔达，确实美啊，有点像澳大利亚的十二使徒。就是海岛上没有信号，且风大太阳大，没有防护措施，还是比较危险的。</p><p><code>day 3</code> 前往福鼎 - 爬太姥山，很多怪石头还是挺有意思的</p><h2 id="昆明-大理-丽江-香格里拉"><a href="#昆明-大理-丽江-香格里拉" class="headerlink" title="昆明 - 大理 - 丽江 - 香格里拉"></a>昆明 - 大理 - 丽江 - 香格里拉</h2><p>时间：2024.8.31 - 9.8</p><p><code>day 1</code> 先去云牵一线品尝了一下云南招牌过桥米线😍好吃量大不贵，人均吃撑40r - 海埂大坝 - 海埂公园 - 西山索道 - 俯瞰滇池 - 龙门索道下山 - 昆明老街吃晚饭 - 途中偶遇暴雨，拼尽全力无法战胜</p><p><code>day 2</code> 翠湖公园 - 国立西南联合大学旧址 - 怪兽大厦 - 前往大理 - 大理古城 - 打车到才村码头看到了洱海日落，绝美 - 晚上回大理古城喝酒                          （大理苦荞啤酒很好喝）</p><p><code>day 3</code> 崇圣寺三塔 - 租车环洱海自驾路线：磻溪S湾 - 廊桥 - 喜洲古镇 - 海舌公园 - 双廊古镇 - 鹿鹅山遗址 - 小普陀</p><p><code>day 4</code> 理想邦 - 洱海公园 - 苍洱大道 -  团山公园 - 出发丽江  </p><p>洱海是真的太漂亮了，水清澈且蓝，天气好的时候很无敌，以后有机会想来这里长住一段时间</p><p><code>day 5</code> 玉龙雪山一日游🤗：乘坐大索道到山顶4680石碑 - 牦牛坪 - 蓝月谷 - 晚上回到丽江古城</p><p>不得不吐槽丽江的天气，我们过去的时候正好是雨季。一会儿雨一会儿晴，山上全是雾什么都看不到</p><p><code>day 6</code> 一早出发香格里拉，民宿老板帮我联系了当地旅游车。沿途游览：上虎跳峡 - 中虎跳 -  哈巴雪山石碑 - 白水台 - 到达香格里拉 - 晚上吃了顿牦牛肉火锅自助有点太顶了 - 游览独克宗古城：龟山公园 - 转经筒 - 大佛寺</p><p><code>day 7</code> 一早驱车两小时前往无底湖（真的美，雪山中的湖泊像一块翡翠） - 大经幡 - 大白塔</p><p><code>day 8</code> 松赞林寺 - 帕纳海（小羊羔太可爱了） - 坐高铁返回丽江乘坐飞机</p><h2 id="南昌-庐山-景德镇-婺源"><a href="#南昌-庐山-景德镇-婺源" class="headerlink" title="南昌 - 庐山 - 景德镇 - 婺源"></a>南昌 - 庐山 - 景德镇 - 婺源</h2>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>我的简历</title>
      <link href="/posts/8485e0fd.html"/>
      <url>/posts/8485e0fd.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>为了以后应对各种场合写简历时能有更清晰的思路，单开此帖。也顺便记录自己的简历丰富进程，实时更新。</p></blockquote><h2 id="教育背景"><a href="#教育背景" class="headerlink" title="教育背景"></a>教育背景</h2><ul><li>2023-09 ~ 2024-06    <strong>浙江工业大学</strong>  量化金融（本科）</li><li>2024-09 ~ 2028-06    <strong>浙江工业大学</strong>  机器人工程（感知与控制方向）（本科）</li></ul><h2 id="实习经历"><a href="#实习经历" class="headerlink" title="实习经历"></a>实习经历</h2><ul><li><p>2024-07 ~ 2024-09    <strong>福建靠谱云算力技术有限公司</strong></p><p>  ​    &gt; 服务器和终端运营部    云网运维工程师</p></li><li><p><strong>工作内容</strong></p></li></ul><p>​    服务器运维管理：高效参与公司服务器集群的日常监控与故障排查，精通Linux系统操作及服务器配置优化，熟练运用性能监控工具，确保服务器稳定运行。云算力平台运营：协同团队进行云算力平台的维护与升级，优化资源分配与负载均衡，有效处理用户反馈，显著提升平台服务质量与用户体验。虚拟机镜像管理：主导平台老旧镜像升级，全球节点分发新镜像，参与新镜像测试，确保稳定性与可用性。同时，参与底层平台维护，快速响应监控报警，根据反馈调优虚拟机及其宿主机性能，并成功实施业务热迁移处理硬件故障。</p><ul><li><strong>业绩与成果</strong></li></ul><p>​    通过持续学习，进一步提升了专业技能与实际操作能力，深入理解企业运营流程与行业需求，为未来职业发展奠定坚实基础，获得部门领导及同事的一致好评。</p><h2 id="项目经验"><a href="#项目经验" class="headerlink" title="项目经验"></a>项目经验</h2><ul><li>2024-07 ~ 2024-10     <strong>四足仿生机器人 - 快递运送赛中型组赛项</strong></li><li><strong>项目描述</strong></li></ul><p>​    设计四足仿生机器人，模拟快递运送场景，需穿越限高杆、斜坡、分岔路及台阶等地形，并准确送达快递至住户敲响铃铛。本人主导完成了机器人快递背筐系统的代码编写与PCB电路板设计，确保任务高效执行。</p><ul><li><strong>业绩与成果</strong></li></ul><p>​    2024年中国机器人大赛的激烈竞争中脱颖而出，荣获全国亚军，斩获国家一等奖。</p><h2 id="个人证书"><a href="#个人证书" class="headerlink" title="个人证书"></a>个人证书</h2><ul><li>英语四级（国家级） </li><li>英语六级（国家级）</li><li>普通话二级甲等（国家级）</li></ul><h2 id="技能特长"><a href="#技能特长" class="headerlink" title="技能特长"></a>技能特长</h2><ul><li><strong>C语言&amp;&amp;Python 程序设计</strong></li></ul><p>​    掌握C语言与Python程序设计能力，转专业考试C语言排名前5%，修读《程序设<br>计基础Python》课程，期末卷面成绩87分</p><ul><li><strong>stm32&amp;&amp;stm51单片机及基础电子元件使用</strong></li></ul><p>​    熟悉stm32标准库使用，掌握舵机、红外循迹模块、超声波测距、电机编码器等电子元件代码逻辑与使用。自行学习SPI、RS232、RS485、IIC通信总线协议。熟悉pid算法调参，目前自行DIY了一台红外循迹平衡小车。</p><ul><li><strong>电路设计及制作</strong></li></ul><p>​    熟悉altium designer软件使用，曾为机器狗设计pcb电路板。该机器狗于今年十一月份获得国家一等奖。目前正在自学《电路》以强化电路设计本领。熟练掌握电子元件焊接技巧。</p><ul><li><strong>Linux系统基础操作及指令</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>信息学院竞赛创新班学习进程</title>
      <link href="/posts/67ec6277.html"/>
      <url>/posts/67ec6277.html</url>
      
        <content type="html"><![CDATA[<h2 id="《电路》-第五版"><a href="#《电路》-第五版" class="headerlink" title="《电路》-第五版"></a>《电路》-第五版</h2><h3 id="学习进度：掌握基本的电路分析方式"><a href="#学习进度：掌握基本的电路分析方式" class="headerlink" title="学习进度：掌握基本的电路分析方式"></a>学习进度：掌握基本的电路分析方式</h3><p>第一章    电路模型和电路定律</p><p>第二章    电阻电路的等效变换</p><p>第三章    电阻电路的一般分析</p><p>第四章    电路定理</p><h2 id="51单片机软硬件学习"><a href="#51单片机软硬件学习" class="headerlink" title="51单片机软硬件学习"></a>51单片机软硬件学习</h2><ul><li>软件安装</li><li>编程实现点亮LED</li><li>编程实现LED闪烁&amp;LED流水灯&amp;数码管显示</li><li>I/O输入与输出控制按键</li><li>定时器中断</li><li>定时器的周期调用</li><li>数码管与定时器</li><li>PWM</li></ul><h2 id="焊接学习"><a href="#焊接学习" class="headerlink" title="焊接学习"></a>焊接学习</h2><p>已掌握贴片元件，插件元件，常见芯片封装焊接</p><h2 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h2><ul><li>完成51循迹小车制作，备战校赛</li></ul><h2 id="硬件电路-电子工程师养成"><a href="#硬件电路-电子工程师养成" class="headerlink" title="硬件电路/电子工程师养成"></a>硬件电路/电子工程师养成</h2><p>致谢b站免费教程，致谢推荐给我该教程的某位大佬</p><div class="tag link"><a class="link-card" title="硬件工程师入门教程|电子工程师|零基础|全免费|2024全新课程|中文字幕|B站 点赞 收藏NO.1_哔哩哔哩_bilibili" href="https://www.bilibili.com/video/BV1gHSyY3E6q?spm_id_from=333.788.videopod.episodes&vd_source=3d97a7809f5a62237ccc7e9ebe372fa8"><div class="left"><img src="/img/siteicon/64.png"/></div><div class="right"><p class="text">硬件工程师入门教程|电子工程师|零基础|全免费|2024全新课程|中文字幕|B站 点赞 收藏NO.1_哔哩哔哩_bilibili</p><p class="url">https://www.bilibili.com/video/BV1gHSyY3E6q?spm_id_from=333.788.videopod.episodes&vd_source=3d97a7809f5a62237ccc7e9ebe372fa8</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> 理论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛创新 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【理论】《armcortex-M3权威指南》学习笔记</title>
      <link href="/posts/12f608ec.html"/>
      <url>/posts/12f608ec.html</url>
      
        <content type="html"><![CDATA[<h1 id="《ARM-cortex-M3权威指南》学习笔记"><a href="#《ARM-cortex-M3权威指南》学习笔记" class="headerlink" title="《ARM cortex-M3权威指南》学习笔记"></a>《ARM cortex-M3权威指南》学习笔记</h1><h2 id="学习目的"><a href="#学习目的" class="headerlink" title="学习目的"></a>学习目的</h2><p>是时候把单片机开发学得再深入一些了。我希望自己之后的开发能深入到内核和汇编层面，自然要多补充一些理论基础。好的</p>]]></content>
      
      
      <categories>
          
          <category> 理论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cortex-M3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【前端】个人博客开发日记 - 基于hexo+butterfly</title>
      <link href="/posts/a00776bd.html"/>
      <url>/posts/a00776bd.html</url>
      
        <content type="html"><![CDATA[<h1 id="个人博客开发日记"><a href="#个人博客开发日记" class="headerlink" title="个人博客开发日记"></a>个人博客开发日记</h1><h2 id="一、致谢"><a href="#一、致谢" class="headerlink" title="一、致谢"></a>一、致谢</h2><p>感谢安知鱼大佬，让我熟悉前端开发流程并使用框架快速搭建了博客，让我也体验了网页设计程序员的快乐~</p><div class="tag link"><a class="link-card" title="安知鱼：Butterfly重装日记" href="https://blog.anheyu.com/posts/sdxhu.html"><div class="left"><img src="https://s2.loli.net/2024/11/20/JjCpgOoieMHQ4lF.png）"/></div><div class="right"><p class="text">安知鱼：Butterfly重装日记</p><p class="url">https://blog.anheyu.com/posts/sdxhu.html</p></div></a></div><div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src="https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div><h2 id="二、博客开发和前端学习暂时告一段落"><a href="#二、博客开发和前端学习暂时告一段落" class="headerlink" title="二、博客开发和前端学习暂时告一段落"></a>二、博客开发和前端学习暂时告一段落</h2><p>博客还有很多很多可以优化的地方，但我毕竟不是这个方向的，能琢磨成这样已经非常满意了。后面我会多写博客，等以后有机会再优化网站。</p><blockquote><p>网站主题配置文件</p></blockquote><p><img src="https://s2.loli.net/2024/11/20/BEZIamsbDlrhokd.png" alt=""></p><blockquote><p>文章编写源代码文件</p></blockquote><p><img src="https://s2.loli.net/2024/11/20/tK74R9SJOBUNIeu.png" alt=""></p><h2 id="关于网址域名更改回https-Fad1ngWind-github-io"><a href="#关于网址域名更改回https-Fad1ngWind-github-io" class="headerlink" title="关于网址域名更改回https://Fad1ngWind.github.io"></a>关于网址域名更改回<a href="https://Fad1ngWind.github.io">https://Fad1ngWind.github.io</a></h2><p>11.21号晚上，本来兴致勃勃的回到家里打开电脑想更新一下博客，结果发现网页访问不了了。各种问题排查才发现是没备案导致的，好家伙一研究才发现备案这么麻烦😢费时费力填了一大堆相关信息不说过不过还要看工作人员脸色，最后还要花几百块买个ICP备案服务码才肯给你搞。于是乎我决定先换回这个基于Github直接推送的域名，暂时先弃用之前斥巨资购买的两年zhr0529.cn的域名，望周知。😊</p><p><img src="https://s2.loli.net/2024/11/21/2ljPtJXagMZ1Amb.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 实操 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随想</title>
      <link href="/posts/b433b0a3.html"/>
      <url>/posts/b433b0a3.html</url>
      
        <content type="html"><![CDATA[<h2 id="迎着阳光盛大逃亡"><a href="#迎着阳光盛大逃亡" class="headerlink" title="迎着阳光盛大逃亡"></a>迎着阳光盛大逃亡</h2><p>​      最后留在记忆深处的总是那些虚无缥缈的东西，就像你记住一个人往往不是因为她的美。很多年后你连她的样子都忘记了。可偶然在人流如织的街头闻到她惯用的香水味，你在惊悚中下意识地回过头去，却只看见万千过客的背影，你这才想起即便刚才和你擦肩而过的确实是她，即便你跟她四目相对，你也未必能认出她今天的样子了。</p><p>往事总在回忆中被赋予寓意🫠</p><p><img src="https://s2.loli.net/2024/11/22/nWZo1f3zlrBY5EM.png" alt="龙族"></p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【日记】</title>
      <link href="/posts/dfb8a81f.html"/>
      <url>/posts/dfb8a81f.html</url>
      
        <content type="html"><![CDATA[<h1 id="Our-Story-Begins"><a href="#Our-Story-Begins" class="headerlink" title="Our Story Begins."></a>Our Story Begins.</h1><h2 id="一、我的个人网站的诞生"><a href="#一、我的个人网站的诞生" class="headerlink" title="一、我的个人网站的诞生"></a>一、我的个人网站的诞生</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="type">void</span> main&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hello world!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">delay_ms(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一切的开始都是在刚上大学的那个迷茫的秋天。</p><div class="timeline orange"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>一路走来</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2024.11 [降转后 大一上]</p></div></div><div class='timeline-item-content'><p>遇到了慧眼识珠的伯乐，随队参加了机器人大赛，收获了人生中第一个国一。参加了信息学院组织的竞赛班，开始自学电路，同时开始接触51单片机开发。我搭建了自己的个人博客网站。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2024.8 [大一暑假]</p></div></div><div class='timeline-item-content'><p>自学一年c语言，以不低的排名转专业到机器人工程感知与控制，暑假开始自学Linux系统基础操作指令。同时开始接触Stm32，能为单片机与各类电子器件做基础的嵌入式开发。暑假在计算机公司实习，职位是云网运维工程师，上班就是在机房修电脑，蹲在服务器前等着bios系统启动，以及坐在大屏幕前看镜像监控。实习期间上班摸鱼学了画PCB电路板，这一关键的技能点在后来为我带来了许多机会。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2024.5 [大一下]</p></div></div><div class='timeline-item-content'><p>室友们一起给我过了生日。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2024.3 [大一下]</p></div></div><div class='timeline-item-content'><p>寒假在新东方兼职当助教，初次体验上班的无奈。经济学学科真的很抽象，我并不喜欢这种在纸上计算建模、对着图像曲线理论分析虚无缥缈的学科，再加上一直对金融股市有着不好的印象，我决定转专业。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023.11 [大一上]</p></div></div><div class='timeline-item-content'><p>面对未来无数未知的分岔路虽然时常会怀念高中的小镇做题家生活，但是大学也蛮精彩。遇到了很多很好的朋友们，期中考高数考了93分选择分流到计算机＋金融的高新专业量化金融。或许未来我会坐在屏幕，成为赛博华尔街之狼？</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023.8 [高考完的暑假]</p></div></div><div class='timeline-item-content'><p>暑假两个月考完了驾照，自学了一点Python，通关了许多曾经想玩的游戏，去了杭州、上海、天津、广州、澳门、香港。录取结果出了，浙江工业大学吗…嗯，虽然最后没有去一个211或者双一流，但是在杭州，好像还不错。</p></div></div></div><script async src="https://npm.elemecdn.com/tzy-blog/lib/js/other/sakura.js"></script>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/manifest.json"/>
      <url>/manifest.json</url>
      
        <content type="html"><![CDATA[{"name":"FadingWind`Blog","short_name":"FadingWind`Blog","theme_color":"#3b70fc","background_color":"#3b70fc","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"/img/siteicon/16.png","sizes":"16x16","type":"image/png"},{"src":"/img/siteicon/32.png","sizes":"32x32","type":"image/png"},{"src":"/img/siteicon/48.png","sizes":"48x48","type":"image/png"},{"src":"/img/siteicon/64.png","sizes":"64x64","type":"image/png"},{"src":"/img/siteicon/128.png","sizes":"128x128","type":"image/png"},{"src":"/img/siteicon/144.png","sizes":"144x144","type":"image/png"},{"src":"/img/siteicon/512.png","sizes":"512x512","type":"image/png"}],"splash_pages":null}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/universe.js"/>
      <url>/js/universe.js</url>
      
        <content type="html"><![CDATA[function dark() { window.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame; var n, e, i, h, t = .05, s = document.getElementById("universe"), o = !0, a = "180,184,240", r = "226,225,142", d = "226,225,224", c = []; function f() { n = window.innerWidth, e = window.innerHeight, i = .216 * n, s.setAttribute("width", n), s.setAttribute("height", e) } function u() { h.clearRect(0, 0, n, e); for (var t = c.length, i = 0; i < t; i++) { var s = c[i]; s.move(), s.fadeIn(), s.fadeOut(), s.draw() } } function y() { this.reset = function () { this.giant = m(3), this.comet = !this.giant && !o && m(10), this.x = l(0, n - 10), this.y = l(0, e), this.r = l(1.1, 2.6), this.dx = l(t, 6 * t) + (this.comet + 1 - 1) * t * l(50, 120) + 2 * t, this.dy = -l(t, 6 * t) - (this.comet + 1 - 1) * t * l(50, 120), this.fadingOut = null, this.fadingIn = !0, this.opacity = 0, this.opacityTresh = l(.2, 1 - .4 * (this.comet + 1 - 1)), this.do = l(5e-4, .002) + .001 * (this.comet + 1 - 1) }, this.fadeIn = function () { this.fadingIn && (this.fadingIn = !(this.opacity > this.opacityTresh), this.opacity += this.do) }, this.fadeOut = function () { this.fadingOut && (this.fadingOut = !(this.opacity < 0), this.opacity -= this.do / 2, (this.x > n || this.y < 0) && (this.fadingOut = !1, this.reset())) }, this.draw = function () { if (h.beginPath(), this.giant) h.fillStyle = "rgba(" + a + "," + this.opacity + ")", h.arc(this.x, this.y, 2, 0, 2 * Math.PI, !1); else if (this.comet) { h.fillStyle = "rgba(" + d + "," + this.opacity + ")", h.arc(this.x, this.y, 1.5, 0, 2 * Math.PI, !1); for (var t = 0; t < 30; t++)h.fillStyle = "rgba(" + d + "," + (this.opacity - this.opacity / 20 * t) + ")", h.rect(this.x - this.dx / 4 * t, this.y - this.dy / 4 * t - 2, 2, 2), h.fill() } else h.fillStyle = "rgba(" + r + "," + this.opacity + ")", h.rect(this.x, this.y, this.r, this.r); h.closePath(), h.fill() }, this.move = function () { this.x += this.dx, this.y += this.dy, !1 === this.fadingOut && this.reset(), (this.x > n - n / 4 || this.y < 0) && (this.fadingOut = !0) }, setTimeout(function () { o = !1 }, 50) } function m(t) { return Math.floor(1e3 * Math.random()) + 1 < 10 * t } function l(t, i) { return Math.random() * (i - t) + t } f(), window.addEventListener("resize", f, !1), function () { h = s.getContext("2d"); for (var t = 0; t < i; t++)c[t] = new y, c[t].reset(); u() }(), function t() { document.getElementsByTagName('html')[0].getAttribute('data-theme') == 'dark' && u(), window.requestAnimationFrame(t) }() };dark()]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/universe.css"/>
      <url>/css/universe.css</url>
      
        <content type="html"><![CDATA[/* 背景宇宙星光  */#universe{    display: block;    position: fixed;    margin: 0;    padding: 0;    border: 0;    outline: 0;    left: 0;    top: 0;    width: 100%;    height: 100%;    pointer-events: none;    /* 这个是调置顶的优先级的，-1在文章页下面，背景上面，个人推荐这种 */    z-index: -1;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* @font-face {  font-family: Candyhome;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/Candyhome.ttf);  font-display: swap;  font-weight: lighter;} */:root {  --trans-light: rgba(255, 255, 255, 0.88);  --trans-dark: rgba(25, 25, 25, 0.88);  --border-style: 1px solid rgb(169, 169, 169);  --backdrop-filter: blur(5px) saturate(150%);}@font-face {    font-family: ZhuZiAYuanJWD;    src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/ZhuZiAWan.woff2);    font-display: swap;    font-weight: lighter;  }    div#menus {    font-family: "ZhuZiAYuanJWD";  }  h1#site-title {    font-family: ZhuZiAYuanJWD;    font-size: 3em !important;  }  a.article-title,  a.blog-slider__title,  a.categoryBar-list-link,  h1.post-title {    font-family: ZhuZiAYuanJWD;  }    .iconfont {    font-family: "iconfont" !important;    font-size: 3em;    /* 可以定义图标大小 */    font-style: normal;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale;  }    /* 时间轴生肖icon */  svg.icon {    /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */    width: 1em;    height: 1em;    /* width和height定义图标的默认宽度和高度*/    vertical-align: -0.15em;    fill: currentColor;    overflow: hidden;  }    .icon-zhongbiao::before {    color: #f7c768;  }    /* bilibli番剧插件 */  #article-container .bangumi-tab.bangumi-active {    background: var(--anzhiyu-theme);    color: var(--anzhiyu-ahoverbg);    border-radius: 10px;  }  a.bangumi-tab:hover {    text-decoration: none !important;  }  .bangumi-button:hover {    background: var(--anzhiyu-theme) !important;    border-radius: 10px !important;    color: var(--anzhiyu-ahoverbg) !important;  }  a.bangumi-button.bangumi-nextpage:hover {    text-decoration: none !important;  }  .bangumi-button {    padding: 5px 10px !important;  }    a.bangumi-tab {    padding: 5px 10px !important;  }  svg.icon.faa-tada {    font-size: 1.1em;  }  .bangumi-info-item {    border-right: 1px solid #f2b94b;  }  .bangumi-info-item span {    color: #f2b94b;  }  .bangumi-info-item em {    color: #f2b94b;  }    /* 解决artitalk的图标问题 */  #uploadSource > svg {    width: 1.19em;    height: 1.5em;  }    /*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */  #page-header:not(.not-top-img):before {    background-color: transparent !important;  }    /* 首页文章卡片 */  #recent-posts > .recent-post-item {    background: rgba(255, 255, 255, 0.9);  }    /* 首页侧栏卡片 */  #aside-content .card-widget {    background: rgba(255, 255, 255, 0.9);  }    /* 文章页面正文背景 */  div#post {    background: rgba(255, 255, 255, 0.9);  }    /* 分页页面 */  div#page {    background: rgba(255, 255, 255, 0.9);  }    /* 归档页面 */  div#archive {    background: rgba(255, 255, 255, 0.9);  }    /* 标签页面 */  div#tag {    background: rgba(255, 255, 255, 0.9);  }    /* 分类页面 */  div#category {    background: rgba(255, 255, 255, 0.9);  }    /*夜间模式伪类遮罩层透明*/  [data-theme="dark"] #recent-posts > .recent-post-item {    background: #121212;  }    [data-theme="dark"] .card-widget {    background: #121212 !important;  }    [data-theme="dark"] div#post {    background: #121212 !important;  }    [data-theme="dark"] div#tag {    background: #121212 !important;  }    [data-theme="dark"] div#archive {    background: #121212 !important;  }    [data-theme="dark"] div#page {    background: #121212 !important;  }    [data-theme="dark"] div#category {    background: #121212 !important;  }    [data-theme="dark"] div#category {    background: transparent !important;  }  /* 页脚透明 */  #footer {    background: transparent !important;  }    /* 头图透明 */  #page-header {    background: transparent !important;  }    #rightside > div > button {    border-radius: 5px;  }    /* 滚动条 */    ::-webkit-scrollbar {    width: 8px;    height: 10px;  }    ::-webkit-scrollbar-thumb {    background-color: #38c1eb;    border-radius: 2em;  }    ::-webkit-scrollbar-corner {    background-color: transparent;  }    ::-moz-selection {    color: #fff;    background-color: #38c1eb;  }    /* 音乐播放器 */    /* .aplayer .aplayer-lrc {    display: none !important;  } */    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {    left: -66px !important;    transition: all 0.3s;    /* 默认情况下缩进左侧66px，只留一点箭头部分 */  }    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {    left: 0 !important;    transition: all 0.3s;    /* 鼠标悬停是左侧缩进归零，完全显示按钮 */  }    .aplayer.aplayer-fixed {    z-index: 999999 !important;  }    /* 评论框  */  .vwrap {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 30px 0px;  }    /* 设置评论框 */    .vcard {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 0px 0px;  }    /* md网站下划线 */  #article-container a:hover {    text-decoration: none !important;  }    #article-container #hpp_talk p img {    display: inline;  }    /* 404页面 */  #error-wrap {    position: absolute;    top: 40%;    right: 0;    left: 0;    margin: 0 auto;    padding: 0 1rem;    max-width: 1000px;    transform: translate(0, -50%);  }    #error-wrap .error-content {    display: flex;    flex-direction: row;    justify-content: center;    align-items: center;    margin: 0 1rem;    height: 18rem;    border-radius: 8px;    background: var(--card-bg);    box-shadow: var(--card-box-shadow);    transition: all 0.3s;  }    #error-wrap .error-content .error-img {    box-flex: 1;    flex: 1;    height: 100%;    border-top-left-radius: 8px;    border-bottom-left-radius: 8px;    background-color: #3b70fc;    background-position: center;    background-size: cover;  }    #error-wrap .error-content .error-info {    box-flex: 1;    flex: 1;    padding: 0.5rem;    text-align: center;    font-size: 14px;    font-family: Titillium Web, "PingFang SC", "Hiragino Sans GB", "Microsoft JhengHei", "Microsoft YaHei", sans-serif;  }  #error-wrap .error-content .error-info .error_title {    margin-top: -4rem;    font-size: 9em;  }  #error-wrap .error-content .error-info .error_subtitle {    margin-top: -3.5rem;    word-break: break-word;    font-size: 1.6em;  }  #error-wrap .error-content .error-info a {    display: inline-block;    margin-top: 0.5rem;    padding: 0.3rem 1.5rem;    background: var(--btn-bg);    color: var(--btn-color);  }    #body-wrap.error .aside-list {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    bottom: 0px;    position: absolute;    padding: 1rem;    width: 100%;    overflow: scroll;  }    #body-wrap.error .aside-list .aside-list-group {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    max-width: 1200px;    margin: 0 auto;  }    #body-wrap.error .aside-list .aside-list-item {    padding: 0.5rem;  }    #body-wrap.error .aside-list .aside-list-item img {    width: 100%;    object-fit: cover;    border-radius: 12px;  }    #body-wrap.error .aside-list .aside-list-item .thumbnail {    overflow: hidden;    width: 230px;    height: 143px;    background: var(--anzhiyu-card-bg);    display: flex;  }    #body-wrap.error .aside-list .aside-list-item .content .title {    -webkit-line-clamp: 2;    overflow: hidden;    display: -webkit-box;    -webkit-box-orient: vertical;    line-height: 1.5;    justify-content: center;    align-items: flex-end;    align-content: center;    padding-top: 0.5rem;    color: white;  }    #body-wrap.error .aside-list .aside-list-item .content time {    display: none;  }    /* 代码框主题 */  #article-container figure.highlight {    border-radius: 10px;  }/* 侧边栏个人信息卡片动态渐变色 */#aside-content > .card-widget.card-info {  background: linear-gradient(    -45deg,    #e8d8b9,    #eccec5,    #a3e9eb,    #bdbdf0,    #eec1ea  );  box-shadow: 0 0 5px rgb(66, 68, 68);  position: relative;  background-size: 400% 400%;  -webkit-animation: Gradient 10s ease infinite;  -moz-animation: Gradient 10s ease infinite;  animation: Gradient 10s ease infinite !important;}@-webkit-keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@-moz-keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}/* 黑夜模式适配 */[data-theme="dark"] #aside-content > .card-widget.card-info {  background: #191919ee;}/* 个人信息Follow me按钮 */#aside-content > .card-widget.card-info > #card-info-btn {  background-color: #3eb8be;  border-radius: 8px;}/* 日间模式不生效 */[data-theme="light"] #site-name,[data-theme="light"] #site-title,[data-theme="light"] #site-subtitle,[data-theme="light"] #post-info {  animation: none;}/* 夜间模式生效 */[data-theme="dark"] #site-name,[data-theme="dark"] #site-title {  animation: light_15px 10s linear infinite;}[data-theme="dark"] #site-subtitle {  animation: light_10px 10s linear infinite;}[data-theme="dark"] #post-info {  animation: light_5px 10s linear infinite;}/* 关键帧描述 */@keyframes light_15px {  0% {    text-shadow: #5636ed 0 0 15px;  }  12.5% {    text-shadow: #11ee5e 0 0 15px;  }  25% {    text-shadow: #f14747 0 0 15px;  }  37.5% {    text-shadow: #f1a247 0 0 15px;  }  50% {    text-shadow: #f1ee47 0 0 15px;  }  50% {    text-shadow: #b347f1 0 0 15px;  }  62.5% {    text-shadow: #002afa 0 0 15px;  }  75% {    text-shadow: #ed709b 0 0 15px;  }  87.5% {    text-shadow: #39c5bb 0 0 15px;  }  100% {    text-shadow: #5636ed 0 0 15px;  }}@keyframes light_10px {  0% {    text-shadow: #5636ed 0 0 10px;  }  12.5% {    text-shadow: #11ee5e 0 0 10px;  }  25% {    text-shadow: #f14747 0 0 10px;  }  37.5% {    text-shadow: #f1a247 0 0 10px;  }  50% {    text-shadow: #f1ee47 0 0 10px;  }  50% {    text-shadow: #b347f1 0 0 10px;  }  62.5% {    text-shadow: #002afa 0 0 10px;  }  75% {    text-shadow: #ed709b 0 0 10px;  }  87.5% {    text-shadow: #39c5bb 0 0 10px;  }  100% {    text-shadow: #5636ed 0 0 10px;  }}@keyframes light_5px {  0% {    text-shadow: #5636ed 0 0 5px;  }  12.5% {    text-shadow: #11ee5e 0 0 5px;  }  25% {    text-shadow: #f14747 0 0 5px;  }  37.5% {    text-shadow: #f1a247 0 0 15px;  }  50% {    text-shadow: #f1ee47 0 0 5px;  }  50% {    text-shadow: #b347f1 0 0 5px;  }  62.5% {    text-shadow: #002afa 0 0 5px;  }  75% {    text-shadow: #ed709b 0 0 5px;  }  87.5% {    text-shadow: #39c5bb 0 0 5px;  }  100% {    text-shadow: #5636ed 0 0 5px;  }}/* 首页文章卡片 */#recent-posts > .recent-post-item {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border-radius: 25px;  border: var(--border-style);}/* 首页侧栏卡片 */#aside-content .card-widget {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border-radius: 18px;  border: var(--border-style);}/* 文章页、归档页、普通页面 */div#post,div#page,div#archive {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border: var(--border-style);  border-radius: 20px;}/* 导航栏 */#page-header.nav-fixed #nav {  background: rgba(255, 255, 255, 0.75);  backdrop-filter: var(--backdrop-filter);}[data-theme="dark"] #page-header.nav-fixed #nav {  background: rgba(0, 0, 0, 0.7) !important;}/* 夜间模式遮罩 */[data-theme="dark"] #recent-posts > .recent-post-item,[data-theme="dark"] #aside-content .card-widget,[data-theme="dark"] div#post,[data-theme="dark"] div#archive,[data-theme="dark"] div#page {  background: var(--trans-dark);}/* 夜间模式页脚页头遮罩透明 */[data-theme="dark"] #footer::before {  background: transparent !important;}[data-theme="dark"] #page-header::before {  background: transparent !important;}/* 阅读模式 */.read-mode #aside-content .card-widget {  background: rgba(158, 204, 171, 0.5) !important;}.read-mode div#post {  background: rgba(158, 204, 171, 0.5) !important;}/* 夜间模式下的阅读模式 */[data-theme="dark"] .read-mode #aside-content .card-widget {  background: rgba(25, 25, 25, 0.9) !important;  color: #ffffff;}[data-theme="dark"] .read-mode div#post {  background: rgba(25, 25, 25, 0.9) !important;  color: #ffffff;}/* 翻页按钮居中 */#pagination {  width: 100%;  margin: auto;}.card-info-avatar .author-status-box {  position: absolute;  bottom: 0;  left: calc(100% - 28px);  width: 28px;  height: 28px;  border: 1px solid #d0d7de;  border-radius: 2em;  background-color: #f8f8f8f8;  transition: 0.4s;  overflow: hidden;}[data-theme="dark"] .card-info-avatar .author-status-box {  background-color: #222222f2;  border: 1px solid #5c6060;}.card-info-avatar .author-status-box .author-status {  display: flex;  align-items: center;  justify-content: center;  height: 28px;  padding: 0 5px;}.card-info-avatar .author-status-box:hover {  width: 105px;}.card-info-avatar .author-status-box:hover .author-status span {  width: 105px;  margin-left: 4px;}.card-info-avatar .author-status-box .author-status span {  width: 0;  font-size: 12px;  height: 100%;  overflow: hidden;  text-overflow: ellipsis;  white-space: nowrap;  transition: 0.4s;}.card-widget .card-info-avatar {  display: inline-block;  position: relative;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/all_font.js"/>
      <url>/js/all_font.js</url>
      
        <content type="html"><![CDATA[!function(c){var l,h,a,t,i,v='<svg><symbol id="icon-dragon_chen" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-498.122105 265.620211L431.157895 754.526316V485.052632h-66.074948c-14.470737 110.645895-44.355368 197.066105-102.696421 260.742736l-39.747368-36.432842C306.526316 617.876211 323.368421 462.901895 323.368421 242.526316V215.578947h377.263158v53.894737H377.182316c-0.404211 58.260211-2.209684 112.128-6.359579 161.684211H700.631579v53.894737h-122.152421a481.172211 481.172211 0 0 0 76.826947 119.70021l66.479158-39.855158 27.728842 46.214737-54.460631 32.687158c29.507368 24.953263 63.757474 45.675789 102.80421 58.098526l-16.303158 51.361684c-134.224842-42.711579-222.773895-167.073684-261.551158-268.207157H485.052632v221.857684l68.985263-41.391158 27.728842 46.214737-109.783579 65.886316zM646.736842 377.263158h-215.578947v-53.894737h215.578947v53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-dog_xu" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-375.592421 150.393263c33.684211 44.544 75.210105 74.698105 124.739369 90.812632l11.425684 3.718737 10.401684-6.009264C781.204211 727.740632 808.421053 622.565053 808.421053 592.842105h-53.894737c0 22.069895-19.132632 80.869053-33.711158 103.504842-34.816-14.605474-64.538947-39.262316-89.249684-74.13221 48.316632-55.269053 92.079158-117.328842 120.535579-179.900632l-49.044211-22.285473c-23.767579 52.250947-59.742316 104.717474-100.055579 152.656842-24.010105-50.930526-41.148632-115.927579-51.658105-195.395369H700.631579v-53.894737h-155.189895A1848.050526 1848.050526 0 0 1 538.947368 161.684211h-53.894736c0 58.206316 2.155789 112.074105 6.494315 161.68421H323.368421v26.947368c0 216.549053-13.177263 263.545263-100.702316 359.046737l39.747369 36.432842c63.326316-69.093053 92.806737-118.272 105.714526-206.848H485.052632v-53.894736h-111.319579a1742.147368 1742.147368 0 0 0 3.449263-107.789474h120.158316c12.611368 98.250105 35.031579 177.475368 67.395368 238.187789-61.978947 65.536-128.053895 117.975579-173.298526 142.282106l25.519158 47.481263c47.589053-25.573053 114.095158-77.446737 177.55621-142.821053z m125.170526-411.971368l-80.842105-80.842106-38.103579 38.103579 80.842105 80.842106 38.103579-38.103579z" fill="#231F20" ></path></symbol><symbol id="icon-dog" viewBox="0 0 1024 1024"><path d="M894.814316 904.434526l83.240421-183.134315-13.824-13.204211c-0.485053-0.458105-45.648842-47.589053-47.939369-185.263158-0.134737-7.922526-0.134737-33.953684-0.134736-55.996631-30.693053 15.306105-70.090105 19.887158-106.09179 19.887157-92.752842 0-163.624421-23.983158-210.647579-71.275789a192.512 192.512 0 0 1-27.944421-36.513684H377.263158v377.263158c342.662737 0 403.105684 51.092211 494.592 128.377263 7.922526 6.682947 15.521684 13.312 22.959158 19.86021z" fill="#85C3DE" ></path><path d="M326.063158 282.947368c0 34.250105-13.231158 44.463158-29.642105 44.463158s-29.642105-10.213053-29.642106-44.463158c0-34.223158 13.231158-44.463158 29.642106-44.463157s29.642105 10.24 29.642105 44.463157zM269.473684 430.295579v311.646316L190.275368 916.210526h59.203369L323.368421 753.637053V377.263158h-26.947368c-119.403789 0-172.732632-53.382737-185.505685-107.789474h35.624421c51.092211 0 68.581053-15.764211 120.535579-62.544842 12.773053-11.506526 28.079158-25.276632 47.023158-41.741474l18.351158-15.952842-69.658947-99.139368-44.085895 30.989474 41.768421 59.472842c-11.183158 9.862737-20.884211 18.593684-29.480421 26.327579C180.736 212.156632 176.235789 215.578947 146.539789 215.578947H53.894737v26.947369c0 88.710737 66.910316 178.149053 215.578947 187.769263z m216.710737-161.414737c2.290526 71.733895 28.698947 136.326737 75.048421 182.918737C618.711579 509.628632 702.437053 538.947368 810.091789 538.947368c18.593684 0 36.190316-1.158737 52.628211-3.449263 3.745684 111.265684 33.630316 170.334316 51.496421 196.015158l-38.507789 84.722526C782.174316 742.049684 688.774737 700.631579 377.263158 700.631579v53.894737c34.277053 0 65.697684 0.512 94.639158 1.509052L374.595368 970.105263h59.203369l96.013474-211.240421c66.182737 4.338526 117.005474 11.829895 157.911578 22.016L626.229895 916.210526h59.176421l54.16421-119.134315c47.616 18.405053 79.737263 42.091789 113.125053 69.739789L805.753263 970.105263h59.203369l113.071157-248.778105-13.824-13.204211c-0.485053-0.458105-45.648842-47.589053-47.939368-185.263158C985.168842 498.553263 1024 447.811368 1024 377.263158c0-95.205053-66.506105-161.684211-161.684211-161.684211v53.894737c65.482105 0 107.789474 42.307368 107.789474 107.789474 0 89.088-87.013053 107.789474-160.013474 107.789474-92.752842 0-163.624421-23.983158-210.647578-71.27579-30.315789-30.504421-45.891368-65.832421-53.35579-98.735158 11.210105 6.952421 22.932211 13.338947 35.274105 19.186527l23.04-48.720843c-92.106105-43.654737-148.992-128.646737-219.243789-243.981473l-46.026105 28.05221c49.448421 81.246316 92.968421 148.506947 147.051789 199.302737z" fill="#231F20" ></path></symbol><symbol id="icon-goat" viewBox="0 0 1024 1024"><path d="M548.378947 646.736842a952.32 952.32 0 0 1 140.90779-161.68421H107.789474c0 107.600842 0 107.600842-63.649685 169.283368l-13.069473 12.665263L66.721684 754.526316h417.172211c20.345263-41.472 43.654737-77.446737 64.485052-107.789474z" fill="#F7C768" ></path><path d="M608.256 144.734316C555.762526 115.577263 506.098526 107.789474 485.052632 107.789474V53.894737c32.579368 0 91.270737 11.452632 149.369263 43.735579 75.290947 41.822316 130.694737 94.531368 171.385263 150.878316C755.873684 288.013474 697.101474 323.368421 646.736842 323.368421h-107.789474v-53.894737h107.789474c20.506947 0 48.424421-11.210105 80.437895-31.285895a471.04 471.04 0 0 0-118.918737-93.453473zM832.673684 342.231579c-16.384 0-29.642105 10.24-29.642105 44.463158 0 34.250105 13.231158 44.463158 29.642105 44.463158s29.642105-10.213053 29.642105-44.463158c0-34.223158-13.231158-44.463158-29.642105-44.463158zM1024 619.789474C1024 347.109053 901.066105 122.448842 686.753684 3.395368l-26.165895 47.104C914.324211 191.461053 964.688842 440.400842 969.647158 592.842105h-84.506947c-17.92-35.624421-45.352421-69.12-87.013053-101.995789l-16.788211-13.285053-16.734315 13.392842c-66.128842 52.897684-134.629053 127.083789-187.311158 209.677474H102.965895l-8.272842-20.318316C159.043368 617.013895 161.684211 603.109053 161.684211 485.052632v-53.894737h485.052631v-53.894737H161.684211c0-80.384 14.309053-110.026105 66.586947-137.916632l-25.384421-47.535158C123.365053 234.226526 107.789474 291.920842 107.789474 377.263158v107.789474c0 107.600842 0 107.600842-63.649685 169.283368l-13.069473 12.665263L110.618947 862.315789h58.206316l-43.897263-107.789473h103.477895l43.897263 107.789473h58.206316l-43.897263-107.789473h259.47621C508.981895 824.939789 485.052632 899.152842 485.052632 970.105263h53.894736c0-68.688842 27.270737-144.060632 68.958316-215.578947H687.157895c7.410526 0 13.473684 6.063158 13.473684 13.473684V862.315789h53.894737v-94.315789c0-37.160421-30.208-67.368421-67.368421-67.368421h-44.65179c40.771368-58.017684 89.438316-111.427368 138.913684-153.626947C841.512421 600.037053 862.315789 655.225263 862.315789 754.526316h53.894737c0-38.912-2.748632-74.482526-11.102315-107.789474H1024v-26.947368z" fill="#231F20" ></path></symbol><symbol id="icon-goat_wei" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 50.202947c52.304842 70.925474 136.973474 152.144842 232.528843 190.383158l19.994947-50.041263c-109.271579-43.708632-202.805895-152.629895-238.780632-217.49221H808.421053v-53.894737H538.947368v-53.894737h215.578948v-53.894737h-215.578948V161.684211h-53.894736v161.68421h-215.578948v53.894737h215.578948v53.894737H215.578947v53.894737h255.757474c-35.974737 64.862316-129.536 173.783579-238.807579 217.49221l20.021895 50.041263c95.528421-38.238316 180.197053-119.484632 232.501895-190.383158V808.421053h53.894736v-246.218106z" fill="#231F20" ></path></symbol><symbol id="icon-dragon" viewBox="0 0 1024 1024"><path d="M366.376421 344.441263l152.980211-152.98021c43.142737-43.142737 141.204211-9.216 270.201263 115.738947-15.225263 9.835789-25.114947 15.818105-44.13979 32.256s-38.076632 35.489684-59.418947 56.832c-4.203789 4.203789-51.173053 53.221053-78.740211 82.027789-10.805895-12.126316-22.743579-24.171789-34.654315-36.082526L493.136842 362.792421l-54.218105 54.218105-72.542316-72.569263zM862.315789 512c0 46.834526-45.352421 80.842105-107.789473 80.842105-108.948211 0-189.359158-28.806737-267.129263-56.697263C414.100211 509.871158 344.872421 485.052632 258.182737 485.052632 80.788211 485.052632 0 588.126316 0 683.897263h53.894737C73.216 659.779368 135.302737 646.736842 177.340632 646.736842c77.338947 0 223.124211 23.282526 291.893894 47.912421C547.462737 722.701474 615.989895 754.526316 734.315789 754.526316 862.315789 754.526316 916.210526 670.315789 916.210526 512h-53.894737z" fill="#FF8787" ></path><path d="M552.421053 1024c-69.766737 0-113.825684-13.958737-156.402527-27.459368-54.487579-17.273263-110.807579-35.004632-232.421052-26.516211l-3.826527-53.733053c131.718737-9.458526 195.934316 10.967579 252.52379 28.887579 42.226526 13.365895 78.686316 24.926316 140.126316 24.926316 92.752842 0 148.210526-57.936842 148.210526-113.960421 0-16.949895-5.524211-101.618526-114.634105-101.618526-64.970105 0-112.747789 23.336421-163.328 48.02021C365.325474 830.571789 300.301474 862.315789 204.288 862.315789 85.908211 862.315789 0 787.294316 0 683.897263 0 588.126316 80.788211 485.052632 258.182737 485.052632c86.689684 0 155.917474 24.818526 229.214316 51.09221 45.810526 16.410947 92.564211 33.172211 145.488842 44.166737 9.000421-7.033263 13.850947-16.276211 13.850947-26.758737 0-37.187368-37.672421-74.859789-74.13221-111.265684l-3.287579-3.287579 38.103579-38.103579 3.260631 3.287579C652.853895 446.275368 700.631579 494.026105 700.631579 553.552842c0 12.719158-2.802526 24.926316-7.976421 36.109474A594.997895 594.997895 0 0 0 754.526316 592.842105c62.437053 0 107.789474-34.007579 107.789473-80.842105 0-58.853053-52.870737-110.268632-108.840421-164.702316l-8.057263-7.841684c-19.024842 16.437895-38.076632 35.489684-59.418947 56.832l-38.103579-38.103579c74.805895-74.832842 134.898526-134.898526 268.314947-141.931789V55.619368c-63.407158 7.787789-120.993684 39.424-121.667368 39.801264l-15.818105 8.811789-14.120421-11.344842C731.701895 66.452211 709.712842 53.894737 673.684211 53.894737c-41.418105 0-74.347789 25.869474-109.190737 53.301895-26.624 20.911158-54.137263 42.549895-86.851369 53.194105L469.342316 161.684211h-69.093053l-105.525895 105.525894-38.103579-38.130526L324.015158 161.684211H161.684211V107.789474h303.104c22.231579-8.272842 43.708632-25.168842 66.398315-42.981053C569.829053 34.438737 613.618526 0 673.684211 0c48.909474 0 81.408 17.946947 110.888421 40.097684C813.702737 26.300632 877.729684 0 943.157895 0h26.947368v323.368421h-53.894737v-53.167158c-54.164211 3.098947-92.914526 15.845053-127.002947 36.675369l1.832421 1.778526C852.587789 368.505263 916.210526 430.376421 916.210526 512c0 60.928-43.708632 109.945263-107.789473 127.622737V700.631579h53.894736v-53.894737h53.894737v53.894737h53.894737v53.894737h-53.894737v53.894737h-53.894737v-53.894737h-53.894736c-29.722947 0-53.894737-24.171789-53.894737-53.894737v-53.894737c-118.325895 0-207.063579-31.797895-285.318737-59.877053C400.437895 562.229895 335.494737 538.947368 258.182737 538.947368 117.059368 538.947368 53.894737 611.732211 53.894737 683.897263 53.894737 757.221053 115.738947 808.421053 204.288 808.421053c11.910737 0 23.228632-0.538947 34.034526-1.536C248.454737 796.321684 269.473684 770.640842 269.473684 739.166316c0-33.118316-43.088842-70.979368-58.152421-81.596632l30.935579-44.139789c8.299789 5.793684 81.111579 58.664421 81.111579 125.736421 0 19.429053-4.527158 37.052632-10.994526 52.304842 30.773895-10.051368 58.314105-23.498105 86.662737-37.349053C452.877474 727.848421 508.577684 700.631579 585.997474 700.631579 702.410105 700.631579 754.526316 778.725053 754.526316 856.144842 754.526316 938.657684 678.912 1024 552.421053 1024z m-21.180632-623.104L493.136842 362.792421l137.889684-137.889684 38.103579 38.103579-137.889684 137.889684z m-126.760421-18.351158l-38.103579-38.103579 152.980211-152.98021 38.103579 38.103579-152.980211 152.98021z m282.004211-218.624c15.494737-9.754947 43.331368-31.447579 43.331368-31.447579-25.734737-27.809684-49.556211-33.333895-67.368421-29.07621-19.240421 4.608-37.753263 24.602947-37.753263 24.602947s42.253474 22.447158 61.790316 35.920842z" fill="#231F20" ></path></symbol><symbol id="icon-horse" viewBox="0 0 1024 1024"><path d="M776.003368 646.736842c16.599579-99.947789 43.439158-181.086316 83.213474-256.538947l6.817684-12.934737H269.473684c-36.756211 0-53.894737 54.945684-53.894737 92.05221 0 46.753684 6.656 77.527579 70.278737 176.074106l84.533895 128.269473L498.876632 646.736842h277.126736z" fill="#FFAF6E" ></path><path d="M1024 0v404.210526c0 33.333895 0 134.736842-92.079158 134.736842h-13.824l-78.362947-109.056c-22.743579 49.906526-40.340211 103.046737-53.490527 162.950737h115.092211C937.310316 592.842105 970.105263 625.637053 970.105263 661.638737c0 60.631579-69.389474 154.300632-77.312 164.75621l-43.008-32.471579C875.466105 759.861895 916.210526 693.813895 916.210526 661.638737c0-5.982316-8.919579-14.901895-14.901894-14.901895h-125.332211C761.128421 736.121263 754.526316 840.569263 754.526316 970.105263h-53.894737c0-283.971368 31.097263-453.605053 110.888421-605.049263l20.318316-38.534737 112.801684 156.995369c14.443789-4.419368 25.465263-20.938105 25.465263-79.306106V0h53.894737z m-161.684211 161.684211h53.894737V0h-53.894737v80.842105c-17.381053-14.955789-38.184421-26.947368-80.842105-26.947368h-134.736842v53.894737h134.736842c37.672421 0 80.842105 40.906105 80.842105 53.894737z m-107.789473 0h-215.578948v53.894736h161.684211l53.894737-53.894736zM300.894316 766.544842L400.680421 916.210526h64.754526l-95.043368-142.551579L498.876632 646.736842h167.855157a1212.631579 1212.631579 0 0 1 9.431579-53.894737h-199.383579l-175.885473 173.702737z m109.97221-184.400842l-37.861052-38.319158-132.419369 130.802526C173.729684 571.095579 161.684211 529.812211 161.684211 469.315368 161.684211 398.578526 199.464421 323.368421 269.473684 323.368421h323.368421l53.894737-53.894737H269.473684c-6.709895 0-13.258105 0.565895-19.698526 1.482105C234.927158 249.451789 204.638316 215.578947 160.633263 215.578947 65.967158 215.578947 0 349.291789 0 469.315368c0 70.170947 16.141474 136.650105 49.232842 202.671158L6.197895 723.833263l41.472 34.41179 66.128842-79.737264-8.704-16.033684C83.105684 622.133895 53.894737 558.214737 53.894737 469.315368 53.894737 368.451368 106.765474 269.473684 160.633263 269.473684c13.231158 0 25.815579 9.889684 35.43579 20.533895C142.874947 321.967158 107.789474 388.500211 107.789474 469.315368c0 78.201263 19.698526 130.937263 93.642105 243.981474l-55.296 54.622316L280.899368 970.105263h64.754527l-130.048-195.072 195.260631-192.889263z" fill="#231F20" ></path></symbol><symbol id="icon-monkey_shen" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#BBC4C9" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 134.736842h161.684211v53.894737h53.894737V269.473684h-215.578948V161.684211h-53.894736v107.789473h-215.578948v431.157895h53.894737v-53.894737h161.684211v215.578947h53.894736v-215.578947z m0-161.68421h161.684211v107.789473h-161.684211v-107.789473z m-215.578947 0h161.684211v107.789473h-161.684211v-107.789473z m215.578947-161.684211h161.684211v107.789474h-161.684211v-107.789474z m-215.578947 0h161.684211v107.789474h-161.684211v-107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-ox_chou" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-161.68421 188.631579h-159.555369c13.985684-172.813474 43.115789-357.429895 70.817684-385.158737L700.631579 269.473684H323.368421v53.894737h107.169684c-1.940211 45.756632-8.192 103.962947-15.76421 161.684211H323.368421v53.894736h83.968c-9.862737 68.446316-20.264421 130.128842-25.734737 161.684211H215.578947v53.894737h592.842106v-53.894737z m-346.543158-161.684211h149.800421a3313.717895 3313.717895 0 0 0-16.842105 161.684211h-158.477474c6.036211-35.247158 16.114526-95.636211 25.519158-161.684211z m22.608842-215.578947h171.735579c-15.198316 41.121684-27.405474 100.594526-36.890948 161.684211h-150.123789c7.383579-57.505684 13.419789-115.361684 15.279158-161.684211z" fill="#231F20" ></path></symbol><symbol id="icon-monkey" viewBox="0 0 1024 1024"><path d="M757.733053 485.052632H565.894737a80.842105 80.842105 0 0 0-80.842105 80.842105v215.578947c0 40.96 43.546947 99.678316 77.446736 139.210105C596.426105 960.215579 603.055158 970.105263 603.055158 970.105263H754.526316s15.144421-18.674526 45.891368-58.071579S862.315789 809.984 862.315789 717.608421c0-89.573053-47.993263-166.346105-104.582736-232.555789z" fill="#C3D686" ></path><path d="M538.947368 1024h-53.894736c0-32.794947 25.869474-87.417263 77.446736-103.316211C528.599579 881.152 485.052632 822.433684 485.052632 781.473684c0-44.570947 36.271158-80.842105 80.842105-80.842105h80.842105v53.894737h-80.842105a26.947368 26.947368 0 0 0-26.947369 26.947368c0 19.725474 36.675368 77.473684 92.133053 134.736842h88.602947c20.210526-14.147368 88.737684-71.464421 88.737685-198.602105 0-108.382316-93.237895-202.967579-168.151579-278.986105-49.502316-50.202947-88.576-89.842526-98.735158-128.61979-11.749053-44.732632-21.584842-112.586105-26.327579-148.318315H377.263158c-45.136842 0-89.519158 8.434526-121.802105 53.894736H431.157895v53.894737c-97.28 0-107.789474 113.071158-107.789474 161.684211v53.894737h53.894737v161.68421h-53.894737v-107.789474h-26.947368c-170.253474 0-188.631579-94.234947-188.631579-134.736842 0-31.043368 35.220211-72.326737 55.727158-93.722947 2.694737-14.686316 5.847579-28.348632 9.431579-41.013895H161.684211V215.578947h31.528421C239.642947 120.993684 317.224421 107.789474 377.263158 107.789474h185.640421l2.802526 23.794526c0.134737 1.050947 12.719158 106.657684 27.944421 164.756211 6.494316 24.872421 44.624842 63.514947 84.965053 104.448C760.481684 483.813053 862.315789 587.129263 862.315789 717.608421c0 92.375579-31.124211 155.028211-61.898105 194.425263C904.919579 892.146526 970.105263 803.004632 970.105263 673.684211c0-91.405474-42.819368-154.381474-84.237474-215.255579C847.791158 402.458947 808.421053 344.576 808.421053 269.473684c0-119.349895 87.093895-161.684211 161.68421-161.68421v53.894737c-32.417684 0-107.789474 10.509474-107.789474 107.789473 0 58.502737 31.555368 104.933053 68.096 158.639158C974.282105 492.597895 1024 565.679158 1024 673.684211c0 177.286737-108.301474 296.421053-269.473684 296.421052h-161.684211c-37.672421 0-53.894737 40.906105-53.894737 53.894737zM229.214316 269.473684a384.808421 384.808421 0 0 0-14.012632 58.341053l-1.401263 8.488421-6.090105 6.117053c-22.878316 22.932211-44.813474 52.601263-46.026105 62.275368 0 56.805053 53.76 75.264 107.789473 79.386947V431.157895c0-58.691368 13.473684-119.619368 46.511158-161.684211h-86.770526zM323.368421 1024h-53.894737c0-32.794947 25.869474-87.417263 77.446737-103.316211C313.020632 881.152 269.473684 822.433684 269.473684 781.473684c0-44.570947 36.271158-80.842105 80.842105-80.842105h45.16379A188.847158 188.847158 0 0 1 565.894737 592.842105h134.736842v53.894737h-134.736842c-74.293895 0-134.736842 60.442947-134.736842 134.736842v26.516211l-53.894737 0.377263V781.473684c0-9.162105 0.646737-18.135579 1.913263-26.947368H350.315789c-14.848 0-26.947368 12.072421-26.947368 26.947368 0 19.725474 36.675368 77.473684 92.133053 134.736842H431.157895v53.894737h-53.894737c-37.672421 0-53.894737 40.906105-53.894737 53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-horse_wu" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#FF8787" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 26.947368h269.473685v-53.894736H538.947368v-161.684211h161.684211v-53.894737H411.001263c12.045474-33.28 20.156632-69.793684 20.156632-107.789473h-53.894737c0 121.963789-105.364211 233.391158-106.415158 234.496l38.858105 37.349052c2.883368-3.018105 43.816421-46.133895 77.392842-110.160842H485.052632v161.684211H215.578947v53.894736h269.473685v323.368421h53.894736V538.947368z" fill="#231F20" ></path></symbol><symbol id="icon-ox" viewBox="0 0 1025 1024"><path d="M540.294737 754.526316h215.578947c20.210526 0 35.112421 1.374316 53.894737 4.581052 91.863579 15.656421 145.354105 67.691789 161.684211 86.069895V916.210526h53.894736V635.580632l-7.895579-7.895579c-9.269895-9.269895-36.513684-49.232842-44.032-196.527158H540.294737a161.684211 161.684211 0 0 0-161.684211 161.68421v131.098948c43.304421 20.210526 97.28 30.585263 161.684211 30.585263z" fill="#FFAF6E" ></path><path d="M1025.347368 635.580632V916.210526h-53.894736v-71.033263c-16.330105-18.405053-69.820632-70.413474-161.684211-86.069895V916.210526h-53.894737v-161.68421h-107.789473v215.578947h-53.894737V700.631579h161.68421c100.998737 0 172.570947 38.669474 215.578948 71.868632v-115.738948c-33.684211-43.627789-51.712-137.458526-53.706106-279.498105H701.978947c-76.934737 0-127.218526-26.219789-175.804631-51.550316a1556.048842 1556.048842 0 0 0-26.839579-13.743158c-26.839579 26.004211-66.209684 44.921263-115.738948 55.511579 24.441263 22.986105 60.874105 52.116211 106.469053 72.838737l-22.312421 49.044211c-76.584421-34.816-129.589895-88.926316-150.824421-113.125053-10.644211 0.619789-21.477053 1.024-32.687158 1.024a473.734737 473.734737 0 0 1-123.365053-15.952842l-93.022315 186.314105 68.581052 53.86779C167.882105 579.557053 237.891368 538.947368 324.715789 538.947368v53.894737c-95.986526 0-170.361263 62.490947-171.088842 63.137684l-16.78821 14.282106-136.838737-107.358316 109.729684-219.809684C46.430316 314.448842 1.347368 267.371789 1.347368 199.868632 1.347368 89.815579 121.586526 53.894737 163.031579 53.894737v53.894737c-14.120421 0-107.789474 17.165474-107.789474 92.079158C55.242105 290.465684 192.188632 323.368421 284.240842 323.368421c67.907368 0 122.421895-12.988632 157.696-35.624421-42.711579-14.336-95.097263-23.120842-169.337263-18.324211l-3.503158-53.786947c95.878737-6.117053 160.148211 8.515368 211.429053 28.833684C484.244211 235.439158 486.4 225.818947 486.4 215.578947c0-48.855579-57.829053-76.288-58.394947-76.557473l22.393263-49.017263C454.063158 91.648 540.294737 131.826526 540.294737 215.578947c0 18.566737-3.422316 35.84-9.997474 51.631158 7.060211 3.584 13.985684 7.168 20.776421 10.698106C597.854316 302.322526 638.248421 323.368421 701.978947 323.368421h269.473685v26.947368c0 214.689684 35.220211 266.590316 45.999157 277.369264l7.895579 7.895579z m-729.384421 25.141894l-98.789052 118.541474 86.797473 137.835789 45.594948-28.725894-65.913263-104.690527 37.052631-44.43621C358.642526 785.192421 439.080421 808.421053 540.294737 808.421053v-53.894737c-99.893895 0-175.077053-24.549053-223.474526-72.946527l-20.857264-20.857263z" fill="#231F20" ></path></symbol><symbol id="icon-rabbit_mao" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#7DD47F" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-377.263158-188.631579h107.789474v323.368421c-20.48 0-39.936-11.264-40.016842-11.317895l-27.728842 46.214737c3.206737 1.940211 32.660211 18.997895 67.745684 18.997895 30.746947 0 53.894737-23.147789 53.894737-53.894737V269.473684h-215.578948v538.947369h53.894737V323.368421z m-107.789473 242.526316v-242.526316h-53.894737v196.904421l-107.789474 40.421053v-243.927579l169.094737-48.316632-14.821053-51.819789L269.473684 276.102737v304.801684l-36.405895 13.662316 18.917053 50.472421 178.741895-67.018105c-5.039158 69.928421-55.269053 106.981053-165.133474 122.933894l7.733895 53.328842C325.712842 746.657684 485.052632 723.536842 485.052632 565.894737z" fill="#231F20" ></path></symbol><symbol id="icon-rabbit" viewBox="0 0 1024 1024"><path d="M680.96 488.744421a1666.667789 1666.667789 0 0 0-54.433684-23.95621c-16.006737 12.234105-33.899789 20.264421-60.631579 20.264421h-80.842105c-36.810105 0-83.644632 30.396632-104.394106 67.772631-42.819368 77.123368-53.409684 117.813895-11.021473 201.701053C397.096421 808.879158 431.157895 876.409263 431.157895 970.105263h338.539789l68.338527-138.859789c20.129684-40.96 24.252632-73.701053 24.252631-110.349474 0.026947-57.397895-25.061053-159.717053-181.328842-232.151579z" fill="#FFBDD8" ></path><path d="M862.315789 720.896c0 36.621474-4.122947 69.389474-24.252631 110.349474L769.697684 970.105263H485.052632v-53.894737h48.370526C507.877053 880.074105 485.052632 833.509053 485.052632 781.473684c0-59.418947 24.171789-113.313684 63.218526-152.360421l38.103579 38.103579A161.091368 161.091368 0 0 0 538.947368 781.473684c0 54.784 35.381895 104.043789 63.514948 134.736842h133.712842l53.490526-108.759579c15.710316-31.851789 18.755368-55.834947 18.755369-86.554947 0-80.976842-63.434105-150.096842-178.607158-195.503158-17.542737 8.138105-38.292211 13.554526-63.919158 13.554526h-80.842105c-13.958737 0-43.924211 15.979789-57.290106 40.016843l-47.104-26.165895C401.408 515.449263 448.242526 485.052632 485.052632 485.052632h80.842105c37.268211 0 57.478737-15.440842 79.090526-36.45979C625.367579 336.195368 549.753263 269.473684 485.052632 269.473684h-107.789474a21.288421 21.288421 0 0 0-5.955369 2.021053A683.762526 683.762526 0 0 0 302.187789 194.021053c-35.84-34.223158-61.763368-58.933895-94.908631-79.440842A42.442105 42.442105 0 0 0 185.478737 107.789474a22.824421 22.824421 0 0 0-17.381053 7.194947c-10.913684 11.425684-6.063158 28.240842 1.428211 39.181474 21.989053 32.121263 47.912421 56.858947 83.752421 91.109052 20.614737 19.671579 49.259789 43.169684 77.392842 63.08379C281.007158 367.400421 215.578947 484.432842 215.578947 592.842105c0 74.482526 24.791579 124.065684 51.065264 176.586106C294.534737 825.209263 323.368421 882.903579 323.368421 970.105263h-53.894737c0-74.482526-24.791579-124.065684-51.065263-176.586105C190.517895 737.738105 161.684211 680.043789 161.684211 592.842105c0-90.866526 42.226526-197.685895 93.453473-274.485894a803.759158 803.759158 0 0 1-39.046737-34.115369C177.852632 247.754105 150.231579 221.399579 125.035789 184.616421c-24.441263-35.759158-22.797474-78.686316 4.069053-106.819368 26.300632-27.567158 70.898526-31.043368 106.522947-9.000421 37.941895 23.444211 65.562947 49.798737 103.774316 86.258526 9.970526 9.512421 33.037474 32.309895 56.93979 60.550737h68.634947c-27.621053-37.780211-60.416-72.730947-88.522105-99.543579-28.833684-27.540211-54.730105-52.116211-84.533895-74.024421L326.305684 0.296421c31.232 23.228632 57.802105 48.532211 87.309474 76.719158 53.840842 51.388632 94.450526 100.594526 121.74821 146.83621 82.836211 26.650947 150.042947 116.870737 165.025685 230.750316l1.724631 13.177263-9.404631 9.404632c-3.772632 3.772632-7.706947 7.653053-11.802948 11.587368C837.227789 561.178947 862.315789 663.498105 862.315789 720.896zM309.463579 754.526316c3.934316 8.057263 7.895579 16.087579 11.991579 24.144842C348.887579 832.970105 377.263158 889.128421 377.263158 970.105263h53.894737c0-93.696-34.061474-161.226105-61.520842-215.578947h-60.173474z m597.90821 53.894737c-3.422316 9.404632-7.814737 19.806316-13.770105 31.959579L829.790316 970.105263h60.065684l52.143158-105.957052c10.778947-21.935158 17.515789-40.016842 21.90821-55.727158h-56.535579zM514.694737 390.736842c0-34.223158-13.231158-44.463158-29.642105-44.463158s-29.642105 10.24-29.642106 44.463158c0 34.250105 13.231158 44.463158 29.642106 44.463158s29.642105-10.213053 29.642105-44.463158z" fill="#231F20" ></path></symbol><symbol id="icon-rat_zi" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#85C3DE" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 188.631579v-215.578947h269.473685v-53.894737H538.947368v-39.585684c26.543158-18.081684 94.585263-65.050947 177.852632-127.488L700.631579 215.578947H323.368421v53.894737h295.316211a4221.008842 4221.008842 0 0 1-121.640421 85.369263l-11.991579 8.003369V431.157895H242.526316v53.894737h242.526316v215.578947c0 48.343579-13.850947 53.894737-134.736843 53.894737v53.894737c105.391158 0 188.631579 0 188.631579-107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-rat" viewBox="0 0 1024 1024"><path d="M727.659789 431.157895c-132.581053 0-220.348632 47.454316-285.803789 154.354526-19.779368 32.309895-15.845053 76.503579-9.404632 96.579368 3.260632 10.159158 7.760842 18.647579 12.422737 25.546106C464.761263 737.010526 499.927579 754.526316 538.947368 754.526316h66.829474c1.158737 17.893053-1.967158 34.762105-15.144421 53.975579-12.692211 18.539789-37.807158 40.151579-56.32 54.810947 25.249684-0.673684 52.709053-0.997053 83.240421-0.997053C877.487158 862.315789 970.105263 711.922526 970.105263 571.176421 936.421053 512 882.364632 431.157895 727.659789 431.157895z" fill="#85C3DE" ></path><path d="M210.432 1012.897684l-43.573895-31.690105c106.954105-147.051789 185.317053-171.196632 423.828211-172.705684 21.396211-31.258947 16.249263-56.266105 9.377684-89.70779-3.557053-17.138526-7.221895-34.842947-7.221895-54.433684 0-68.958316 25.330526-104.636632 63.407158-136.973474l34.896842 41.040842c-29.453474 25.061053-44.409263 46.780632-44.409263 95.932632 0 14.093474 2.937263 28.402526 6.063158 43.546947 5.901474 28.510316 12.8 62.032842-1.131789 99.462737 166.373053-10.24 264.542316-96.902737 264.542315-236.193684C916.210526 418.330947 827.580632 323.368421 684.921263 323.368421c-83.644632 0-153.303579 29.696-174.187789 39.612632a224.875789 224.875789 0 0 1-20.533895 31.339789l-41.741474-34.115368 20.884211 17.057684-20.911158-16.976842C448.781474 359.828211 485.052632 314.287158 485.052632 262.736842c0-34.816-8.946526-60.766316-26.570106-77.069474-17.515789-16.249263-44.786526-24.602947-81.219368-24.953263V323.368421h-53.894737V109.783579l24.872421-1.913263c64.700632-4.931368 114.095158 7.895579 146.863158 38.238316C524.207158 173.056 538.947368 212.291368 538.947368 262.736842c0 11.102316-1.131789 21.908211-3.072 32.202105 37.268211-12.584421 89.842526-25.465263 149.045895-25.465263C858.165895 269.473684 970.105263 387.907368 970.105263 571.176421 970.105263 711.922526 877.487158 862.315789 617.552842 862.315789c-258.667789 0-311.942737 19.698526-407.120842 150.581895z m19.105684-256.835368c-12.045474 0-24.387368-0.565895-37.025684-1.64379l-22.096842-1.859368-2.425263-22.016C167.747368 728.144842 161.684211 672.444632 161.684211 631.026526c0-103.585684 21.450105-178.903579 53.894736-259.045052V107.789474h53.894737v274.782315l-2.021052 4.904422C235.439158 465.758316 215.578947 533.800421 215.578947 631.026526c0 22.878316 2.101895 51.442526 3.826527 70.979369 99.678316 2.802526 172.813474-35.408842 222.450526-116.493474l48.020211 24.090947c-11.237053 28.133053-11.371789 51.577263-0.377264 67.853474 9.701053 14.282105 28.645053 23.174737 49.448421 23.174737v53.894737c-39.019789 0-74.186105-17.515789-94.073263-46.888421a100.244211 100.244211 0 0 1-12.422737-25.546106c-53.221053 49.178947-121.128421 73.943579-202.913684 73.970527zM379.957895 525.473684c0-34.223158-13.231158-44.463158-29.642106-44.463158s-29.642105 10.24-29.642105 44.463158c0 34.250105 13.231158 44.463158 29.642105 44.463158s29.642105-10.213053 29.642106-44.463158z" fill="#231F20" ></path></symbol><symbol id="icon-rooster_you" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#BBC4C9" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-215.578947-188.631579h-161.684211v-26.947368h161.684211V242.526316H269.473684v53.894737h161.684211v26.947368h-161.684211v485.052632h53.894737v-53.894737h377.263158v53.894737h53.894737V323.368421zM323.368421 646.736842h377.263158v53.894737H323.368421v-53.894737z m0-269.473684h107.789474c0 103.316211-72.784842 107.654737-81.084632 107.789474L350.315789 538.947368c46.592 0 134.736842-33.792 134.736843-161.68421h53.894736v107.789474c0 29.722947 24.171789 53.894737 53.894737 53.894736h107.789474v53.894737H323.368421v-215.578947z m377.263158 0v107.789474h-107.789474v-107.789474h107.789474z m-215.578947-80.842105h53.894736v26.947368h-53.894736v-26.947368z" fill="#231F20" ></path></symbol><symbol id="icon-rooster" viewBox="0 0 1024 1024"><path d="M891.688421 506.421895C877.244632 455.033263 862.315789 401.893053 862.315789 323.368421V116.224l-323.368421 195.745684V323.368421c0 78.524632 14.928842 131.664842 29.372632 183.053474 12.611368 44.894316 24.522105 87.282526 24.522105 140.314947 0 101.618526-77.931789 176.693895-168.286316 203.991579l5.416422 11.587368h215.578947c24.333474 0 43.385263-0.242526 58.556631-2.128842C811.52 846.821053 916.210526 764.550737 916.210526 646.736842c0-53.032421-11.910737-95.420632-24.522105-140.314947z" fill="#FF8787" ></path><path d="M673.684211 354.357895c-16.384 0-29.642105-10.213053-29.642106-44.463158 0-34.223158 13.231158-44.463158 29.642106-44.463158s29.642105 10.24 29.642105 44.463158c0 34.250105-13.258105 44.463158-29.642105 44.463158zM540.106105 970.105263l-50.58021-107.789474h156.05221l50.607158 107.789474h59.553684l-51.60421-109.918316C811.52 846.821053 916.210526 764.550737 916.210526 646.736842c0-53.032421-11.910737-95.420632-24.522105-140.314947C877.244632 455.033263 862.315789 401.893053 862.315789 323.368421V107.789474c0-59.445895-48.343579-107.789474-107.789473-107.789474a107.924211 107.924211 0 0 0-107.789474 106.172632 100.890947 100.890947 0 0 0-24.117895-3.314527 88.710737 88.710737 0 0 0-88.602947 88.602948c0 20.668632 5.227789 39.720421 10.671158 53.921684l-99.489684 59.688421 93.749894 14.470737V377.263158c0 14.416842-5.901474 21.692632-33.360842 49.152l-11.129263 11.129263C398.228211 326.521263 324.985263 269.473684 215.740632 269.473684 96.768 269.473684 0 366.241684 0 485.214316V646.736842h53.894737v-161.522526A162.007579 162.007579 0 0 1 215.740632 323.368421c82.081684 0 140.422737 36.244211 240.64 152.252632l-38.615579 38.615579C367.804632 461.285053 323.098947 431.157895 259.584 431.157895A151.983158 151.983158 0 0 0 107.789474 582.952421V754.526316h53.894737v-171.573895A98.007579 98.007579 0 0 1 259.584 485.052632c46.322526 0 79.629474 20.911158 137.027368 86.016l18.970948 21.530947 128.080842-128.080842C572.200421 435.981474 592.842105 415.366737 592.842105 377.263158v-97.926737l23.309474-14.120421-13.662316-23.04c-0.161684-0.242526-14.578526-24.899368-14.578526-50.688 0-19.132632 15.575579-34.708211 34.70821-34.708211 5.093053 0 26.785684 3.179789 39.558737 18.647579l26.327579 46.026106 39.774316-24.090948-20.372211-49.367579C704.754526 140.449684 700.631579 117.517474 700.631579 107.789474c0-29.722947 24.171789-53.894737 53.894737-53.894737s53.894737 24.171789 53.894737 53.894737v215.578947c0 85.935158 16.680421 145.300211 31.366736 197.632C851.887158 564.008421 862.315789 601.141895 862.315789 646.736842c0 95.285895-99.408842 161.684211-188.631578 161.684211h-209.461895l-68.419369-145.704421C375.242105 618.954105 338.108632 592.842105 296.448 592.842105A80.976842 80.976842 0 0 0 215.578947 673.711158V862.315789h53.894737v-188.604631c0-14.874947 12.099368-26.974316 26.974316-26.974316 20.533895 0 38.965895 14.147368 50.553263 38.858105L480.579368 970.105263h59.526737z" fill="#231F20" ></path></symbol><symbol id="icon-snake_si" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#FF8787" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-242.041263 180.762947l-52.116211-13.797052C657.219368 749.864421 651.425684 754.526316 619.789474 754.526316h-242.526316V485.052632h269.473684v53.894736h53.894737V215.578947H323.368421v538.947369c0 29.722947 24.171789 53.894737 53.894737 53.894737h242.526316c77.689263 0 91.189895-51.065263 108.274526-115.658106zM377.263158 269.473684h269.473684v161.684211H377.263158v-161.684211z" fill="#231F20" ></path></symbol><symbol id="icon-tiger_yin" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#7DD47F" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-257.42821 299.250526l-107.789474-53.894737-24.117895 48.208843 107.789474 53.894736 24.117895-48.208842z m-269.473685-5.658947l-24.117894-48.208842-107.789474 53.894737 24.117895 48.208842 107.789473-53.894737zM700.631579 431.157895h-161.684211v-53.894737h107.789474v-53.894737H377.263158v53.894737h107.789474v53.894737h-161.684211v323.368421h53.894737v-53.894737h269.473684v53.894737h53.894737V431.157895z m-161.684211 161.68421h107.789474v53.894737h-107.789474v-53.894737z m-161.68421 0h107.789474v53.894737h-107.789474v-53.894737z m161.68421-107.789473h107.789474v53.894736h-107.789474v-53.894736z m-161.68421 0h107.789474v53.894736h-107.789474v-53.894736zM754.526316 215.578947h-223.097263l-20.803369-62.410105-51.119158 17.057684L474.624 215.578947H269.473684v107.789474h53.894737v-53.894737h377.263158v53.894737h53.894737V215.578947z" fill="#231F20" ></path></symbol><symbol id="icon-snake" viewBox="0 0 1024 1024"><path d="M107.789474 790.474105c0-72.434526 67.880421-91.513263 121.451789-91.513263 74.401684 0 153.815579 34.438737 237.891369 70.925474 50.580211 21.935158 104.609684 45.325474 162.250105 63.083789-52.412632 44.786526-118.784 74.347789-195.152842 83.078737-143.171368 16.357053-326.440421 7.006316-326.440421-125.574737zM377.263158 215.578947c-15.575579 0-30.288842 3.449263-43.654737 9.377685A250.691368 250.691368 0 0 0 323.368421 296.421053c0 115.550316 76.422737 169.391158 137.83579 212.614736 8.138105 5.712842 16.141474 11.371789 23.848421 17.057685V323.368421a107.789474 107.789474 0 0 0-107.789474-107.789474z" fill="#C3D686" ></path><path d="M671.528421 788.857263c44.328421 11.964632 89.626947 19.563789 136.892632 19.56379 89.168842 0 161.684211-60.442947 161.68421-134.736842s-72.515368-134.736842-161.68421-134.736843c-19.078737 0-37.025684 1.509053-54.218106 4.015158-0.754526-101.402947-38.211368-172.355368-79.413894-219.648L673.684211 323.368421a1749.962105 1749.962105 0 0 1-79.036632-1.751579c45.702737 35.866947 108.705684 107.870316 105.984 232.367158 0 0.431158-0.080842 0.808421-0.10779 1.239579-34.923789 10.994526-66.155789 26.731789-95.097263 45.190737a163.085474 163.085474 0 0 0-15.845052-42.388211c-21.557895-39.639579-60.065684-66.775579-97.360842-93.022316C433.098105 423.343158 377.263158 384 377.263158 296.421053c0-130.290526 108.274526-188.631579 215.578947-188.631579 64.134737 0 132.715789 12.045474 214.366316 37.807158C802.330947 180.250947 780.099368 209.381053 700.631579 214.635789V161.684211h-53.894737v53.679157c-63.272421-1.024-104.528842-5.200842-104.986947-5.254736l-5.578106 53.598315C538.408421 263.949474 592.357053 269.473684 673.684211 269.473684c125.170526 0 188.631579-48.128 188.631578-143.063579V106.981053l-18.432-6.144C747.789474 68.823579 668.025263 53.894737 592.842105 53.894737c-158.666105 0-269.473684 99.732211-269.473684 242.526316 0 115.550316 76.422737 169.391158 137.83579 212.614736 33.684211 23.713684 65.509053 46.106947 81.003789 74.698106 9.539368 17.542737 13.285053 33.414737 12.341895 47.750737 21.153684 9.108211 42.118737 17.839158 62.949052 25.977263C671.151158 620.193684 729.977263 592.842105 808.421053 592.842105c59.445895 0 107.789474 36.271158 107.789473 80.842106s-48.343579 80.842105-107.789473 80.842105c-105.472 0-203.237053-42.388211-297.768421-83.429053-94.800842-41.094737-184.346947-79.952842-281.411369-79.952842C122.718316 591.171368 53.894737 644.715789 53.894737 727.578947c0 79.063579 67.098947 136.434526 159.555368 136.434527 142.174316 0 230.426947-66.883368 306.79579-129.886316 31.420632 13.419789 62.787368 26.058105 94.450526 37.133474-47.077053 49.637053-110.969263 82.566737-186.610526 91.270736l5.066105 53.625264c93.453474-7.006316 143.144421 9.350737 195.718737 26.543157 46.457263 15.225263 94.127158 30.854737 169.822316 30.854737 19.994947 0 41.957053-1.077895 66.344421-3.557052l-5.416421-53.625263c-105.283368 10.778947-158.100211-6.548211-213.935158-24.872422-22.150737-7.275789-44.624842-14.632421-70.305684-20.345263a334.848 334.848 0 0 0 96.14821-82.297263z m-458.078316 21.261474C162.573474 810.118737 107.789474 784.276211 107.789474 727.578947c0-60.847158 62.733474-82.539789 121.451789-82.539789 77.850947 0 154.731789 30.288842 235.250526 64.943158-66.263579 52.924632-139.722105 100.136421-251.041684 100.136421z" fill="#231F20" ></path></symbol><symbol id="icon-tiger" viewBox="0 0 1024 1024"><path d="M431.157895 162.250105V134.736842c0-41.552842-39.289263-80.842105-80.842106-80.842105-28.833684 0-57.128421 4.661895-58.314105 4.850526L269.473684 62.490947v83.887158C144.788211 223.824842 89.222737 346.839579 66.991158 431.157895h266.051368c240.747789 0 415.851789 107.789474 415.85179 269.473684-14.848-25.114947-43.924211-53.894737-88.68379-53.894737-67.988211 0-121.263158 71.033263-121.263158 161.684211 0 66.802526 30.477474 119.888842 60.712421 156.16 12.638316 15.171368 36.055579 37.726316 59.014737 58.88 5.066105 0.107789 9.781895 0.538947 15.009685 0.538947 219.297684 0 350.315789-191.811368 350.315789-377.263158C1024 327.545263 679.855158 172.813474 431.157895 162.250105z" fill="#F7C768" ></path><path d="M673.684211 1024c-114.768842 0-188.820211-33.333895-254.167579-62.787368-53.625263-24.144842-99.974737-45.002105-161.28-45.002106-40.448 0-83.590737 23.255579-103.639579 45.16379l-39.747369-36.432842C142.497684 894.787368 199.168 862.315789 258.236632 862.315789c68.392421 0 119.861895 21.288421 172.921263 45.056V673.684211c0-35.166316-17.542737-64.107789-30.639158-80.815158-15.198316 9.835789-32.067368 18.890105-50.741895 26.947368l-21.342316-49.475368C469.800421 509.413053 485.052632 377.317053 485.052632 323.368421V221.642105A597.827368 597.827368 0 0 0 404.210526 215.578947h-26.947368V134.736842c0-12.099368-14.848-26.947368-26.947369-26.947368-9.377684 0-18.836211 0.592842-26.947368 1.347368V269.473684h-53.894737V211.671579c-136.030316 102.912-158.450526 266.886737-161.306947 295.882105 9.135158 9.108211 38.992842 25.061053 71.976421 38.669474l38.103579-59.365053 12.449684-1.589894C321.212632 473.653895 377.263158 392.192 377.263158 323.368421h53.894737c0 88.333474-68.796632 192.242526-180.870737 213.342316l-48.397474 75.398737-20.291368-7.437474C53.894737 557.756632 53.894737 523.317895 53.894737 512c0-50.041263 37.025684-254.733474 215.578947-365.621895V62.490947l22.528-3.745684C293.187368 58.556632 321.482105 53.894737 350.315789 53.894737c41.552842 0 80.842105 39.289263 80.842106 80.842105v27.513263c248.697263 10.563368 592.842105 165.295158 592.842105 484.486737 0 185.451789-131.018105 377.263158-350.315789 377.263158z m-13.473685-323.368421c-36.513684 0-67.368421 49.367579-67.368421 107.789474 0 85.746526 68.096 145.084632 89.465263 161.549473 91.540211-2.533053 164.378947-45.487158 213.827369-107.654737H700.631579v-53.894736h230.238316c8.919579-17.273263 16.357053-35.354947 22.285473-53.894737h-239.885473l-6.467369-17.650527C706.290526 735.582316 692.439579 700.631579 660.210526 700.631579zM485.052632 931.112421c33.926737 14.066526 70.521263 26.597053 114.607157 33.468632C569.424842 928.309895 538.947368 875.223579 538.947368 808.421053c0-90.650947 53.274947-161.684211 121.263158-161.684211 44.759579 0 73.835789 28.779789 88.68379 53.894737h217.007158c2.775579-17.866105 4.203789-35.920842 4.203789-53.894737 0-38.938947-5.658947-74.752-15.925895-107.627789l-126.706526 126.679579-38.103579-38.103579L932.001684 485.052632a367.939368 367.939368 0 0 0-57.775158-81.596632l-154.543158 154.543158-38.103579-38.103579 153.573053-153.573053a537.869474 537.869474 0 0 0-82.593684-56.751158l-140.665263 140.638316-38.103579-38.103579 128.134737-128.134737A794.731789 794.731789 0 0 0 538.947368 231.046737V323.368421c0 50.149053-11.102316 156.698947-95.932631 236.328421 18.378105 23.417263 42.037895 63.407158 42.037895 113.987369v257.42821zM215.578947 431.157895v-53.894737c39.774316 0 53.894737-29.022316 53.894737-53.894737h53.894737c0 53.571368-37.025684 107.789474-107.789474 107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-boar" viewBox="0 0 1024 1024"><path d="M732.079158 377.263158c-107.789474 0-186.421895 31.393684-281.869474 126.841263L180.331789 773.982316C257.724632 807.909053 348.725895 808.421053 485.052632 808.421053h96.013473c55.834947-34.411789 133.551158-53.894737 227.354948-53.894737h121.344L970.105263 680.555789V572.631579c0-94.315789-130.236632-195.368421-238.026105-195.368421z" fill="#FFBDD8" ></path><path d="M808.421053 700.631579v53.894737c-196.446316 0-323.368421 84.641684-323.368421 215.578947h-53.894737c0-163.705263 148.075789-269.473684 377.263158-269.473684z m-323.368421 107.789474v-53.894737c-158.342737 0-245.598316 0-319.649685-49.367579L158.612211 700.631579H80.842105c-21.692632 0-26.624-14.821053-26.947368-26.947368v-82.620632c84.156632-11.183158 161.684211-74.913684 161.68421-186.853053V215.578947H161.684211v161.684211H134.736842c-66.964211 0-134.736842 37.025684-134.736842 107.789474h53.894737c0-42.630737 52.870737-53.894737 80.842105-53.894737h24.629895C147.132632 504.912842 85.153684 538.947368 26.947368 538.947368H0v134.736843c0 32.498526 21.530947 80.842105 80.842105 80.842105h61.682527c32.687158 20.506947 67.125895 33.145263 105.957052 41.013895A232.879158 232.879158 0 0 0 215.578947 916.210526h53.894737c0-41.930105 14.012632-80.303158 39.424-112.505263C358.885053 808.151579 415.959579 808.421053 485.052632 808.421053z m-72.946527-342.420211L323.368421 554.738526V431.157895h-53.894737v253.682526l180.736-180.736-38.103579-38.103579zM323.368421 161.684211h-53.894737v190.032842a769.536 769.536 0 0 1 53.894737-49.098106V161.684211z m323.368421-53.894737c-72.623158 0-146.809263 23.336421-215.578947 58.637473V107.789474h-53.894737v154.138947C458.832842 205.392842 555.331368 161.684211 646.736842 161.684211c148.587789 0 269.473684 120.885895 269.473684 269.473684v235.654737L809.579789 862.315789h61.359158L970.105263 680.555789V431.157895c0-178.310737-145.057684-323.368421-323.368421-323.368421z" fill="#231F20" ></path></symbol><symbol id="icon-boar_hai" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#85C3DE" ></path><path d="M309.975579 804.756211l-27.136-46.592c103.073684-60.011789 183.026526-132.473263 241.475368-219.24379H350.315789l-13.473684-50.283789c58.88-33.980632 99.435789-117.571368 118.703158-165.295158H242.526316v-53.894737h538.947368v53.894737h-268.18021c-12.395789 34.088421-42.469053 106.603789-90.435369 161.68421h134.009263a680.555789 680.555789 0 0 0 46.349474-107.708631l51.092211 17.057684c-58.421895 175.265684-171.034947 309.490526-344.333474 410.381474z m192.350316-2.937264L467.806316 760.454737c88.414316-73.728 154.516211-158.773895 202.105263-259.907369l48.801684 22.959158a797.372632 797.372632 0 0 1-82.351158 137.781895c32.741053 15.009684 83.456 44.867368 137.647158 101.591579l-38.938947 37.268211c-57.236211-59.877053-109.325474-85.557895-133.766737-95.178106a850.997895 850.997895 0 0 1-98.977684 96.848842z m48.613052-536.872421l-80.842105-53.894737 29.884632-44.840421 80.842105 53.894737-29.884632 44.840421zM512 53.894737C259.395368 53.894737 53.894737 259.395368 53.894737 512s205.500632 458.105263 458.105263 458.105263c9.081263 0 17.973895-0.835368 26.947368-1.374316v-53.894736c-8.946526 0.619789-17.866105 1.374316-26.947368 1.374315-222.881684 0-404.210526-181.328842-404.210526-404.210526S289.118316 107.789474 512 107.789474s404.210526 181.328842 404.210526 404.210526c0 195.206737-139.075368 358.507789-323.368421 396.045474v54.460631c214.096842-38.346105 377.263158-225.549474 377.263158-450.533052C970.105263 259.395368 764.604632 53.894737 512 53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-bilibili1" viewBox="0 0 1129 1024"><path d="M234.909 9.656a80.468 80.468 0 0 1 68.398 0 167.374 167.374 0 0 1 41.843 30.578l160.937 140.82h115.07l160.936-140.82a168.983 168.983 0 0 1 41.843-30.578A80.468 80.468 0 0 1 930.96 76.445a80.468 80.468 0 0 1-17.703 53.914 449.818 449.818 0 0 1-35.406 32.187 232.553 232.553 0 0 1-22.531 18.508h100.585a170.593 170.593 0 0 1 118.289 53.109 171.397 171.397 0 0 1 53.914 118.288v462.693a325.897 325.897 0 0 1-4.024 70.007 178.64 178.64 0 0 1-80.468 112.656 173.007 173.007 0 0 1-92.539 25.75H212.377a341.186 341.186 0 0 1-72.421-4.024A177.835 177.835 0 0 1 28.91 939.065a172.202 172.202 0 0 1-27.36-92.539V388.662a360.498 360.498 0 0 1 0-66.789A177.03 177.03 0 0 1 162.487 178.64h105.414c-16.899-12.07-31.383-26.555-46.672-39.43a80.468 80.468 0 0 1-25.75-65.984 80.468 80.468 0 0 1 39.43-63.57M216.4 321.873a80.468 80.468 0 0 0-63.57 57.937 108.632 108.632 0 0 0 0 30.578v380.615a80.468 80.468 0 0 0 55.523 80.469 106.218 106.218 0 0 0 34.601 5.632h654.208a80.468 80.468 0 0 0 76.444-47.476 112.656 112.656 0 0 0 8.047-53.109v-354.06a135.187 135.187 0 0 0 0-38.625 80.468 80.468 0 0 0-52.304-54.719 129.554 129.554 0 0 0-49.89-7.242H254.22a268.764 268.764 0 0 0-37.82 0z m0 0" fill="#20B0E3" ></path><path d="M348.369 447.404a80.468 80.468 0 0 1 55.523 18.507 80.468 80.468 0 0 1 28.164 59.547v80.468a80.468 80.468 0 0 1-16.094 51.5 80.468 80.468 0 0 1-131.968-9.656 104.609 104.609 0 0 1-10.46-54.719v-80.468a80.468 80.468 0 0 1 70.007-67.593z m416.02 0a80.468 80.468 0 0 1 86.102 75.64v80.468a94.148 94.148 0 0 1-12.07 53.11 80.468 80.468 0 0 1-132.773 0 95.757 95.757 0 0 1-12.875-57.133V519.02a80.468 80.468 0 0 1 70.007-70.812z m0 0" fill="#20B0E3" ></path></symbol><symbol id="icon-yinle" viewBox="0 0 1024 1024"><path d="M512.2976 0a531.2 531.2 0 0 0-512 548.48V960h128V548.48a398.72 398.72 0 0 1 384-411.52 398.72 398.72 0 0 1 384 411.52V960h128V548.48A531.2 531.2 0 0 0 512.2976 0z" fill="#5c8add" ></path><path d="M64.2976 576l256 0 0 448-256 0 0-448Z" fill="#5c8add" ></path><path d="M704.2976 576l256 0 0 448-256 0 0-448Z" fill="#5c8add" ></path></symbol><symbol id="icon-icon-test-copy" viewBox="0 0 1024 1024"><path d="M512 512m-229.517241 0a229.517241 229.517241 0 1 0 459.034482 0 229.517241 229.517241 0 1 0-459.034482 0Z" fill="#5c8add" ></path><path d="M512 1024A512 512 0 1 1 1024 512 512 512 0 0 1 512 1024z m0-141.241379A370.758621 370.758621 0 1 0 141.241379 512 370.758621 370.758621 0 0 0 512 882.758621z" fill="#5c8add" ></path></symbol><symbol id="icon-V" viewBox="0 0 1024 1024"><path d="M1012.47774251 492.58192592L544.94137566 87.22962963a49.96686561 49.96686561 0 0 0-65.88275132 0L11.63784127 492.6975097c-21.03624691 18.26223633-23.3479224 49.93219048-5.08568606 70.96843739 18.03106878 21.03624691 49.93219048 23.3479224 70.96843738 5.08568607L512 191.83294532l434.71057495 376.91868784c9.47786949 8.20644797 21.26741446 12.25188008 32.82579189 12.13629629 14.10122046 0 27.97127337-5.77918871 38.02706173-17.33756613 18.14665256-20.92066314 15.95056084-52.70620106-5.08568606-70.9684374z" fill="#5c8add" ></path><path d="M109.30613051 567.59579541V896.89396825c0 42.53482892 34.90629982 77.44112875 77.44112875 77.44112875h220.76500882V666.30433862c0-25.54401411 20.92066314-46.46467725 46.46467724-46.46467724h116.16169313c25.54401411 0 46.46467725 20.92066314 46.46467725 46.46467724V974.335097h220.76500882c42.53482892 0 77.44112875-34.90629982 77.44112874-77.44112875l0.11558377-329.29817284L512 218.18604586 109.30613051 567.59579541zM848.00203175 197.49655027h-63.91782716c-12.82979894 0-23.23233862 10.40253968-23.23233863 23.23233862v24.27259259l110.49808818 95.70336508V220.72888889h-0.11558377c0-12.82979894-10.40253968-23.23233862-23.23233862-23.23233862zM905.44716754 83.18419754s-34.90629982 56.86721693-89.11508994 100.32671603c152.68616579 13.98563668 127.83565432-133.26809171 127.83565432-133.2680917-134.07717813-10.28695591-132.92134039 102.29164021-131.072 127.83565432 20.92066314-20.92066314 49.70102293-62.64640564 92.35143562-94.89427865zM798.53217637 174.61096297c-19.64924162-16.52847972-40.56990476-43.45949912-51.203612-53.97762258 0 0 32.94137566 20.57391182 56.40488184 49.3542716 2.42725926-18.37782011 6.47269135-93.3916896-93.16052205-85.3008254 0 0-13.98563668 104.71889947 87.95925221 89.92417638z" fill="#5c8add" ></path></symbol><symbol id="icon-zhifeiji" viewBox="0 0 1167 1024"><path d="M41.201759 463.52493L1110.665064 30.117647c10.32605-4.159104 21.942857 0.860504 26.101961 11.043137 1.434174 3.728852 1.864426 7.744538 1.003921 11.616807L949.033691 978.823529c-2.151261 10.89972-12.764146 17.927171-23.663865 15.632493-2.72493-0.573669-5.306443-1.721008-7.601121-3.298599L634.80624 789.79944l-163.065546 133.951821c-16.492997 13.62465-40.87395 11.186555-54.498599-5.306443-3.011765-3.728852-5.306443-7.887955-6.884034-12.477311l-102.973669-313.080112-265.178712-91.787115c-10.469468-3.585434-16.062745-15.058824-12.333893-25.528291 1.864426-5.44986 6.023529-9.895798 11.329972-12.047059z" fill="#FCFDFC" ></path><path d="M929.385512 1023.569748c-3.155182 0-6.453782-0.286835-9.752381-1.003922-6.740616-1.434174-12.907563-4.015686-18.50084-8.031372L635.953579 825.940616l-146.142297 120.040336c-13.911485 11.473389-31.408403 16.779832-49.335574 15.058824-17.927171-1.721008-34.133333-10.32605-45.463305-24.237535-5.306443-6.453782-9.322129-13.768067-11.903642-21.79944l-98.527731-299.598879-251.697479-87.19776c-12.333894-4.302521-22.229692-13.05098-27.966386-24.811204s-6.453782-24.954622-2.151261-37.288515c4.589356-13.337815 14.771989-23.9507 27.82297-29.257143L1099.908761 3.585434c24.954622-10.039216 53.351261 2.007843 63.533894 26.819048 3.585434 8.891877 4.445938 18.644258 2.581513 28.109804L977.143495 984.560224c-4.732773 23.090196-25.098039 39.009524-47.757983 39.009524z m-294.579272-233.770308l282.962465 201.357983c2.294678 1.577591 4.87619 2.72493 7.601121 3.298599 10.89972 2.151261 21.512605-4.87619 23.663865-15.632493L1137.914364 52.777591c0.860504-3.872269 0.430252-7.887955-1.003922-11.616807-4.159104-10.32605-15.919328-15.202241-26.101961-11.043137L41.201759 463.52493c-5.306443 2.151261-9.465546 6.597199-11.47339 12.047059-1.721008 5.019608-1.434174 10.469468 0.860505 15.345658 2.294678 4.87619 6.453782 8.461625 11.473389 10.182633l265.178711 91.787115L410.214644 905.967507c1.434174 4.589356 3.872269 8.748459 6.884033 12.477311 6.597199 8.031373 15.919328 12.907563 26.101961 13.911485 10.32605 1.003922 20.365266-2.007843 28.396639-8.605042l163.208963-133.951821z" fill="#4A4A4A" ></path><path d="M307.097557 592.743978l105.698599 316.091876c6.310364 18.787675 26.532213 28.970308 45.319888 22.659944 4.159104-1.434174 7.887955-3.442017 11.186555-6.166946l164.786555-133.951821-165.360224-118.892997c297.017367-287.982073 447.462185-433.980952 451.191036-437.853222 0.573669-0.573669 2.581513-3.442017 0.430252-7.027451-1.290756-1.577591-3.298599-3.298599-7.027451-2.15126-202.218487 120.327171-404.293557 242.805602-606.22521 367.291877z" fill="#CAE0EE" ></path><path d="M446.786072 934.794398c-5.736695 0-11.329972-1.290756-16.636414-3.872269-8.891877-4.445938-15.632493-12.047059-18.787675-21.512605L305.376549 592.313725l1.003921-0.573669C507.308201 467.684034 711.391114 344.058263 912.60568 224.161345l0.286835-0.143418c3.585434-1.147339 6.310364-0.286835 8.605042 2.581513l0.143417 0.143417c2.438095 4.015686 0.573669 7.457703-0.573669 8.74846-3.872269 4.015686-155.177591 150.87507-450.043698 436.705882l165.503642 119.036414-166.220728 135.09916c-3.442017 2.868347-7.457703 5.019608-11.760225 6.453782-3.728852 1.290756-7.744538 2.007843-11.760224 2.007843z m-137.967507-341.333334l105.268348 314.944538c2.868347 8.748459 9.035294 15.77591 17.210084 19.935014 8.17479 4.159104 17.496919 4.732773 26.245378 1.864426 3.872269-1.290756 7.60112-3.298599 10.756302-5.880112l163.352381-132.804482L466.434252 672.627451l1.290756-1.147339C763.308201 384.932213 915.043775 237.642577 918.772627 233.626891c0 0 2.007843-2.294678 0.286835-5.306443-1.003922-1.290756-2.438095-2.438095-5.306443-1.577591-200.784314 119.610084-404.293557 242.94902-604.934454 366.718207z" fill="#CAE0EE" ></path><path d="M460.840974 924.898599l7.457703-253.561904 165.933894 119.896918-168.658824 135.959664c-1.290756 1.003922-3.011765 0.860504-4.015686-0.430252-0.430252-0.430252-0.717087-1.147339-0.717087-1.864426z" fill="#94C3E2" ></path><path d="M463.709322 929.344538c-1.290756 0-2.438095-0.573669-3.2986-1.577591-0.573669-0.860504-1.003922-1.864426-1.003921-2.868348l7.60112-256.286834 169.519328 122.621848-1.434174 1.147339-168.658823 135.959664c-0.860504 0.717087-1.721008 1.003922-2.72493 1.003922z m6.023529-255.282913l-7.457703 250.836974c0 0.286835 0.143417 0.717087 0.286835 1.003922 0.430252 0.573669 1.434174 0.717087 2.007843 0.286835l167.22465-134.812325-162.061625-117.315406z" fill="#94C3E2" ></path></symbol><symbol id="icon-lianjie" viewBox="0 0 1079 1024"><path d="M695.355535 432.666896c-0.553495-1.10699-0.885592-2.186305-1.383737-3.265619-0.193723-0.193723-0.193723-0.359772-0.359771-0.719543-12.508983-26.318678-39.436506-43.366319-69.325226-41.013966-39.076734 3.265619-68.439634 39.021384-65.312388 79.841627 0.857917 10.516401 3.653066 20.147211 7.998 28.83708 19.78744 46.659613 11.097571 103.448181-25.377737 141.750022l-191.094085 199.950001a118.088119 118.088119 0 0 1-171.998513 0c-47.434506-49.537786-47.434506-130.098956 0-179.636742l71.234782-74.389703-0.52582-0.553494a75.911814 75.911814 0 0 0 24.326097-61.880721c-3.127246-40.820243-37.3609-71.51153-76.437634-68.24591a69.463599 69.463599 0 0 0-46.908685 23.966325l-0.166049-0.193723-72.618519 75.856464c-103.226783 107.793115-103.226783 282.36538 0 390.158495 103.171433 107.793115 270.299193 107.793115 373.498301 0l191.619904-200.1714c80.256748-83.992838 97.636485-208.307773 52.83108-310.289193z" fill="#5c8add" ></path><path d="M1002.047012 80.865592c-103.226783-107.82079-270.382217-107.82079-373.581325 0l-191.619905 200.199075c-80.284423 83.854464-97.66416 208.197074-52.997128 310.233843 0.52582 1.079315 0.857917 2.15863 1.383737 3.26562 0.166048 0.166048 0.166048 0.359772 0.332097 0.719543 12.536658 26.291004 39.46418 43.366319 69.3529 41.013966 39.076734-3.265619 68.439634-39.021384 65.312388-79.869302a78.679288 78.679288 0 0 0-7.998-28.864755c-19.78744-46.631938-11.097571-103.448181 25.377737-141.750022l191.287808-199.839302a118.088119 118.088119 0 0 1 172.026188 0c47.434506 49.537786 47.434506 130.126631 0 179.692091l-71.234782 74.417378 0.52582 0.553495a75.939489 75.939489 0 0 0-24.353772 61.88072c3.15492 40.847917 37.3609 71.51153 76.465309 68.245911a69.463599 69.463599 0 0 0 46.908685-23.938651l0.166049 0.166048 72.646194-75.856464c103.03306-107.82079 103.03306-282.642127 0-390.269194z" fill="#5c8add" ></path></symbol><symbol id="icon-liaotian" viewBox="0 0 1171 1024"><path d="M1068.71699 0.243751H102.193768C46.228437 0.243751 0.500666 45.045267 0.500666 99.74309v696.251622c0 54.697824 45.727771 99.450589 101.693102 99.450589h329.113198l120.851966 114.465677a48.652788 48.652788 0 0 0 66.641644 0l120.851966-114.465677h329.064448c55.965331 0 101.741852-44.752765 101.741852-99.450589V99.74309C1170.458842 45.045267 1124.682321 0.243751 1068.71699 0.243751z m-439.776354 596.849784h-370.989696c-27.933915 0-50.846551-22.425133-50.846551-49.774045 0-27.348912 22.912636-49.725294 50.846551-49.725294h370.989696c27.933915 0 50.846551 22.376382 50.846551 49.725294 0 27.348912-22.912636 49.774045-50.846551 49.774045z m287.18795-211.381252H254.782171a50.456549 50.456549 0 0 1-50.846551-49.725294c0-27.397662 22.912636-49.774045 50.846551-49.774045h661.346415c27.933915 0 50.846551 22.376382 50.846551 49.774045 0 27.348912-22.912636 49.725294-50.846551 49.725294z" fill="#5C8ADD" ></path></symbol><symbol id="icon-xinfeng" viewBox="0 0 1400 1024"><path d="M1301.63733163 214.78520234a207.81921797 207.81921797 0 0 1 7.02423018 52.42036465v489.73590176a205.10753818 205.10753818 0 0 1-205.05853125 205.05853125H283.05853124A205.15654424 205.15654424 0 0 1 77.99999999 756.79444971V267.20556699a201.36672685 201.36672685 0 0 1 7.02423106-52.42036465L586.24393329 562.1905874c69.44187217 51.96297217 146.36536612 49.13694404 214.1736961 0zM1103.60303056 62.0000167H283.05853124A204.50312753 204.50312753 0 0 0 106.37462518 163.41030547l489.71956641 335.75823018c62.43397646 50.77048623 127.85733457 50.31309463 194.62019765 0L1280.28693749 163.41030547A204.68281729 204.68281729 0 0 0 1103.60303056 62.0000167z m0 0" fill="#5c8add" ></path></symbol><symbol id="icon-QQ1" viewBox="0 0 1024 1024"><path d="M0 512a512 512 0 1 0 1024 0A512 512 0 1 0 0 512z" fill="#18ACFC" ></path><path d="M500.113 228.39c118.396-1.518 178.924 61.004 201 156 3.497 15.048 0.15 34.807 0 50 27.143 5.682 33.087 60.106 10 75v1h1c8.26 14.33 19.04 28.125 26 44 7.332 16.723 9.306 35.16 14 55 4.024 17.01-2.287 51.505-10 57-0.771 0.683-2.231 1.312-3 2-14.601-3.016-30.377-16.865-38-27-3.065-4.074-5.275-9.672-10-12-0.395 21.568-12.503 41.15-22 55-3.514 5.123-14.073 13.217-14 18 3.691 2.836 8.305 2.956 13 5 10.513 4.577 25.449 13.168 32 22 2.334 3.146 5.548 7.555 7 11 16.193 38.414-36.527 48.314-63 54-27.185 5.839-77.818-10.224-92-19-8.749-5.414-16.863-18.573-29-19-3.666 2.389-14.438 1.132-20 1-16.829 32.804-101.913 47.868-148 31-14.061-5.146-43.398-17.695-38-40 4.437-18.327 19.947-29.224 35-37 5.759-2.975 18.915-4.419 22-10-13.141-8.988-24.521-28.659-31-44-3.412-8.077-4.193-25.775-9-32-7.789 12.245-32.097 36.91-52 33-3.071-4.553-7.213-9.097-9-15-4.792-15.835-1.81-40.379 2-54 8.117-29.02 16.965-50.623 32-72 4.672-6.643 11.425-12.135 16-19-8.945-9.733-6.951-37.536-1-49 4.002-7.709 9.701-7.413 10-20-1.92-3.022-0.071-8.604-1-13-4.383-20.75 3.273-47.552 9-63 19.8-53.421 53.712-90.466 105-112 11.986-5.033 25.833-7.783 39-11 5.322-1.3 11.969 0.518 16-2z" fill="#FFFFFF" ></path></symbol><symbol id="icon-rss" viewBox="0 0 1024 1024"><path d="M749.61196492 908.06119793C749.61196492 560.41848146 463.58151854 274.36328126 115.93880207 274.36328126V115.93880207c434.50388795 0 792.12239584 357.61850789 792.12239586 792.12239586zM224.55858562 690.72261555a108.91682943 108.91682943 0 0 1 108.69404499 108.74355267C333.25263061 859.29616292 284.24005737 908.06119793 224.31104736 908.06119793 164.48105265 908.06119793 115.96355592 859.41993206 115.96355592 799.46616822s48.69077351-108.71879883 108.61978351-108.74355267zM641.01693522 908.06119793h-153.96879069c0-203.60020956-167.50913289-371.13409627-371.10934246-371.13409629v-153.96879068c288.03550619 0 525.07813313 237.11688843 525.07813315 525.10288697z" fill="#FFA500" ></path></symbol><symbol id="icon-youxiang" viewBox="0 0 1024 1024"><path d="M583.60666667 972h-68.08c-8.43333333 0-15.33333333-6.9-15.33333334-15.33333333V609.52c0-8.43333333 6.9-15.33333333 15.33333334-15.33333333h68.08c8.43333333 0 15.33333333 6.9 15.33333333 15.33333333V956.66666667c0 8.43333333-6.9 15.33333333-15.33333333 15.33333333z" fill="#629FF9" ></path><path d="M294.42 167c-113.62 0-205.77333333 92-205.77333333 205.31333333v336.72h411.39333333V372.31333333c0.15333333-113.31333333-92-205.31333333-205.62-205.31333333z" fill="#2166CC" ></path><path d="M519.97333333 627H216.98666667c-25.45333333 0-46-20.54666667-46-46V393.78c0-25.45333333 20.54666667-46 46-46h302.98666666c25.45333333 0 46 20.54666667 46 46V581c0 25.45333333-20.54666667 46-46 46z" fill="#D2E4FF" ></path><path d="M565.97333333 397a49.22 49.22 0 0 0-49.37333333-49.22H220.36c-27.29333333 0-49.37333333 22.08-49.37333333 49.22v10.27333333l179.4 94.60666667c11.34666667 5.98 24.84 5.98 36.18666666 0l179.4-94.60666667v-10.27333333z" fill="#FFFFFF" ></path><path d="M730.5 167h-427.8v0.46c109.78666667 4.29333333 197.49333333 94.3 197.49333333 205.00666667v336.72h411.39333334c27.29333333 0 49.37333333-22.08 49.37333333-49.22V397c0-126.96-103.19333333-230-230.46-230z" fill="#4E8DF6" ></path><path d="M845.80666667 52H681.12666667c-9.04666667 0-16.40666667 7.36-16.40666667 16.40666667v336.72a24.67133333 24.67133333 0 1 0 49.37333333 0V134.18666667h131.71333334c9.04666667 0 16.40666667-7.36 16.40666666-16.40666667V68.40666667c0-9.04666667-7.36-16.40666667-16.40666666-16.40666667z" fill="#2166CC" ></path><path d="M896.25333333 659.81333333h-35.11333333c-8.43333333 0-15.33333333-6.9-15.33333333-15.33333333v-35.11333333c0-8.43333333 6.9-15.33333333 15.33333333-15.33333334h35.11333333c8.43333333 0 15.33333333 6.9 15.33333334 15.33333334v35.11333333c0 8.58666667-6.9 15.33333333-15.33333334 15.33333333z" fill="#FFFFFF" ></path><path d="M88.8 709.18666667l-24.22666667 131.40666666c-9.66 54.43333333 26.83333333 98.59333333 81.26666667 98.59333334h213.9c54.58666667 0 106.56666667-44.16 116.22666667-98.59333334l23.15333333-131.40666666H88.8z" fill="#2974CE" ></path></symbol><symbol id="icon-gitHub" viewBox="0 0 1049 1024"><path d="M523.6581816 52C262.83923907 52 52 262.8401375 52 523.6581816c0 208.49703047 135.09433812 384.97758117 322.50789391 447.44906532 23.42658172 4.68531653 32.01647887-10.15136894 32.01647796-22.64584583 0-10.93210574-0.78163433-48.41463703-0.78163433-87.45953855-131.18885996 28.11189824-158.5200223-56.22379738-158.52002231-56.22379739-21.08437312-54.66232469-52.3201152-68.71827336-52.3201152-68.71827335-42.94858371-28.89353348 3.12384382-28.89353348 3.12384384-28.89353348 47.63479867 3.12384382 72.62285398 48.41643391 72.62285398 48.4164339 42.16784782 71.84121875 110.10538527 51.53758242 137.43654672 39.04400399 3.90457972-30.45500618 16.3990566-51.5393793 29.67427028-63.25222094-104.64023039-10.93300418-214.74561566-51.53848086-214.74561657-232.70524742 0-51.53848086 18.74126609-93.70632867 48.4164339-126.50444187-4.68621496-11.71284164-21.08527156-60.12837711 4.6844181-124.94207075 0 0 39.82563922-12.49447688 129.62738726 48.41463704 37.48253129-10.15136894 78.08980484-15.61742227 117.91454562-15.61742137s80.43201433 5.46605242 117.91454473 15.61742137c89.80264648-60.90911391 129.62828571-48.41463703 129.62828571-48.41463704 25.76879122 64.81369363 9.37063305 113.22922911 4.68531651 124.94207075 30.45410773 32.79721477 48.41463703 74.96506258 48.41463703 126.50444187 0 181.16676656-110.10538527 220.99150644-215.52545401 232.70524742 17.1797934 14.83668547 32.01647887 42.94858371 32.01647886 87.45953946 0 63.25222094-0.78163433 114.009965-0.78163523 129.62738636 0 12.49447688 8.59079468 27.33116234 32.01737731 22.64584583 187.41265734-62.4705866 322.50699547-238.95203574 322.50699546-447.44996375C995.31636231 262.8401375 783.69369203 52 523.6581816 52z" fill="#663399" ></path><path d="M230.82365863 729.03136735c-0.7807359 2.34310703-4.68531653 3.12384382-7.80916035 1.56237113s-5.46605242-4.68531653-3.90368129-7.02842356c0.7807359-2.34220859 4.68531653-3.12384382 7.80826192-1.56147269s4.68531653 4.68531653 3.90457972 7.02752512z m18.7412661 21.08437312c-2.34220859 2.34220859-7.02752512 0.78163433-9.37063305-2.34310703-3.12294539-3.12294539-3.90457972-7.80826192-1.5614727-10.15136894 2.34220859-2.34220859 6.24678922-0.7807359 9.37063305 2.34310702 3.12384382 3.90457972 3.90457972 8.58899782 1.5614727 10.15136895zM268.30618992 777.44690281c-3.12294539 2.34220859-7.80826192 0-10.15136895-3.90457972-3.12384382-3.90457972-3.12384382-9.37063305 0-10.93210574 3.12384382-2.34310703 7.80916035 0 10.15226739 3.90457972 3.12294539 3.90368129 3.12294539 8.58899782 0 10.93210574z m25.76968965 26.55042555c-2.34220859 3.12294539-7.80916035 2.34220859-12.49447688-1.56237113-3.90457972-3.90368129-5.46605242-9.37063305-2.34220859-11.71284164 2.34220859-3.12384382 7.80826192-2.34310703 12.49447687 1.56147269 3.90368129 3.12384382 4.68531653 8.58989625 2.3422086 11.71374008z m35.1403227 14.83668637c-0.78163433 3.90457972-6.24768766 5.46605242-11.71374008 3.90457972-5.46605242-1.5614727-8.58899782-6.24768766-7.80916036-9.37063305 0.78163433-3.90457972 6.24768766-5.46605242 11.71374009-3.90457972 5.46605242 1.5614727 8.58899782 5.46605242 7.80916035 9.37063305z m38.26416562 3.12384382c0 3.90457972-4.68621496 7.02752512-10.15226738 7.02752512-5.46605242 0-10.15226738-3.12294539-10.15226739-7.02752512s4.68621496-7.02842356 10.15226739-7.02842445c5.46605242 0 10.15226738 3.12384382 10.15226738 7.02842445z m35.92016106-6.24768766c0.78163433 3.90457972-3.12384382 7.80916035-8.58899872 8.58989625-5.46695086 0.78163433-10.15226738-1.5614727-10.93390172-5.46605241-0.77983747-3.90457972 3.12384382-7.80916035 8.5907947-8.58899872 5.46605242-0.78163433 10.15136894 1.56057426 10.93210574 5.46515488z m0 0" fill="#663399" ></path></symbol><symbol id="icon-bilibili" viewBox="0 0 1024 1024"><path d="M832.61667555 181.33447111h-164.32545185l74.45617778-74.45617778c12.84020148-12.84020148 12.84020148-30.8140563 0-43.65425778-12.84020148-12.84020148-30.8140563-12.84020148-43.65425778 0L573.2882963 189.04101925H450.04420741L324.2272237 63.23617185c-10.26730667-12.84020148-25.68040297-15.40096-41.08136295-7.70654815-2.57289482 0-2.57289482 2.57289482-5.13365334 5.13365333-12.84020148 12.84020148-12.84020148 30.8140563 0 43.65425779l77.02907259 77.02907259h-164.32545185c-89.86927408 0-164.32545185 74.45617778-164.32545185 164.32545184v408.24073483c0 87.29637925 74.45617778 161.75255703 164.32545185 161.75255703h25.68040296c0 30.8140563 25.68040297 53.92156445 53.92156444 53.92156444s53.92156445-25.68040297 53.92156445-53.92156444H704.23893333c2.57289482 30.8140563 28.24116148 53.92156445 59.05521778 51.34866964 28.24116148-2.57289482 48.78791111-23.10750815 51.34866964-51.34866964h20.53461333c89.86927408 0 164.32545185-74.45617778 164.32545184-164.32545186V343.09916445c-2.56075852-89.86927408-77.02907259-161.76469333-166.88621037-161.76469334z m-5.13365333 634.19429926H200.99527111c-33.37481482 0-59.05521778-28.24116148-61.61597629-61.61597629l-2.57289482-415.94728297c0-33.37481482 28.24116148-61.6159763 61.6159763-61.61597629h626.48775111c33.37481482 0 59.05521778 28.24116148 61.61597629 61.61597629l2.57289482 415.94728297c-2.57289482 35.93557333-28.24116148 61.6159763-61.6159763 61.61597629z" fill="#ff7299" ></path><path d="M403.82919111 417.55534222l15.40096 77.0290726-205.40681481 38.50846815-15.40096-77.0290726 205.40681481-38.50846815z m197.70026667 77.0290726l15.40096-77.0290726 205.40681481 38.50846815-15.40096 77.0290726-205.40681481-38.50846815z m41.08136297 161.75255703c0 2.57289482 0 7.70654815-2.57289483 10.26730667-12.84020148 28.24116148-41.08136297 46.2150163-74.45617777 48.78791111-20.53461333 0-41.08136297-10.26730667-53.92156445-25.68040296-15.40096 15.40096-33.37481482 25.68040297-53.92156445 25.68040296-30.8140563-2.57289482-59.05521778-20.53461333-74.45617777-48.78791111 0-2.57289482-2.57289482-5.13365333-2.57289481-10.26730667 0-10.26730667 7.70654815-17.97385482 17.97385481-20.53461333h2.57289482c7.70654815 0 12.84020148 2.57289482 15.40096 10.26730666 0 0 20.53461333 28.24116148 38.50846815 28.24116149 35.94770963 0 35.94770963-30.8140563 56.48232296-53.92156445 23.10750815 25.68040297 23.10750815 53.92156445 56.48232296 53.92156445 23.10750815 0 38.50846815-28.24116148 38.50846815-28.24116149 2.57289482-5.13365333 10.26730667-10.26730667 15.40096-10.26730666 10.26730667-2.57289482 17.97385482 5.13365333 20.53461333 15.40096v5.13365333h0.0364089z" fill="#ff7299" ></path></symbol></svg>',o=(o=document.getElementsByTagName("script"))[o.length-1].getAttribute("data-injectcss"),d=function(c,l){l.parentNode.insertBefore(c,l)};if(o&&!c.__iconfont__svg__cssinject__){c.__iconfont__svg__cssinject__=!0;try{document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>")}catch(c){console&&console.log(c)}}function m(){i||(i=!0,a())}function p(){try{t.documentElement.doScroll("left")}catch(c){return void setTimeout(p,50)}m()}l=function(){var c,l=document.createElement("div");l.innerHTML=v,v=null,(l=l.getElementsByTagName("svg")[0])&&(l.setAttribute("aria-hidden","true"),l.style.position="absolute",l.style.width=0,l.style.height=0,l.style.overflow="hidden",l=l,(c=document.body).firstChild?d(l,c.firstChild):c.appendChild(l))},document.addEventListener?~["complete","loaded","interactive"].indexOf(document.readyState)?setTimeout(l,0):(h=function(){document.removeEventListener("DOMContentLoaded",h,!1),l()},document.addEventListener("DOMContentLoaded",h,!1)):document.attachEvent&&(a=l,t=c.document,i=!1,p(),t.onreadystatechange=function(){"complete"==t.readyState&&(t.onreadystatechange=null,m())})}(window);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime/runtime.js"/>
      <url>/js/runtime/runtime.js</url>
      
        <content type="html"><![CDATA[var now = new Date;function createtime() {  var t = new Date("11/16/2024 14:00:00");  now.setTime(now.getTime() + 250);  var e = (now - t) / 1e3 / 60 / 60 / 24, a = Math.floor(e), n = (now - t) / 1e3 / 60 / 60 - 24 * a, r = Math.floor(n); 1 == String(r).length && (r = "0" + r);  var s = (now - t) / 1e3 / 60 - 1440 * a - 60 * r, i = Math.floor(s); 1 == String(i).length && (i = "0" + i); var o = (now - t) / 1e3 - 86400 * a - 3600 * r - 60 * i, l = Math.round(o);  1 == String(l).length && (l = "0" + l); let g = "";  g = r < 18 && r >= 9 ? `<span class='textTip'> <br> 本站居然运行了 ${a} 天</span><span id='runtime'> ${r} 小时 ${i} 分 ${l} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>` : `<span class='textTip'> <br> 本站居然运行了 ${a} 天</span><span id='runtime'> ${r} 小时 ${i} 分 ${l} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`, document.getElementById("workboard") && (document.getElementById("workboard").innerHTML = g)}setInterval((() => { createtime() }), 250);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime/runtime.min.js"/>
      <url>/js/runtime/runtime.min.js</url>
      
        <content type="html"><![CDATA[var now=new Date;function createtime(){var t=new Date("11/16/2024 14:00:00");now.setTime(now.getTime()+250);var e=(now-t)/1e3/60/60/24,a=Math.floor(e),n=(now-t)/1e3/60/60-24*a,r=Math.floor(n);1==String(r).length&&(r="0"+r);var s=(now-t)/1e3/60-1440*a-60*r,i=Math.floor(s);1==String(i).length&&(i="0"+i);var o=(now-t)/1e3-86400*a-3600*r-60*i,l=Math.round(o);1==String(l).length&&(l="0"+l);let g="";g=`<span class='textTip'> <br> 本站居然运行了 ${a} 天</span><span id='runtime'> ${r} 小时 ${i} 分 ${l} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`,document.getElementById("workboard")&&(document.getElementById("workboard").innerHTML=g)}setInterval(()=>{createtime()},250);]]></content>
      
    </entry>
    
    
  
</search>
